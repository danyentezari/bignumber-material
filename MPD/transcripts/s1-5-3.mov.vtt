WEBVTT - This file was automatically generated by VIMEO

0
00:00:00.100 --> 00:00:02.800
Now, let's continue and cover some key terminology with.

1
00:00:10.300 --> 00:00:11.100
data structures

2
00:00:13.700 --> 00:00:15.100
in Python we have

3
00:00:18.200 --> 00:00:20.200
four primitive data structures

4
00:00:22.800 --> 00:00:25.000
You can of course use classes to create your own

5
00:00:25.300 --> 00:00:28.100
 data structures, but on python there are four for you to

6
00:00:28.100 --> 00:00:28.400
 get started with.

7
00:00:38.300 --> 00:00:38.900
They are lists.

8
00:00:40.800 --> 00:00:41.800
We have two poles.

9
00:00:44.800 --> 00:00:47.600
such and number four dictionaries

10
00:00:49.500 --> 00:00:52.400
Let's begin with lists and cover some key terminology.

11
00:00:53.100 --> 00:00:55.000
So a list is a collection of

12
00:00:56.100 --> 00:00:56.700
elements

13
00:00:57.300 --> 00:01:00.100
and what element has a special meeting?

14
00:01:00.800 --> 00:01:01.800
So say you have a

15
00:01:03.100 --> 00:01:04.000
sequence of prices

16
00:01:05.100 --> 00:01:08.200
One thing 100 200 450 just some

17
00:01:08.200 --> 00:01:08.700
 random values.

18
00:01:11.100 --> 00:01:14.500
Put the between square brackets and you have credit yourself

19
00:01:14.500 --> 00:01:15.100
 based.

20
00:01:15.900 --> 00:01:17.200
We call the elements of a list.

21
00:01:20.600 --> 00:01:21.700
the members of a list

22
00:01:22.600 --> 00:01:23.100
elements

23
00:01:24.400 --> 00:01:26.600
and let's assign this list a well. Let's

24
00:01:27.900 --> 00:01:28.500
assign

25
00:01:29.500 --> 00:01:32.400
this entire list to a variable. We'll call this prices.

26
00:01:34.700 --> 00:01:35.000
Okay.

27
00:01:35.900 --> 00:01:38.000
An element has two.

28
00:01:39.700 --> 00:01:41.200
properties one of them is

29
00:01:43.300 --> 00:01:45.500
we can see around in front of us in the other one is implied.

30
00:01:46.700 --> 00:01:48.700
So we have something called key and value.

31
00:01:50.600 --> 00:01:53.500
And we have a special type of key. Okay, so

32
00:01:53.500 --> 00:01:56.200
 just quick quick terminology. We have something called

33
00:01:56.200 --> 00:01:56.400
 an element.

34
00:01:57.100 --> 00:01:59.000
Which is a member of some sort of data structure.

35
00:01:59.800 --> 00:02:02.200
And in every element we have every element has two

36
00:02:02.200 --> 00:02:05.800
 characteristics. There's something called key and value and the

37
00:02:05.800 --> 00:02:07.200
 special type of key called index.

38
00:02:08.900 --> 00:02:11.500
A key is how you're able

39
00:02:11.500 --> 00:02:13.000
 to retrieve the value of an element.

40
00:02:14.400 --> 00:02:17.300
But if the keys are arranged in a certain way you can

41
00:02:17.300 --> 00:02:20.100
 oh well if they are numbered and linear.

42
00:02:20.900 --> 00:02:21.700
and in

43
00:02:23.100 --> 00:02:26.500
incremented by one we call that special type of key and

44
00:02:30.100 --> 00:02:30.700
and index

45
00:02:31.500 --> 00:02:34.000
let's look at examples of both keys and keys and indices.

46
00:02:34.700 --> 00:02:38.100
So what are the what are the indices? What are the keys of?

47
00:02:39.100 --> 00:02:40.100
these four elements well

48
00:02:41.200 --> 00:02:42.000
This one is zero.

49
00:02:43.100 --> 00:02:46.900
This one is one two and three, of

50
00:02:46.900 --> 00:02:49.900
 course in programming. We always count from zero.

51
00:02:51.100 --> 00:02:51.400
All right.

52
00:02:52.800 --> 00:02:54.500
So this entire thing is the limit element.

53
00:02:55.900 --> 00:02:59.200
Okay, we cannot see the keys when

54
00:02:59.200 --> 00:03:01.700
 we have a list.

55
00:03:02.500 --> 00:03:02.700
but

56
00:03:04.100 --> 00:03:04.900
that is implied.

57
00:03:05.500 --> 00:03:08.700
Every element is associated with a key. And

58
00:03:08.700 --> 00:03:11.700
 now when your keys are in this form that where

59
00:03:11.700 --> 00:03:14.700
 they begin with zero and they go and increments of what we call those keys indices.

60
00:03:14.700 --> 00:03:17.000
 Okay, so they're not exactly interchangeable.

61
00:03:19.300 --> 00:03:21.000
And how do we access a particular element?

62
00:03:21.900 --> 00:03:22.500
of a list

63
00:03:24.200 --> 00:03:27.400
well, we type in the variable that is

64
00:03:27.400 --> 00:03:31.000
 refreshing to that list open a pair of square brackets and

65
00:03:30.000 --> 00:03:31.100
 then

66
00:03:31.900 --> 00:03:34.200
type in the corresponding key for that

67
00:03:34.200 --> 00:03:37.400
 element. So if you want to print 450

68
00:03:38.200 --> 00:03:41.400
Or let's say you want to know what is the last price on this list? You would

69
00:03:41.400 --> 00:03:43.900
 type in the corresponding key, which is three.

70
00:03:45.700 --> 00:03:46.600
easy enough, right
