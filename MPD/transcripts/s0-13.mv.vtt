WEBVTT - This file was automatically generated by VIMEO

0
00:00:00.200 --> 00:00:02.900
Now, let's go ahead and switch to vs code and let's do a brief.

1
00:00:03.600 --> 00:00:05.600
tutorial in discrete mathematics

2
00:00:08.400 --> 00:00:11.300
So these are the topics that we are going to cover. First of

3
00:00:11.300 --> 00:00:14.100
 all, this is vs code. It is

4
00:00:14.100 --> 00:00:15.000
 a IDE.

5
00:00:16.900 --> 00:00:20.200
Which stands for integrated development environment you

6
00:00:19.200 --> 00:00:21.900
 can download this from Microsoft?

7
00:00:24.300 --> 00:00:27.600
but basically what I have here in the left and the

8
00:00:27.600 --> 00:00:28.100
 left panel

9
00:00:28.900 --> 00:00:31.400
Is a markdown file which allows me

10
00:00:31.400 --> 00:00:33.600
 to, you know create?

11
00:00:34.400 --> 00:00:37.300
So first of all in the left, we have I have

12
00:00:37.300 --> 00:00:41.200
 a markdown file on the right panel. I have a preview

13
00:00:40.200 --> 00:00:43.000
 of the markdown file. So this

14
00:00:43.100 --> 00:00:43.600
 is a render.

15
00:00:44.500 --> 00:00:47.300
Of what I have on the left. So basically I can use

16
00:00:47.300 --> 00:00:50.800
 three Ampersand signs to create a level three

17
00:00:50.800 --> 00:00:53.800
 heading I can use dashes to

18
00:00:53.800 --> 00:00:56.500
 create a bullet point and then I can use the

19
00:00:56.500 --> 00:00:58.900
 latex. This is called lady. You see these dollar signs.

20
00:01:01.600 --> 00:01:05.200
They allow me to write or type out mathematical symbols.

21
00:01:04.200 --> 00:01:07.500
 So it's a much neater than

22
00:01:07.500 --> 00:01:08.200
 writing it on.

23
00:01:09.400 --> 00:01:10.400
a Blackboard

24
00:01:12.700 --> 00:01:16.300
But yeah, basically what we have

25
00:01:16.300 --> 00:01:19.300
 on the left is a markdown file

26
00:01:19.300 --> 00:01:22.000
 you if you look at the video description, you'll see

27
00:01:22.400 --> 00:01:22.700
 where they find this.

28
00:01:23.500 --> 00:01:24.300
and on the right

29
00:01:26.200 --> 00:01:27.700
we have the the preview.

30
00:01:29.500 --> 00:01:30.600
that's actually just switch to the

31
00:01:33.800 --> 00:01:36.300
preview itself again. This will be a very short

32
00:01:36.300 --> 00:01:37.400
 tutorial if you want to.

33
00:01:38.400 --> 00:01:41.100
Go into all of these in more depth check out

34
00:01:41.100 --> 00:01:41.800
 the video description.

35
00:01:44.300 --> 00:01:47.600
So we'll cover sets functions some properties

36
00:01:47.600 --> 00:01:50.100
 propositional calculus relations, and then I

37
00:01:50.100 --> 00:01:52.000
 will switch to show you graphs visually.

38
00:01:52.600 --> 00:01:56.000
That would be more efficient way to understand graphs.

39
00:01:56.700 --> 00:01:59.700
Okay. Now there are many simple other symbols in

40
00:01:59.700 --> 00:02:00.600
 discrete mathematics.

41
00:02:01.300 --> 00:02:04.300
I'm only going to show you a handful of

42
00:02:04.300 --> 00:02:04.500
 these.

43
00:02:06.100 --> 00:02:08.300
Okay, so these are the symbols.

44
00:02:09.100 --> 00:02:12.400
The names of these symbols and I'll show you how to

45
00:02:12.400 --> 00:02:13.100
 be used.

46
00:02:13.900 --> 00:02:16.500
So I said as what I said

47
00:02:16.500 --> 00:02:17.400
 as a mathematical structure.

48
00:02:18.200 --> 00:02:20.500
That is it as a collection of objects to which.

49
00:02:21.500 --> 00:02:22.500
some rules apply

50
00:02:24.500 --> 00:02:26.300
now if you look here.

51
00:02:28.100 --> 00:02:29.800
we have a set a

52
00:02:30.800 --> 00:02:32.900
and you can see that it's pretty straightforward to.

53
00:02:35.400 --> 00:02:36.800
Define a set of mathematics.

54
00:02:37.800 --> 00:02:40.200
And once again you have your curly brackets, you have your

55
00:02:40.200 --> 00:02:43.400
 objects. In this case. We have numbers and then you assign to

56
00:02:43.400 --> 00:02:47.200
 it a variable here. We have a now sets

57
00:02:46.200 --> 00:02:50.400
 of course can also contain other objects.

58
00:02:49.400 --> 00:02:52.200
 So they don't have to be numbers. So for example,

59
00:02:52.200 --> 00:02:52.700
 here we have

60
00:02:55.900 --> 00:02:58.200
five six which are integers and then we have

61
00:02:58.200 --> 00:02:59.100
 the set a

62
00:02:59.700 --> 00:03:01.400
or a set containing the set a

63
00:03:02.100 --> 00:03:05.400
the function f which is defined down here and we

64
00:03:05.400 --> 00:03:07.500
 have some Vector B, whatever that is.

65
00:03:08.100 --> 00:03:13.000
so just like in python or other program languages where

66
00:03:11.200 --> 00:03:13.200
 you can

67
00:03:14.500 --> 00:03:15.100
declare an array

68
00:03:15.800 --> 00:03:18.400
and put mixed data types in the

69
00:03:18.400 --> 00:03:20.000
 array you can do the same thing in mathematics.

70
00:03:21.800 --> 00:03:22.800
Okay, this is not.

71
00:03:24.400 --> 00:03:27.400
A doing anything particular you particularly useful.

72
00:03:27.400 --> 00:03:27.900
 It's just

73
00:03:28.600 --> 00:03:29.200
to show you

74
00:03:32.200 --> 00:03:35.400
The program equivalent of this mathematical expression up

75
00:03:35.400 --> 00:03:37.100
 here or the mathematical Expressions up here.

76
00:03:39.100 --> 00:03:42.400
So doing this in Python would look something like this you would declare you would

77
00:03:42.400 --> 00:03:43.200
 declare a dictionary.

78
00:03:44.300 --> 00:03:45.900
Excuse me, it would declare a set.

79
00:03:46.800 --> 00:03:47.100
Okay.

80
00:03:48.500 --> 00:03:51.500
And if you want to define the function f you

81
00:03:51.500 --> 00:03:55.000
 would have defined keyword followed by the name f the parameter

82
00:03:54.200 --> 00:03:55.900
 and the return.

83
00:03:57.400 --> 00:03:58.600
value of the function

84
00:04:00.100 --> 00:04:03.200
if you look here in the programming.

85
00:04:04.700 --> 00:04:07.500
Block the function f Returns the

86
00:04:07.500 --> 00:04:10.200
 length of some set where some set is

87
00:04:10.200 --> 00:04:10.500
 a parameter.

88
00:04:11.100 --> 00:04:12.700
So if you want to call this function.

89
00:04:16.200 --> 00:04:18.600
You would say F. So something like this, right?

90
00:04:20.700 --> 00:04:23.400
Something like this. If you want to call the function you

91
00:04:23.400 --> 00:04:24.500
 would do it like so

92
00:04:26.900 --> 00:04:27.700
f

93
00:04:29.200 --> 00:04:31.300
And pass a The set a as an argument.

94
00:04:32.400 --> 00:04:35.100
And this will return the length. So how many items do we

95
00:04:35.100 --> 00:04:36.700
 have in this set a well? We have five.

96
00:04:37.600 --> 00:04:39.900
We get 5 that will be the return value.

97
00:04:41.600 --> 00:04:44.100
Once again in Python, the Ampersand is

98
00:04:44.100 --> 00:04:47.400
 a comet. So if we call this function you will get 5 as

99
00:04:47.400 --> 00:04:48.000
 the return value.

100
00:04:48.600 --> 00:04:51.600
Well, if you look up here, this is the mathematical equivalent.

101
00:04:51.600 --> 00:04:55.200
 We have these two vertical bars. We call this the cardinality of

102
00:04:54.200 --> 00:04:55.700
 the set.

103
00:04:56.500 --> 00:04:59.500
So big word, but all really means is the number of elements in

104
00:04:59.500 --> 00:05:02.000
 that set. So this is by the

105
00:05:02.400 --> 00:05:05.600
 way map notation. We would talk about function in a second. But this

106
00:05:05.600 --> 00:05:08.600
 is map notation. Basically we have map which Maps

107
00:05:09.800 --> 00:05:12.600
We have a map F which Maps the set a or

108
00:05:12.600 --> 00:05:15.600
 the elements in the set a to the cardinality of

109
00:05:15.600 --> 00:05:16.000
 that set.

110
00:05:18.300 --> 00:05:19.500
Okay, so it's a map that

111
00:05:20.500 --> 00:05:21.100
it's a

112
00:05:22.100 --> 00:05:25.800
functions are maps by the way functions are types of maps a function

113
00:05:25.800 --> 00:05:27.900
 will take the set a and

114
00:05:29.100 --> 00:05:32.200
Map it to its cardinality so you will get the set.

115
00:05:33.400 --> 00:05:33.700
and

116
00:05:35.700 --> 00:05:37.500
the number of items in that set

117
00:05:38.500 --> 00:05:39.600
and then we have functions.

118
00:05:41.600 --> 00:05:44.100
I just alluded this I just alluded to this

119
00:05:44.100 --> 00:05:47.700
 but we have two ways to defining functions. You can

120
00:05:47.700 --> 00:05:50.300
 either Define them as Maps or as

121
00:05:51.500 --> 00:05:54.600
equations. So let me show you both up here.

122
00:05:54.600 --> 00:05:57.500
 We have a function sum a python function sum

123
00:05:57.500 --> 00:05:58.700
 which takes as

124
00:05:59.400 --> 00:06:02.200
Argument number a number so these

125
00:06:02.200 --> 00:06:03.400
 are the parameters of the function.

126
00:06:04.100 --> 00:06:07.000
And then in here we have in the scope of the

127
00:06:07.200 --> 00:06:10.800
 function. We have another variable num C which is the sum of well

128
00:06:10.800 --> 00:06:11.300
 these two numbers.

129
00:06:12.200 --> 00:06:13.400
Which is then returned by the function?

130
00:06:15.500 --> 00:06:18.600
so if you want to Define this function in

131
00:06:18.600 --> 00:06:20.000
 mathematics, we would say let

132
00:06:21.600 --> 00:06:24.500
Sum, what's the name of the function and a colon?

133
00:06:26.200 --> 00:06:26.900
And what the map?

134
00:06:28.500 --> 00:06:29.500
Some will do.

135
00:06:30.300 --> 00:06:34.300
Is it will take you from two real

136
00:06:33.300 --> 00:06:36.900
 numbers to one real number right? Because

137
00:06:36.900 --> 00:06:38.700
 that's what we said this the sum function does.

138
00:06:39.400 --> 00:06:40.300
So let's sum.

139
00:06:41.800 --> 00:06:44.200
Map from the real number system

140
00:06:44.200 --> 00:06:46.600
 the real number system be a function defined as well.

141
00:06:48.600 --> 00:06:50.600
As you see it has expressed here.

142
00:06:51.200 --> 00:06:53.300
It is a function that takes two variables.

143
00:06:54.300 --> 00:06:56.400
and then it will be equivalent to

144
00:06:57.600 --> 00:07:00.600
the sum of those two valuables which we can also refer to

145
00:07:00.600 --> 00:07:00.800
 as

146
00:07:01.700 --> 00:07:02.700
anonymously

147
00:07:06.700 --> 00:07:09.700
now if you want to call the function, let's and print

148
00:07:09.700 --> 00:07:12.600
 its value. We can call the sum function.

149
00:07:13.400 --> 00:07:13.800
and

150
00:07:15.300 --> 00:07:18.400
pass this sum function as the argument of the print function.

151
00:07:19.300 --> 00:07:22.800
And this is what we call a mathematics that compositional functions. So

152
00:07:22.800 --> 00:07:25.200
 how will python processes? Well, it will

153
00:07:25.200 --> 00:07:26.400
 first evaluate some

154
00:07:27.200 --> 00:07:30.200
so you will get the number five and that past that to

155
00:07:30.200 --> 00:07:31.100
 the print function.

156
00:07:31.900 --> 00:07:34.600
And let's not forget the rules with parentheses when

157
00:07:34.600 --> 00:07:37.300
 whenever we have multiple parentheses involved. You always go

158
00:07:37.300 --> 00:07:39.500
 from the inside and work your way out.

159
00:07:41.400 --> 00:07:45.000
So since we have two and three, this is the innermost pair

160
00:07:44.100 --> 00:07:47.700
 of parentheses. We will evaluate that first and then

161
00:07:47.700 --> 00:07:51.200
 go out they could this the equivalent of

162
00:07:51.200 --> 00:07:51.400
 this.

163
00:07:52.300 --> 00:07:54.900
in program in excuse me, mathematics would be to

164
00:07:57.200 --> 00:08:00.500
Well compose a function as follow so we have one function called print

165
00:08:00.500 --> 00:08:04.400
 and sum and we indicate that with this circle this

166
00:08:04.400 --> 00:08:04.700
 big circle.

167
00:08:05.600 --> 00:08:07.100
and then the arguments

168
00:08:08.400 --> 00:08:09.000
right after that.

169
00:08:09.700 --> 00:08:12.300
So a composition of function this is

170
00:08:12.300 --> 00:08:15.300
 equivalent. This expression is equivalent to that. Once again, this

171
00:08:15.300 --> 00:08:16.700
 is math not programming, okay.

172
00:08:18.900 --> 00:08:20.300
So these two are equivalent.

173
00:08:22.200 --> 00:08:25.000
And here's an example of defining a function with control statement. So here

174
00:08:25.300 --> 00:08:28.800
 we have a function check exists which takes the parameters element

175
00:08:28.800 --> 00:08:31.000
 and this set so basically we'll see

176
00:08:31.200 --> 00:08:35.200
 if this element existence set and return true and false. Otherwise,

177
00:08:37.100 --> 00:08:40.500
And if you want to create a function with a control statement in

178
00:08:40.500 --> 00:08:41.600
 mathematics, we do it this way.

179
00:08:43.700 --> 00:08:47.000
This is called a piecewise symbol. This is a piecewise

180
00:08:46.000 --> 00:08:47.200
 function.

181
00:08:48.100 --> 00:08:51.500
Say I will return true if the element is in a this

182
00:08:51.500 --> 00:08:52.200
 do you see this?

183
00:08:53.900 --> 00:08:56.300
A character that looks like a e flip through

184
00:08:56.300 --> 00:09:00.200
 flipped around. Well, that's we this is

185
00:09:00.200 --> 00:09:03.200
 pronounced in so element in a so of the

186
00:09:03.200 --> 00:09:06.800
 element is an a then we will turn return true.

187
00:09:06.800 --> 00:09:09.700
 Otherwise if the element is not an a

188
00:09:09.700 --> 00:09:10.400
 return false.

189
00:09:13.200 --> 00:09:13.500
All right.

190
00:09:14.600 --> 00:09:17.300
Let's move on to sets now. Let's look at the

191
00:09:17.300 --> 00:09:19.700
 union and intersection operations.

192
00:09:20.500 --> 00:09:22.600
Say we have two sets a and b.

193
00:09:24.200 --> 00:09:27.500
So the set a is the numbers 1 through 5 and B is

194
00:09:27.500 --> 00:09:28.200
 6 to 10.

195
00:09:28.700 --> 00:09:31.100
What if we want to combine these two sets or if

196
00:09:31.100 --> 00:09:34.000
 you want to take the unit of these two sets. We're in Python. We have the

197
00:09:34.200 --> 00:09:38.000
 method called Union right a union B and what we will

198
00:09:37.100 --> 00:09:40.100
 get if we are run this code.

199
00:09:41.300 --> 00:09:42.900
Is the set.

200
00:09:43.700 --> 00:09:46.700
containing all 10 values and

201
00:09:46.700 --> 00:09:48.000
 let me just modify this because

202
00:09:48.900 --> 00:09:50.000
This is not an assignment.

203
00:09:51.100 --> 00:09:51.400
rather

204
00:09:53.700 --> 00:09:55.300
I meant to say that this is a comment.

205
00:09:58.200 --> 00:09:58.400
Okay.

206
00:09:59.500 --> 00:10:02.100
So I did not mean to put that equal sign. I just made to say that if you

207
00:10:02.100 --> 00:10:04.000
 call this function you will get that set.

208
00:10:05.100 --> 00:10:05.400
All right.

209
00:10:08.600 --> 00:10:11.700
How do you perform a union in mathematics? Well,

210
00:10:11.700 --> 00:10:14.200
 you have the same two sets a and b.

211
00:10:14.900 --> 00:10:18.000
I just had to correct that this I

212
00:10:17.300 --> 00:10:20.200
 might put B here so we have two sets A

213
00:10:20.200 --> 00:10:23.200
 and B to take the union of the two sets we have.

214
00:10:24.200 --> 00:10:27.500
We have this symbol this you looking simple we

215
00:10:27.500 --> 00:10:29.000
 have this you looking symbol.

216
00:10:29.800 --> 00:10:32.200
And I just made sure to put the curly bracket. So that's

217
00:10:32.200 --> 00:10:33.600
 what the union does. Okay.

218
00:10:35.600 --> 00:10:38.400
And then the intersection what is the intersection with the intersection

219
00:10:38.400 --> 00:10:38.600
 of?

220
00:10:40.200 --> 00:10:43.700
The intersection of two sets is when you

221
00:10:43.700 --> 00:10:45.400
 create a third set.

222
00:10:46.300 --> 00:10:49.200
That contains the elements common to both sets. If you

223
00:10:49.200 --> 00:10:52.400
 see here in Python, if you want to run this you would

224
00:10:52.400 --> 00:10:53.200
 have an empty set.

225
00:10:54.400 --> 00:10:57.500
Why because well there is no number that is

226
00:10:57.500 --> 00:10:58.600
 common to both of these sets.

227
00:10:59.100 --> 00:11:00.300
Which is why this is empty.

228
00:11:00.800 --> 00:11:03.600
and Mathematics if you want to take the intersection

229
00:11:03.600 --> 00:11:06.600
 of two sets, you have the same looking symbol,

230
00:11:06.600 --> 00:11:06.800
 but it's

231
00:11:07.900 --> 00:11:08.700
turned upside down

232
00:11:09.400 --> 00:11:12.300
Okay, so that's the intersection of A and B. And since

233
00:11:12.300 --> 00:11:14.700
 they have no elements in common we get

234
00:11:17.300 --> 00:11:20.100
same a set with no elements in it.

235
00:11:20.100 --> 00:11:23.400
 And by the way in math when we have a empty set, there's also

236
00:11:23.400 --> 00:11:24.400
 called a null set.

237
00:11:24.900 --> 00:11:27.700
Which can be also represented with a this zero

238
00:11:27.700 --> 00:11:29.800
 looking character with a line that goes through it.

239
00:11:32.200 --> 00:11:33.700
That's a good proposition to calculus.

240
00:11:34.300 --> 00:11:36.200
So this is a very simple FNL statement.

241
00:11:37.600 --> 00:11:40.500
We have two variables p and Q both assigned

242
00:11:40.500 --> 00:11:41.800
 to true and V equals to false.

243
00:11:42.600 --> 00:11:45.400
Well what happens if we print p and Q in Python will

244
00:11:45.400 --> 00:11:46.000
 get you right because

245
00:11:47.600 --> 00:11:48.800
the and operator

246
00:11:50.300 --> 00:11:52.000
will check to see if both statements are true.

247
00:11:53.600 --> 00:11:55.100
And if you do p and v

248
00:11:57.100 --> 00:12:00.500
since both conditions have to be true and one of these conditions is actually

249
00:12:00.500 --> 00:12:03.200
 false V. That is we'll get

250
00:12:03.200 --> 00:12:03.500
 false.

251
00:12:04.400 --> 00:12:07.500
but we know that we can also have

252
00:12:09.200 --> 00:12:12.000
complex truth statement so here what we're doing is

253
00:12:12.700 --> 00:12:13.900
We have q and view.

254
00:12:16.300 --> 00:12:16.900
as one

255
00:12:19.200 --> 00:12:22.500
Statement and P as another statement. So what we want to do is evaluate

256
00:12:22.500 --> 00:12:25.200
 these two statements. Well again what the

257
00:12:25.200 --> 00:12:28.700
 rules of parentheses we have to evaluate the innermost parentheses and

258
00:12:28.700 --> 00:12:31.400
 then go up. So how do we evaluate this first? We

259
00:12:31.400 --> 00:12:32.600
 evaluate Q in view?

260
00:12:33.100 --> 00:12:34.800
Well Q is true V is false.

261
00:12:35.900 --> 00:12:38.400
Only both of them have to be true one of them isn't so

262
00:12:38.400 --> 00:12:41.200
 this would be false. And since this is false and this

263
00:12:41.200 --> 00:12:41.600
 is true.

264
00:12:43.300 --> 00:12:46.100
And they're both supposed to be true. We're also going to get fast.

265
00:12:47.800 --> 00:12:47.900
Okay.

266
00:12:50.500 --> 00:12:52.200
And then we have the not operator.

267
00:12:55.500 --> 00:12:58.800
So if this statement is true, then the

268
00:12:58.800 --> 00:13:01.700
 exclamation will give you the opposite the complement. That's

269
00:13:01.700 --> 00:13:04.400
 the word we want to use the complement of this expression.

270
00:13:05.500 --> 00:13:08.100
So since this is true, we apply the complement and

271
00:13:08.100 --> 00:13:09.700
 we get the opposite which is false.

272
00:13:11.100 --> 00:13:14.200
And this is the equivalent of the above in mathematics.

273
00:13:15.900 --> 00:13:16.300
Okay.

274
00:13:18.800 --> 00:13:20.300
So this is the and operator.

275
00:13:21.100 --> 00:13:25.000
The or operator and then of course when you have multiple statements

276
00:13:24.100 --> 00:13:26.600
 you want to make sure you put in the parentheses.

277
00:13:27.500 --> 00:13:30.400
And up down here. We have the complement. So we have this kind of L looking

278
00:13:30.400 --> 00:13:33.600
 character. That's the complement. So this is the equivalent

279
00:13:33.600 --> 00:13:34.800
 of that up here.

280
00:13:37.600 --> 00:13:37.900
All right.

281
00:13:38.700 --> 00:13:39.500
now relations

282
00:13:41.900 --> 00:13:42.600
this is this is a

283
00:13:46.600 --> 00:13:47.800
very small

284
00:13:49.600 --> 00:13:52.300
example of this is just to make clear.

285
00:13:52.300 --> 00:13:52.900
 What a relation is.

286
00:13:53.700 --> 00:13:56.400
Just check the video description to find

287
00:13:56.400 --> 00:13:57.800
 out find them more.

288
00:13:59.200 --> 00:13:59.700
complete

289
00:14:00.400 --> 00:14:01.100
tutorial

290
00:14:02.300 --> 00:14:05.200
but let me give you one quick example of where relations are

291
00:14:05.200 --> 00:14:06.600
 applicable in mapreduce.

292
00:14:07.300 --> 00:14:09.400
if you are a data scientist or data engineer

293
00:14:11.300 --> 00:14:13.700
understanding relations set relations

294
00:14:15.300 --> 00:14:18.800
can really help you with applications like mapreduce.

295
00:14:21.200 --> 00:14:24.000
So what is a relation a relation is a set?

296
00:14:25.800 --> 00:14:26.100
that

297
00:14:27.400 --> 00:14:29.100
Associates to other sets

298
00:14:30.700 --> 00:14:33.500
or you can lie. If you if you want you can go with definition up that

299
00:14:33.500 --> 00:14:36.400
 I put here that a relation explains the social Association show

300
00:14:36.400 --> 00:14:39.200
 of two of more sets. So let's say we have the relation r

301
00:14:40.500 --> 00:14:42.500
Which is a set with tuples.

302
00:14:43.300 --> 00:14:46.400
If you look at the set you quickly understand what's

303
00:14:46.400 --> 00:14:48.200
 going on in here, right? We have a city.

304
00:14:49.300 --> 00:14:52.100
And the country in which it is located city in the country

305
00:14:52.100 --> 00:14:54.100
 city in the country, right? So that's the relationship.

306
00:14:55.200 --> 00:14:58.700
So this relation is the association of two other sets

307
00:14:58.700 --> 00:15:01.400
 to set a and set B where set a is the set

308
00:15:01.400 --> 00:15:04.400
 of cities and B is the city of is the set of

309
00:15:04.400 --> 00:15:04.800
 countries.

310
00:15:06.300 --> 00:15:06.400
so

311
00:15:09.500 --> 00:15:10.500
if we want to say that.

312
00:15:12.500 --> 00:15:15.200
Chicago and the United States go together. We

313
00:15:15.200 --> 00:15:18.500
 say Chicago is all related to the

314
00:15:18.500 --> 00:15:18.600
 US.

315
00:15:19.500 --> 00:15:22.200
Which means that these two go together and they have

316
00:15:22.200 --> 00:15:25.300
 to be ordered. So for example, when we say Chicago are you

317
00:15:25.300 --> 00:15:28.500
 as that means we will get a tuple where you

318
00:15:28.500 --> 00:15:31.300
 put Chicago as the first element in the US as

319
00:15:31.300 --> 00:15:34.400
 a second element again, the notation is very simple.

320
00:15:35.400 --> 00:15:38.700
But being able to read relations.

321
00:15:39.800 --> 00:15:42.400
Where you see them and being able to recognize them where

322
00:15:42.400 --> 00:15:44.400
 you see them is going to make a huge difference.

323
00:15:45.200 --> 00:15:46.000
in your

324
00:15:48.700 --> 00:15:50.500
journey to learning by the way graphs.

325
00:15:51.200 --> 00:15:54.600
So the prerequisite for understanding graph Theory which

326
00:15:54.600 --> 00:15:57.300
 is a huge and very important.

327
00:15:58.300 --> 00:16:00.900
Branch, in fact, it has a branch of its own graph Theory.

328
00:16:01.700 --> 00:16:04.000
Is understanding relations.

329
00:16:05.300 --> 00:16:10.300
Now I don't have space here to create a visual

330
00:16:08.300 --> 00:16:11.300
 representation of a graph.

331
00:16:11.300 --> 00:16:13.100
 So let me show you a PDF.

332
00:16:14.300 --> 00:16:17.300
Right. So here's a PDF there I found for

333
00:16:17.300 --> 00:16:20.200
 you on the web and let me make sure we can see the

334
00:16:20.200 --> 00:16:20.500
 text.

335
00:16:21.900 --> 00:16:24.000
So this is what I mean when I say you want to be able to

336
00:16:24.300 --> 00:16:27.400
 read mathematics to make

337
00:16:27.400 --> 00:16:31.000
 sense of Concepts in either computer science or data science. So a

338
00:16:30.200 --> 00:16:34.000
 graph is defined as a space

339
00:16:33.500 --> 00:16:37.600
 and a space is a set of

340
00:16:36.600 --> 00:16:38.400
 points.

341
00:16:39.200 --> 00:16:41.400
Or a space is a set of sets.

342
00:16:42.300 --> 00:16:45.200
So G is the graph and it contains

343
00:16:45.200 --> 00:16:48.000
 V, which is a set of vertices and E which is

344
00:16:48.200 --> 00:16:48.900
 a set of edges.

345
00:16:50.600 --> 00:16:53.200
Okay, so if you look here down here, this is

346
00:16:53.200 --> 00:16:56.800
 the graph your vertices are V1 V2

347
00:16:56.800 --> 00:16:59.400
 V4 V3 and V5.

348
00:17:01.100 --> 00:17:01.400
All right.

349
00:17:02.200 --> 00:17:05.000
And of course, we have a set of

350
00:17:05.500 --> 00:17:08.300
 edges which they have not labeled in here, but the edges of course

351
00:17:08.300 --> 00:17:09.100
 are these lines?

352
00:17:10.200 --> 00:17:11.100
That go to the next.

353
00:17:12.300 --> 00:17:14.300
To go from that go from one vertex to the other.

354
00:17:15.600 --> 00:17:16.600
one way to represent

355
00:17:17.600 --> 00:17:20.100
graphs are with matrices. This is what we call

356
00:17:20.100 --> 00:17:23.000
 an adjacency Matrix it basically tells you.

357
00:17:23.800 --> 00:17:26.600
Which Vector goes to which Vector through

358
00:17:26.600 --> 00:17:30.500
 what edges and how many times so this is

359
00:17:30.500 --> 00:17:33.300
 let's say the column for

360
00:17:33.300 --> 00:17:34.000
 the first.

361
00:17:35.000 --> 00:17:35.700
vertex

362
00:17:36.300 --> 00:17:39.300
It tells you that it has one Edge.

363
00:17:40.100 --> 00:17:42.400
Going to itself. You see here. Let me zoom in.

364
00:17:43.100 --> 00:17:46.100
It has one Edge going to itself then it

365
00:17:46.100 --> 00:17:49.300
 has three edges going to the second vertex. That's

366
00:17:50.300 --> 00:17:53.600
One Edge second Edge third Edge, so three edges

367
00:17:53.600 --> 00:17:55.400
 going to vertex two.

368
00:17:56.800 --> 00:17:59.400
It has zero edges going to avert extreme.

369
00:17:59.400 --> 00:18:02.600
 If we look carefully we can see that it hasn't it that vertex one

370
00:18:02.600 --> 00:18:05.200
 has no direct edges to V3. So that's why

371
00:18:05.200 --> 00:18:05.700
 we can see 0

372
00:18:06.400 --> 00:18:08.100
and then if you come to Vertex 4

373
00:18:08.800 --> 00:18:11.300
it says that we have three edges. Do we have three edges? Yes, we

374
00:18:11.300 --> 00:18:15.000
 do. We have one two, three. Okay, we

375
00:18:14.200 --> 00:18:17.800
 don't count that one because that's just from V4

376
00:18:17.800 --> 00:18:18.200
 to V4.

377
00:18:19.300 --> 00:18:22.200
And then again, we have no direct edges to V5. So we get

378
00:18:22.200 --> 00:18:25.200
 zero in here. And if you go continue this way

379
00:18:25.200 --> 00:18:28.600
 for the other vertices, you will have complete the adjacent to Matrix. Now,

380
00:18:28.600 --> 00:18:30.400
 what's nice about this is that you can use

381
00:18:32.400 --> 00:18:35.900
linear algebra techniques or Matrix techniques to

382
00:18:35.900 --> 00:18:36.500
 evaluate.

383
00:18:38.800 --> 00:18:42.000
The structure and the paths of

384
00:18:41.700 --> 00:18:44.600
 a graph and this has well, I

385
00:18:44.600 --> 00:18:46.100
 will leave it to your imaginations.

386
00:18:47.400 --> 00:18:48.400
to see you know

387
00:18:49.800 --> 00:18:52.400
I will leave it to manage to consider the applications that this

388
00:18:52.400 --> 00:18:53.500
 can have but this is very

389
00:18:54.500 --> 00:18:57.900
It has many applications now. There

390
00:18:57.900 --> 00:18:58.500
 is not a lot of

391
00:18:59.300 --> 00:19:02.200
There's just there's just not enough time for me to cover all

392
00:19:02.200 --> 00:19:03.700
 of these. So if you want to learn.

393
00:19:05.500 --> 00:19:08.300
A lot more about the topics that we have discussed here

394
00:19:08.300 --> 00:19:11.700
 today, especially graphs and their applications

395
00:19:11.700 --> 00:19:14.100
 check out the video description. This is a short

396
00:19:14.100 --> 00:19:17.400
 tutorial. There's a more elaborate tutorial furthermore. There's

397
00:19:17.400 --> 00:19:20.400
 an entire course on everything we talked about. So let

398
00:19:20.400 --> 00:19:23.900
 me just switch now to the slides

399
00:19:23.900 --> 00:19:25.700
 again to talk about the course.

400
00:19:26.600 --> 00:19:29.700
If you want to learn more about the course a mathematics

401
00:19:29.700 --> 00:19:30.300
 and programming.

402
00:19:31.100 --> 00:19:34.200
Visit this website. The link is also in the video description and let

403
00:19:34.200 --> 00:19:35.000
 me show you the page.

404
00:19:36.200 --> 00:19:39.800
So you want to scroll down to the upcoming courses and Mathematics

405
00:19:39.800 --> 00:19:40.600
 and programming?

406
00:19:41.100 --> 00:19:42.100
click on learn more

407
00:19:43.200 --> 00:19:43.500
and

408
00:19:44.700 --> 00:19:48.300
what you want to do is check out the lesson plan

409
00:19:48.300 --> 00:19:51.400
 if you can scroll down here read all

410
00:19:51.400 --> 00:19:51.600
 this information.

411
00:19:52.700 --> 00:19:55.200
And then click on the lesson plan to see

412
00:19:55.200 --> 00:19:58.500
 the structure of this course.

413
00:20:00.300 --> 00:20:01.900
Remember that we have a slack Channel where?

414
00:20:03.200 --> 00:20:06.100
Everyone will be participating and where you can ask questions.

415
00:20:07.500 --> 00:20:10.500
So if you do have any questions just scroll down click on

416
00:20:10.500 --> 00:20:13.500
 the link to the slack Channel. We can also find the

417
00:20:13.500 --> 00:20:13.800
 main page.

418
00:20:15.500 --> 00:20:17.500
All right. Click on the joints like

419
00:20:19.300 --> 00:20:22.400
to ask any questions you have about this about this course,

420
00:20:22.400 --> 00:20:23.200
 okay.

421
00:20:24.100 --> 00:20:26.200
But that's it for this session. I want to thank you for watching.

422
00:20:27.600 --> 00:20:30.400
I look forward to seeing you in the next one until next

423
00:20:30.400 --> 00:20:31.400
 time. Take care. Bye.
