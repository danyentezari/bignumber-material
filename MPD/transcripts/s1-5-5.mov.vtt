WEBVTT - This file was automatically generated by VIMEO

0
00:00:00.400 --> 00:00:01.400
Now what is a tuple?

1
00:00:04.800 --> 00:00:06.400
And this also comes from mathematics.

2
00:00:07.700 --> 00:00:09.200
This word is used.

3
00:00:11.700 --> 00:00:13.700
It comes from mathematics. What is a tuple referred to?

4
00:00:17.100 --> 00:00:20.800
And what's a good use case of a tuple in Python?

5
00:00:22.100 --> 00:00:22.300
Well

6
00:00:24.700 --> 00:00:27.700
Let's talk about some of the problems of lists. So we have some context a

7
00:00:27.700 --> 00:00:30.200
 list is a mutable data structure.

8
00:00:35.500 --> 00:00:38.000
Which means you can add to it you can remove from it and you

9
00:00:38.300 --> 00:00:41.300
 can modify the contents of a list.

10
00:00:45.200 --> 00:00:48.400
What what else do we know about tupus it is index

11
00:00:48.400 --> 00:00:48.700
 based?

12
00:00:49.500 --> 00:00:52.100
So if you want a particular element, you have to know it's index.

13
00:00:53.100 --> 00:00:53.800
These are the indices.

14
00:00:57.700 --> 00:00:57.900
Okay.

15
00:01:00.400 --> 00:01:03.400
Now a two pole is very similar to a

16
00:01:05.400 --> 00:01:08.300
List, but it is immutable.

17
00:01:09.600 --> 00:01:12.400
So once you declare a tuple you cannot remove from

18
00:01:12.400 --> 00:01:15.400
 it, you cannot add to it, but it is also in the expressed.

19
00:01:17.500 --> 00:01:20.200
So what would use a tuple when you don't

20
00:01:20.200 --> 00:01:22.700
 what you want to create something and not change it again?

21
00:01:26.200 --> 00:01:27.800
A simple example would be days of the week.

22
00:01:32.200 --> 00:01:33.100
Right. These are immutable.

23
00:01:33.900 --> 00:01:36.400
So we start with Monday and go off to a

24
00:01:36.400 --> 00:01:36.500
 Tuesday.

25
00:01:38.300 --> 00:01:39.300
You know you get the idea.

26
00:01:47.300 --> 00:01:50.700
So if intention is to create something that will remain unchanged.

27
00:01:51.900 --> 00:01:54.700
And a data structure was elements will remain unchanged

28
00:01:54.700 --> 00:01:57.200
 throughout the entirety of the program. Then you would use

29
00:01:57.200 --> 00:01:57.600
 a tuple.

30
00:01:58.500 --> 00:02:02.400
But again, you can still use keys in the

31
00:02:02.400 --> 00:02:04.400
 form of indices to access a particular.

32
00:02:06.500 --> 00:02:07.000
element

33
00:02:07.800 --> 00:02:09.300
And so if you want the last day of the week.

34
00:02:10.700 --> 00:02:13.200
You put seven but since we come from 0 that

35
00:02:13.200 --> 00:02:13.500
 will be six.
