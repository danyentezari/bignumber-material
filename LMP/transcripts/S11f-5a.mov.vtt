WEBVTT - This file was automatically generated by VIMEO

0
00:00:00.500 --> 00:00:03.800
So we have first a convolutional layer.

1
00:00:04.300 --> 00:00:06.400
And we'll talk about filter.

2
00:00:07.700 --> 00:00:08.600
and then we'll talk about

3
00:00:09.800 --> 00:00:10.300
pooling

4
00:00:11.400 --> 00:00:14.600
Of which there are two types. There's average pooling and Max pooling.

5
00:00:14.600 --> 00:00:16.900
 So suppose we have and here.

6
00:00:18.600 --> 00:00:21.600
I'm going to write some math from

7
00:00:21.600 --> 00:00:23.300
 this book this by the way.

8
00:00:24.500 --> 00:00:28.600
I know I promise to share the list of books. Well, let

9
00:00:28.600 --> 00:00:30.600
 me just point this out now because I have it here.

10
00:00:32.200 --> 00:00:33.100
This is one of the best.

11
00:00:34.400 --> 00:00:37.400
Written books on machine learning and especially neural network

12
00:00:37.400 --> 00:00:37.900
 just this one.

13
00:00:40.400 --> 00:00:41.400
Muhammad Zaki

14
00:00:43.100 --> 00:00:44.300
data mining machine learning

15
00:00:45.300 --> 00:00:46.400
I mean this book is just

16
00:00:47.200 --> 00:00:48.200
Pleasant to read

17
00:00:49.800 --> 00:00:52.700
book the book gradually built on.

18
00:00:53.600 --> 00:00:55.300
basic concepts and workshops we are

19
00:00:57.500 --> 00:00:58.900
I highly recommend you get this book.

20
00:01:00.100 --> 00:01:03.200
Either when physical form or digital form, so let me

21
00:01:03.200 --> 00:01:06.300
 show you the way they used the

22
00:01:06.300 --> 00:01:06.600
 notation here.

23
00:01:07.700 --> 00:01:08.700
or convolution

24
00:01:09.300 --> 00:01:12.300
we'll begin with a one-dimensional convolution and then we can

25
00:01:12.300 --> 00:01:14.600
 extend that idea to a two-dimensional.

26
00:01:16.500 --> 00:01:17.100
Matrix

27
00:01:18.400 --> 00:01:19.700
The suppose we have two vectors.

28
00:01:22.200 --> 00:01:24.900
I'm going to slightly adapt adapter writings here.

29
00:01:26.400 --> 00:01:29.600
Now a picture is a matrix, but let's begin with one dimensional

30
00:01:29.600 --> 00:01:29.800
 first.

31
00:01:30.600 --> 00:01:30.900
with

32
00:01:33.200 --> 00:01:36.900
the components, you know x sub 1 x sub 2, etc,

33
00:01:36.100 --> 00:01:37.200
 etc.

34
00:01:38.600 --> 00:01:39.300
And we have

35
00:01:40.200 --> 00:01:43.300
a filter Matrix of excuse me. We talk

36
00:01:43.300 --> 00:01:45.400
 about the vectors. This is one dimensional for now.

37
00:01:46.400 --> 00:01:47.300
So in one dimension

38
00:01:48.100 --> 00:01:49.100
comfortable

39
00:01:49.600 --> 00:01:52.500
Lucian now this book uses w

40
00:01:53.600 --> 00:01:54.100
because a

41
00:01:55.800 --> 00:01:58.500
while we are convolving it with with a filter.

42
00:01:59.600 --> 00:02:02.600
Vector or a filter Matrix the components of

43
00:02:02.600 --> 00:02:05.400
 a filter Vector of filter Matrix are really awaits. So

44
00:02:05.400 --> 00:02:08.800
 it makes sense. I will also use the same convention. We'll make

45
00:02:08.800 --> 00:02:09.100
 this w

46
00:02:11.500 --> 00:02:12.900
and it will be weights.

47
00:02:13.800 --> 00:02:16.300
Now what you need to know, is that the number

48
00:02:16.300 --> 00:02:16.900
 of components?

49
00:02:17.800 --> 00:02:20.100
or the dimension of the weight

50
00:02:21.600 --> 00:02:22.600
and features

51
00:02:23.500 --> 00:02:24.100
are not the same.

52
00:02:25.300 --> 00:02:28.500
And here's I'll write down the mathematical notation,

53
00:02:28.500 --> 00:02:31.300
 but then I'll show two pictorial. It's very simple concept.

54
00:02:32.100 --> 00:02:35.100
Now we denote a kind of evolution with an asterisk.

55
00:02:36.200 --> 00:02:39.500
So we take our two vectors xnw we will

56
00:02:39.500 --> 00:02:42.300
 perform an element wise operation on the

57
00:02:42.300 --> 00:02:45.900
 components of both vectors. So we have x sub

58
00:02:45.900 --> 00:02:48.100
 k i and then I think this is

59
00:02:48.100 --> 00:02:51.800
 ODOT. And so this dot

60
00:02:51.800 --> 00:02:55.100
 inside the circle is the element wise operation. What we

61
00:02:54.100 --> 00:02:56.000
 are going to do is we will take

62
00:02:56.900 --> 00:02:57.300
let's say

63
00:02:58.800 --> 00:03:01.700
now x sub K refers to a

64
00:03:02.900 --> 00:03:04.400
section of the vector

65
00:03:05.200 --> 00:03:07.800
Let me show you let me show you let me show you here.

66
00:03:08.700 --> 00:03:11.700
And it's okay for me to show you this picture page because the author

67
00:03:11.700 --> 00:03:14.700
 actually made the slides many parts

68
00:03:14.700 --> 00:03:17.500
 of this page available online for free.

69
00:03:18.200 --> 00:03:19.700
iOS, try to find

70
00:03:20.700 --> 00:03:23.700
The link I think if we Google thank

71
00:03:23.700 --> 00:03:25.000
 you the website will show up.

72
00:03:26.100 --> 00:03:28.600
So I look up the slides the slides are quite helpful.

73
00:03:29.700 --> 00:03:32.300
I mean the author did it tremendous job of

74
00:03:32.700 --> 00:03:35.400
explaining these Concepts pictorially. Yeah, so

75
00:03:35.400 --> 00:03:36.300
 this is the cover of the book.

76
00:03:38.700 --> 00:03:40.000
Now, let me jump to that section.

77
00:03:41.600 --> 00:03:44.200
There we go. So this is our Vector. Yes. This is

78
00:03:44.200 --> 00:03:45.400
 what I mean by sub.

79
00:03:47.200 --> 00:03:49.200
section of the vector

80
00:03:51.300 --> 00:03:54.100
so if your filter is one by three

81
00:03:54.100 --> 00:03:54.400
 vector

82
00:03:56.800 --> 00:03:57.800
what you are going to do?

83
00:03:58.700 --> 00:04:00.200
Is do an element wise.

84
00:04:02.900 --> 00:04:05.400
multiplication so one times one three times

85
00:04:05.400 --> 00:04:05.900
 zero

86
00:04:06.400 --> 00:04:07.600
one times negative 2

87
00:04:08.900 --> 00:04:09.800
and then the sum of that.

88
00:04:10.900 --> 00:04:11.600
Same thing here.

89
00:04:12.300 --> 00:04:13.100
three times one

90
00:04:14.400 --> 00:04:17.300
two times two. So three times one is three two times two is

91
00:04:17.300 --> 00:04:20.200
 four. Obviously the zero cancels this other one out so

92
00:04:20.200 --> 00:04:20.600
 it gets seven.

93
00:04:21.600 --> 00:04:25.100
Now if you notice here, there's a fourth

94
00:04:24.100 --> 00:04:25.200
 term.

95
00:04:26.400 --> 00:04:27.500
the term stride

96
00:04:28.800 --> 00:04:31.900
A stride is how many well strides you're

97
00:04:31.900 --> 00:04:32.000
 taking?

98
00:04:34.300 --> 00:04:37.400
In the vector like how many strides if

99
00:04:37.400 --> 00:04:38.600
 imagine this is your vector?

100
00:04:39.300 --> 00:04:42.100
This your vector. How many strides are you going?

101
00:04:42.100 --> 00:04:42.400
 Like how many?

102
00:04:45.500 --> 00:04:46.800
Components are you skipping?

103
00:04:47.500 --> 00:04:50.000
I mean, it's pretty clear in this picture here. The stride is one.

104
00:04:51.200 --> 00:04:54.800
So initially the window if the filter was multiplying this

105
00:04:54.800 --> 00:04:57.300
 first three components and then

106
00:04:57.300 --> 00:04:58.500
 we take a one strike down.

107
00:04:59.400 --> 00:05:01.400
And then we do an element wise operation.

108
00:05:01.900 --> 00:05:04.100
And then we continue this way until we've covered

109
00:05:04.100 --> 00:05:04.600
 the entire.

110
00:05:05.400 --> 00:05:06.000
vector

111
00:05:09.500 --> 00:05:10.500
this is the product.

112
00:05:12.400 --> 00:05:15.300
Or the result of this kind of evolution operation.

113
00:05:16.500 --> 00:05:19.500
And this is what that notation is representing

114
00:05:19.500 --> 00:05:22.100
 when I say x for example, except One X up to

115
00:05:22.100 --> 00:05:23.000
 x sub 3.

116
00:05:24.200 --> 00:05:24.400
Okay.

117
00:05:29.700 --> 00:05:32.700
So X of three is the number of components your

118
00:05:32.700 --> 00:05:35.500
 multiplying this corresponds the three your

119
00:05:35.500 --> 00:05:38.800
 subscript code response to the size of the filter here.

120
00:05:38.800 --> 00:05:39.700
 Don't know by w.

121
00:05:40.800 --> 00:05:44.400
so the first subsection the second subsection third subsection

122
00:05:43.400 --> 00:05:45.800
 and you are going to

123
00:05:47.700 --> 00:05:48.000
add

124
00:05:49.300 --> 00:05:52.200
The result of this element wise operation. That's what

125
00:05:52.200 --> 00:05:53.400
 you're seeing here. So this sum

126
00:05:54.300 --> 00:05:57.500
is that value this sum is that value

127
00:05:57.500 --> 00:06:00.600
 and so on and then you will sum up all of

128
00:06:00.600 --> 00:06:01.100
 these together.

129
00:06:02.300 --> 00:06:03.400
So you're going to add up?

130
00:06:05.300 --> 00:06:07.200
negative 1 7 5 4 negative 1

131
00:06:08.800 --> 00:06:11.100
and this will be put into another Matrix. So

132
00:06:11.100 --> 00:06:12.600
 if I can scroll down here.

133
00:06:15.500 --> 00:06:18.200
Let me jump to and show you the 2D version. So this

134
00:06:18.200 --> 00:06:19.200
 is 2D convolution.

135
00:06:20.300 --> 00:06:21.600
Right here.

136
00:06:23.900 --> 00:06:25.100
There we go. Same idea.

137
00:06:26.500 --> 00:06:28.600
This is applicable to what we are doing.

138
00:06:30.700 --> 00:06:30.800
Okay.

139
00:06:31.800 --> 00:06:32.100
again

140
00:06:32.900 --> 00:06:35.500
Even in this example we're going in strides of

141
00:06:35.500 --> 00:06:38.700
 one so multiply element-wise right

142
00:06:38.700 --> 00:06:39.300
 the order.

143
00:06:40.400 --> 00:06:42.600
Well and no notice. This is an identity Matrix.

144
00:06:43.500 --> 00:06:46.500
So which means the numbers on the

145
00:06:46.500 --> 00:06:49.300
 principal diagonal of this subset?

146
00:06:51.500 --> 00:06:54.200
Will be What Remain and they will be added together. So

147
00:06:54.200 --> 00:06:54.900
 one times one?

148
00:06:57.300 --> 00:07:00.100
two times zero is going to cancel out three times zero is going

149
00:07:00.100 --> 00:07:02.700
 to cancel out one times one add these together you get to

150
00:07:04.100 --> 00:07:05.700
then we take one story to the right.

151
00:07:06.700 --> 00:07:09.200
So we are looking at the

152
00:07:09.200 --> 00:07:13.000
 picture so to speak by taking a strike you're scanning

153
00:07:12.100 --> 00:07:13.400
 the picture.

154
00:07:15.600 --> 00:07:18.200
And the numbers we the there was

155
00:07:18.200 --> 00:07:20.600
 a and the numbers you would pick in the weights depend.

156
00:07:21.200 --> 00:07:24.800
On how you want to look at the picture because for

157
00:07:24.800 --> 00:07:26.900
 a model to look at a picture.

158
00:07:27.900 --> 00:07:31.200
Or is to look at vertical lines

159
00:07:30.200 --> 00:07:33.400
 or horizontal lines or

160
00:07:33.400 --> 00:07:34.800
 diagonal lines.

161
00:07:35.500 --> 00:07:39.000
So if you look so that's why we have multiple filters because

162
00:07:38.200 --> 00:07:41.700
 we want to look at the picture from different. Let's say

163
00:07:41.700 --> 00:07:44.300
 angles and then add up everything. We

164
00:07:44.300 --> 00:07:45.900
 see everything the model sees.

165
00:07:46.600 --> 00:07:47.900
Same thing here two times one.

166
00:07:49.100 --> 00:07:52.300
That's two it's sorry two times one is two four times

167
00:07:52.300 --> 00:07:53.900
 one is well four.

168
00:07:55.100 --> 00:07:57.800
So 4 plus 2 is 6 there's zeros.

169
00:07:59.400 --> 00:08:01.700
Eliminate 21. I think you get the idea, right?

170
00:08:03.400 --> 00:08:06.500
And of course we can then take this and do this for to a

171
00:08:06.500 --> 00:08:07.900
 tensor, which is a stack of matrices.

172
00:08:13.500 --> 00:08:13.700
Okay.

173
00:08:15.100 --> 00:08:16.300
That's all a kind of Illusion is.
