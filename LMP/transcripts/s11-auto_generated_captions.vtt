WEBVTT - This file was automatically generated by VIMEO

0
00:00:01.200 --> 00:00:03.300
Today we are going to look at.

1
00:00:05.500 --> 00:00:07.400
an application of deep learning

2
00:00:11.200 --> 00:00:14.500
and neural networks for image

3
00:00:14.500 --> 00:00:15.200
 classification

4
00:00:17.400 --> 00:00:18.800
so we are going to look at the

5
00:00:20.500 --> 00:00:22.300
Keras Library, which is

6
00:00:23.300 --> 00:00:26.400
You know a library that abstract

7
00:00:26.400 --> 00:00:28.100
 some of the complexities of tensorflow.

8
00:00:31.400 --> 00:00:34.200
And during a process of building this

9
00:00:34.200 --> 00:00:34.600
 model.

10
00:00:35.300 --> 00:00:37.600
we will also make references to

11
00:00:38.800 --> 00:00:40.300
The Matrix

12
00:00:41.200 --> 00:00:41.900
operations

13
00:00:43.200 --> 00:00:46.200
so we will today see what kind of evolution is. What a

14
00:00:49.800 --> 00:00:53.800
a filter is and what is pooling Matrix

15
00:00:52.800 --> 00:00:55.500
 or a pulling tensor today?

16
00:00:55.500 --> 00:00:57.300
 We'll talk about the concept of tensors as well.

17
00:00:59.100 --> 00:01:00.300
So, let me write down the agenda.

18
00:01:04.200 --> 00:01:06.500
We are going to create a new notebook.

19
00:01:09.200 --> 00:01:11.000
Jupiter notebook, of course four

20
00:01:14.300 --> 00:01:16.200
image classification

21
00:01:19.300 --> 00:01:23.100
and that sometimes somewhere halfway through the notebook in

22
00:01:22.100 --> 00:01:25.300
 order to understand what it is that we're actually coding.

23
00:01:26.500 --> 00:01:29.300
I'll switch to vs code where

24
00:01:29.300 --> 00:01:30.200
 I can show you the mathematics.

25
00:01:32.400 --> 00:01:32.900
so we want

26
00:01:34.200 --> 00:01:36.400
discuss Matrix kind of evolution

27
00:01:42.400 --> 00:01:46.800
it will be more accurate to say tensor convolution because a

28
00:01:47.900 --> 00:01:49.700
matrix is a general.

29
00:01:50.500 --> 00:01:51.000
object

30
00:01:52.200 --> 00:01:53.100
for a vector

31
00:01:55.500 --> 00:01:58.300
a tensor is a general object for

32
00:01:58.300 --> 00:01:58.900
 a matrix.

33
00:02:00.100 --> 00:02:03.400
So vectors A type of tensor a matrix

34
00:02:03.400 --> 00:02:04.300
 the type of tensor.

35
00:02:05.700 --> 00:02:08.100
We will see what that is. I'll show you visually what it is as well

36
00:02:08.100 --> 00:02:09.600
 Matrix convolution.

37
00:02:15.300 --> 00:02:15.600
a filter

38
00:02:17.200 --> 00:02:17.400
and

39
00:02:19.200 --> 00:02:19.800
Cooling

40
00:02:20.300 --> 00:02:21.300
talk about pulling is

41
00:02:30.400 --> 00:02:32.900
and then if time allows it.

42
00:02:34.400 --> 00:02:37.300
We want to talk about classification metrics.

43
00:02:39.700 --> 00:02:42.400
Now there are different classification Matrix. We

44
00:02:42.400 --> 00:02:45.200
 will talk about the one that we will be using today. By the

45
00:02:45.200 --> 00:02:47.100
 way. There is an upcoming Workshop.

46
00:02:49.200 --> 00:02:50.700
on the 28th of July

47
00:02:51.800 --> 00:02:54.200
It's about this is the second

48
00:02:54.200 --> 00:02:55.700
 episode of ml papers.

49
00:02:56.500 --> 00:02:58.400
And we'll be about the ROC metric.

50
00:02:59.300 --> 00:03:02.900
It's a very important Matrix that receiving operating characteristic.

51
00:03:03.600 --> 00:03:04.400
So we'll be a good.

52
00:03:05.900 --> 00:03:07.400
That will be a more in depth.

53
00:03:11.500 --> 00:03:12.500
tutorial about classification

54
00:03:14.500 --> 00:03:14.700
so

55
00:03:15.900 --> 00:03:18.200
hopefully you'll find that useful and you'll be able to attend.

56
00:03:20.200 --> 00:03:22.000
Okay, let's begin. Let's begin with this.

57
00:03:23.900 --> 00:03:26.100
It's only three. I mean it's three items but

58
00:03:26.100 --> 00:03:29.100
 this it will take up the entirety of today's session. So let

59
00:03:29.100 --> 00:03:29.900
 me switch right away.

60
00:03:30.500 --> 00:03:30.700
and

61
00:03:32.400 --> 00:03:34.000
I do recommend you type along.

62
00:03:36.100 --> 00:03:39.600
You don't need to download the data set externally everything is

63
00:03:39.600 --> 00:03:41.100
 going to be contained.

64
00:03:42.500 --> 00:03:44.600
inside the notebook

65
00:03:45.700 --> 00:03:47.200
so you can just go to colab.

66
00:03:51.500 --> 00:03:52.400
I'll paste the link.

67
00:03:54.200 --> 00:03:55.200
here in Zoo

68
00:04:08.700 --> 00:04:11.400
And this I believe should be tutorial

69
00:04:11.400 --> 00:04:12.900
 70.

70
00:04:18.500 --> 00:04:18.800
Okay.

71
00:04:20.600 --> 00:04:22.200
The first we will go ahead and import.

72
00:04:25.300 --> 00:04:26.400
our libraries

73
00:04:31.100 --> 00:04:33.100
We have tensorflow.

74
00:04:39.600 --> 00:04:40.000
we have

75
00:04:41.700 --> 00:04:43.300
Keras so tensorflow

76
00:04:50.200 --> 00:04:53.200
actually want to say from tensorflow. We want to import the

77
00:04:53.200 --> 00:04:54.100
 following items.

78
00:04:55.900 --> 00:04:56.700
the data sets

79
00:04:59.700 --> 00:05:00.500
the layers

80
00:05:01.700 --> 00:05:02.400
and the models

81
00:05:06.000 --> 00:05:06.100
and

82
00:05:07.100 --> 00:05:10.700
You want to visualize our metrics that we will import and visualize the

83
00:05:10.700 --> 00:05:11.600
 data set?

84
00:05:12.700 --> 00:05:15.300
Some of the data some of the pictures this

85
00:05:15.300 --> 00:05:17.000
 data citizens is a set of pictures.

86
00:05:18.100 --> 00:05:18.600
Matt

87
00:05:19.600 --> 00:05:21.900
plot lip dot Pi plot

88
00:05:24.500 --> 00:05:25.300
as PLT

89
00:05:33.500 --> 00:05:35.700
for those of you this session we're able to see that video.

90
00:05:36.600 --> 00:05:37.500
That I referenced.

91
00:05:39.500 --> 00:05:39.900
or

92
00:05:42.800 --> 00:05:44.500
Adam the atom algorithm

93
00:05:46.400 --> 00:05:47.100
Okay, great.

94
00:05:50.400 --> 00:05:50.800
so

95
00:05:52.300 --> 00:05:55.900
the next thing we want to do is import our data set.

96
00:05:58.700 --> 00:05:58.900
so

97
00:06:00.600 --> 00:06:01.800
from the data sets object

98
00:06:02.700 --> 00:06:03.800
I will use the method.

99
00:06:05.900 --> 00:06:08.300
load data, so C4 10

100
00:06:09.700 --> 00:06:12.500
C410 dot load data,

101
00:06:12.500 --> 00:06:14.900
 let me show you what c410 is the database of pictures?

102
00:06:15.800 --> 00:06:18.300
Small pictures and they are all

103
00:06:18.300 --> 00:06:20.100
 uniform in size.

104
00:06:21.300 --> 00:06:23.100
Now this method will return.

105
00:06:28.500 --> 00:06:31.700
training images testing images accompanied by

106
00:06:31.700 --> 00:06:32.400
 their labels

107
00:06:34.200 --> 00:06:38.000
If these are terms with which you are not familiar, I will explain

108
00:06:37.300 --> 00:06:38.800
 them to you in a moment.

109
00:06:39.500 --> 00:06:40.100
so we have

110
00:06:44.400 --> 00:06:44.900
a train images

111
00:06:49.200 --> 00:06:50.400
and the train labels

112
00:06:57.800 --> 00:06:58.800
test images

113
00:07:06.400 --> 00:07:07.200
test labels

114
00:07:09.300 --> 00:07:12.900
Well this downloads. Let me show you the C4 database. This

115
00:07:12.900 --> 00:07:13.200
 is it.

116
00:07:22.400 --> 00:07:22.400
Here we go.

117
00:07:28.300 --> 00:07:31.500
It is a data set that contains 60,000 pictures.

118
00:07:32.500 --> 00:07:34.300
That are only 32 by 32.

119
00:07:35.300 --> 00:07:36.000
all color

120
00:07:37.300 --> 00:07:40.400
And all of these 60,000 pictures fall into

121
00:07:40.400 --> 00:07:41.400
 one of ten classes.

122
00:07:42.200 --> 00:07:44.200
Here are focuses.

123
00:07:48.100 --> 00:07:50.600
the fundamentals of neural networks, so

124
00:07:51.900 --> 00:07:53.200
Once we covered this.

125
00:07:54.200 --> 00:07:55.800
Example and we understand.

126
00:07:57.200 --> 00:07:57.900
what the

127
00:07:59.400 --> 00:07:59.900
why we

128
00:08:03.300 --> 00:08:06.200
have this particular architecture now a new electron people

129
00:08:06.200 --> 00:08:09.000
 will then be able to well build upon what we know?

130
00:08:10.200 --> 00:08:13.500
And then we can work with other pre-trained models

131
00:08:13.500 --> 00:08:16.300
 or even come up with our own models so

132
00:08:16.300 --> 00:08:17.400
 we can go to research papers.

133
00:08:18.900 --> 00:08:21.400
and they will make reference to different types

134
00:08:21.400 --> 00:08:21.500
 of

135
00:08:23.200 --> 00:08:26.400
neural network layers, but once we have a foundational

136
00:08:26.400 --> 00:08:27.900
 understanding we can

137
00:08:28.700 --> 00:08:31.300
create our own architecture and make

138
00:08:31.300 --> 00:08:31.500
 sense of

139
00:08:32.300 --> 00:08:33.400
those research papers

140
00:08:35.200 --> 00:08:38.700
Sorry, these are some of the pictures they're very small 32 by

141
00:08:38.700 --> 00:08:39.200
 32.

142
00:08:41.900 --> 00:08:44.300
Okay. Well, we're gonna train a model

143
00:08:44.300 --> 00:08:48.400
 that is that will be able to classify pictures like

144
00:08:48.400 --> 00:08:49.900
 so like the ones you're saying here.

145
00:08:50.700 --> 00:08:53.700
And they all have certain characteristics. So for example the subject.

146
00:08:54.900 --> 00:08:57.000
Of the picture is in the center of the

147
00:08:57.400 --> 00:08:59.600
 picture like this car this bird.

148
00:09:00.400 --> 00:09:01.100
this bird

149
00:09:02.700 --> 00:09:02.900
this

150
00:09:05.700 --> 00:09:06.500
these deers

151
00:09:07.600 --> 00:09:08.200
moose

152
00:09:11.200 --> 00:09:12.900
You don't have any of these into Pie by the way.

153
00:09:14.300 --> 00:09:14.800
so like

154
00:09:16.100 --> 00:09:17.000
Elks there we go.

155
00:09:18.200 --> 00:09:21.700
What do we call the class of such creatures deers who's elk?

156
00:09:22.300 --> 00:09:25.200
I think most are quite large right there. I think that the

157
00:09:25.200 --> 00:09:25.600
 largest of

158
00:09:27.400 --> 00:09:27.600
their type

159
00:09:31.200 --> 00:09:31.700
but yeah.

160
00:09:33.700 --> 00:09:35.500
all of these big

161
00:09:37.100 --> 00:09:39.800
pictures have the object one in the center.

162
00:09:41.100 --> 00:09:44.900
So the more all of that we are going to build or train can

163
00:09:44.900 --> 00:09:45.300
 only

164
00:09:46.900 --> 00:09:49.700
accurately classify pictures of this

165
00:09:49.700 --> 00:09:50.100
 nature

166
00:09:51.000 --> 00:09:51.200
Square

167
00:09:52.200 --> 00:09:53.300
in size

168
00:09:54.700 --> 00:09:57.000
And the subject is clearly right in the

169
00:09:57.100 --> 00:10:00.300
 center. And of course it belongs to one of these same classes. So if you if

170
00:10:00.300 --> 00:10:01.200
 you want to predict, let's say

171
00:10:01.800 --> 00:10:02.200
a

172
00:10:05.900 --> 00:10:06.300
I don't know.

173
00:10:08.800 --> 00:10:11.900
A basketball or a

174
00:10:11.900 --> 00:10:11.900
 person?

175
00:10:13.100 --> 00:10:14.100
They will not be able to do so.

176
00:10:17.500 --> 00:10:19.700
or what I will do well when we see it's not going to be able to do so it's going to

177
00:10:20.900 --> 00:10:23.500
Put them into the class that is closest.

178
00:10:27.800 --> 00:10:29.800
Or the class that is most probable.

179
00:10:30.900 --> 00:10:33.300
which will be incorrect anyway, but again, this is

180
00:10:33.300 --> 00:10:34.600
 the point here is not to create a

181
00:10:35.500 --> 00:10:38.100
Production level machine learning model, but just

182
00:10:38.100 --> 00:10:40.500
 to understand the fundamentals here, okay.

183
00:10:41.700 --> 00:10:44.100
But return here now that the data set has

184
00:10:44.100 --> 00:10:44.400
 been downloaded.

185
00:10:46.100 --> 00:10:49.400
Let me it's right now in the environment. So I don't think

186
00:10:49.400 --> 00:10:51.200
 it will appear here in the files and folders.

187
00:10:51.900 --> 00:10:54.200
So it's actually they are downloaded into the

188
00:10:54.200 --> 00:10:56.800
 memory the temporary storage of the computer.

189
00:10:57.800 --> 00:10:59.900
the instance on Google Cloud

190
00:11:02.100 --> 00:11:03.400
So if I were to type in LS?

191
00:11:04.300 --> 00:11:05.400
by the way in colab

192
00:11:06.100 --> 00:11:06.700
You are able to.

193
00:11:08.200 --> 00:11:11.700
Work with two programming languages and of course markdown markdown,

194
00:11:11.700 --> 00:11:14.200
 we don't call a program with language if you want to

195
00:11:14.200 --> 00:11:16.900
 work with the best script you put you put in a percent.

196
00:11:19.900 --> 00:11:22.600
And this exclamation mark tells colab

197
00:11:22.600 --> 00:11:25.300
 that what follows after the exclamation mark

198
00:11:25.300 --> 00:11:26.100
 will be bash script.

199
00:11:26.600 --> 00:11:27.600
So we can use the LS.

200
00:11:28.400 --> 00:11:29.800
Command to list.

201
00:11:30.600 --> 00:11:33.200
The contents of what we have just downloaded.

202
00:11:36.200 --> 00:11:38.300
Or actually the contents of this folder.

203
00:11:40.000 --> 00:11:40.400
Okay.

204
00:11:41.500 --> 00:11:43.400
What we want needed in this example, though.

205
00:11:45.600 --> 00:11:46.200
Let's carry on.

206
00:11:48.400 --> 00:11:49.000
then we have

207
00:11:56.600 --> 00:11:58.900
the images in the form of a tensor

208
00:12:00.900 --> 00:12:03.500
so if you remember by the way you tensorflow is

209
00:12:05.400 --> 00:12:07.500
built on top of numpy

210
00:12:08.900 --> 00:12:09.100
so

211
00:12:10.700 --> 00:12:13.500
data will be for will be stored in the form of a numpy.

212
00:12:14.700 --> 00:12:17.100
Object and if you remember we said that a numpy

213
00:12:17.100 --> 00:12:20.800
 object as three attributes

214
00:12:20.800 --> 00:12:21.300
 and the data.

215
00:12:22.800 --> 00:12:24.600
So one of those attributes is shape.

216
00:12:26.100 --> 00:12:28.300
And here by shaping me this shape of the tensor.

217
00:12:29.400 --> 00:12:29.500
so

218
00:12:30.900 --> 00:12:32.100
I want you to imagine.

219
00:12:33.100 --> 00:12:36.100
A tensor to be a collection of matrices. Let me show

220
00:12:36.100 --> 00:12:36.600
 you a picture here.

221
00:12:42.400 --> 00:12:44.000
There's a glory that I have created.

222
00:12:45.000 --> 00:12:45.200
in

223
00:12:46.700 --> 00:12:47.600
Word document

224
00:12:49.200 --> 00:12:50.500
which I will share with you as well.

225
00:12:52.500 --> 00:12:54.900
Let me just because I have the picture in there. Oh Siri.

226
00:13:02.800 --> 00:13:05.400
I mean you can put you can see this picture and Google but I

227
00:13:05.400 --> 00:13:06.300
 want to show you the one I found.

228
00:13:07.600 --> 00:13:08.900
glossary

229
00:13:14.300 --> 00:13:14.900
There we go.

230
00:13:20.400 --> 00:13:22.500
So for

231
00:13:28.500 --> 00:13:29.300
tensor

232
00:13:58.800 --> 00:13:59.300
Yeah.

233
00:14:00.900 --> 00:14:01.800
This is a tensor.

234
00:14:03.800 --> 00:14:05.400
It's a stack of matrices.

235
00:14:06.900 --> 00:14:08.300
But it can also be a stack.

236
00:14:09.400 --> 00:14:10.100
of columns

237
00:14:11.600 --> 00:14:12.500
so you can

238
00:14:14.400 --> 00:14:19.100
arrange it. You can arrange a stack of

239
00:14:19.100 --> 00:14:21.500
 matrices horizontally or laterally or

240
00:14:24.700 --> 00:14:26.500
in in this frontal arrangement

241
00:14:27.500 --> 00:14:28.800
so let's try to imagine our

242
00:14:29.900 --> 00:14:31.600
tensor of pictures to be this so here.

243
00:14:33.300 --> 00:14:36.200
What I return you when I bring you back the notebook it says

244
00:14:36.200 --> 00:14:36.600
 here what?

245
00:14:37.400 --> 00:14:38.700
It says 50,000.

246
00:14:39.200 --> 00:14:42.200
32 3 what do we mean by this? We have

247
00:14:42.200 --> 00:14:43.600
 50,000 pictures.

248
00:14:45.900 --> 00:14:46.100
and

249
00:14:47.400 --> 00:14:50.400
pictures that are 32 by 32 with three color

250
00:14:50.400 --> 00:14:50.700
 channels

251
00:14:52.200 --> 00:14:53.000
That's what this means.

252
00:14:57.400 --> 00:15:00.200
And this could be this is one tensor.

253
00:15:02.200 --> 00:15:02.300
so

254
00:15:03.600 --> 00:15:05.400
it's a sequence of tensors.

255
00:15:05.900 --> 00:15:08.500
For each image is a stack of three three

256
00:15:08.500 --> 00:15:09.400
 color channels.

257
00:15:11.900 --> 00:15:12.200
Okay.

258
00:15:13.600 --> 00:15:14.700
Let's return.

259
00:15:17.700 --> 00:15:19.900
Let me look up the remaining code I have here.

260
00:15:20.500 --> 00:15:21.900
And the next thing I want to show you.

261
00:15:24.600 --> 00:15:27.500
okay, also for the test now, of course the data

262
00:15:27.500 --> 00:15:28.000
 set that we

263
00:15:30.900 --> 00:15:33.600
downloaded has 60,000 images here. It

264
00:15:33.600 --> 00:15:36.400
 says fifty thousand. Where are the remaining 10? Well they are.

265
00:15:37.500 --> 00:15:38.100
in the test data set

266
00:15:40.300 --> 00:15:43.600
Again, what is the what's the purpose of training test?

267
00:15:44.300 --> 00:15:47.100
Maybe quickly also pull up this other Slide the slide from

268
00:15:47.100 --> 00:15:48.200
 our last Workshop.

269
00:15:53.400 --> 00:15:54.300
Tell you about test.

270
00:15:57.100 --> 00:16:00.500
And train and sometimes something called validation.

271
00:16:02.800 --> 00:16:03.100
Okay.

272
00:16:05.500 --> 00:16:06.900
train test and validation

273
00:16:24.300 --> 00:16:25.400
if you remember.

274
00:16:28.200 --> 00:16:29.800
from our last session we talked about

275
00:16:32.300 --> 00:16:35.200
the multi-- the perceptron

276
00:16:36.200 --> 00:16:39.500
it was this mathematical model, but we

277
00:16:39.500 --> 00:16:40.100
 had these features.

278
00:16:41.200 --> 00:16:43.100
and with each feature was associated with

279
00:16:44.600 --> 00:16:46.400
let me actually pull it pull that up.

280
00:16:59.600 --> 00:17:02.500
By the way, we all create another slide

281
00:17:02.500 --> 00:17:03.100
 later on and

282
00:17:04.300 --> 00:17:06.000
Take the relevant slides and put them in.

283
00:17:10.400 --> 00:17:11.400
in the new slide

284
00:17:12.800 --> 00:17:14.100
because not all of this is relevant to

285
00:17:15.400 --> 00:17:16.100
our course

286
00:17:17.000 --> 00:17:17.200
here

287
00:17:19.500 --> 00:17:23.100
if you remember we showed we talked about this very fundamental component

288
00:17:22.100 --> 00:17:23.900
 of a neural network.

289
00:17:25.900 --> 00:17:26.600
So it has

290
00:17:30.500 --> 00:17:30.800
you know.

291
00:17:33.500 --> 00:17:34.000
these inputs

292
00:17:34.700 --> 00:17:37.200
and each input corresponds to

293
00:17:39.600 --> 00:17:41.800
a feature of the dataset

294
00:17:43.700 --> 00:17:46.400
So again to use a real estate example the features

295
00:17:46.400 --> 00:17:47.300
 of a property.

296
00:17:48.200 --> 00:17:51.000
It's the number of bedrooms the number of bathrooms.

297
00:17:52.200 --> 00:17:53.200
the size of the apartment

298
00:17:55.400 --> 00:17:58.400
And these are the weights now in machine learning

299
00:17:58.400 --> 00:18:01.600
 terminology. We also

300
00:18:01.600 --> 00:18:02.300
 called these.

301
00:18:05.300 --> 00:18:05.900
parameters

302
00:18:08.200 --> 00:18:10.200
So wait parameters. These are the same thing.

303
00:18:13.800 --> 00:18:15.400
Parameters and weights refer to the same thing.

304
00:18:17.500 --> 00:18:17.800
So here

305
00:18:19.800 --> 00:18:21.400
the purpose of the training data set

306
00:18:22.200 --> 00:18:24.800
is to let the model learn the parameters to understand.

307
00:18:25.900 --> 00:18:27.600
To understand, you know, it's all.

308
00:18:28.800 --> 00:18:30.600
statistical calculation

309
00:18:31.800 --> 00:18:34.800
but we want the monitor calculate the weights. Now

310
00:18:34.800 --> 00:18:37.200
 if you have a regression problem the way

311
00:18:37.200 --> 00:18:38.100
 you find the weights.

312
00:18:38.900 --> 00:18:41.600
Will you there's something called the Computing formula?

313
00:18:43.500 --> 00:18:46.700
Again, it's nothing more than basic arithmetic. Maybe

314
00:18:46.700 --> 00:18:47.900
 we can talk about the later on.

315
00:18:48.500 --> 00:18:50.600
But it has to do with the observations and the residuals.

316
00:18:51.400 --> 00:18:55.000
And the residual is a distance of the observation from the regression

317
00:18:54.300 --> 00:18:58.300
 line. If you've watched the video from that,

318
00:18:57.300 --> 00:19:00.200
 I referenced you would be familiar

319
00:19:00.200 --> 00:19:03.400
 with these terms anyway in the training stage. We want

320
00:19:03.400 --> 00:19:04.500
 the model to learn the parameters.

321
00:19:06.400 --> 00:19:08.700
Sometimes training and validation is done in one.

322
00:19:09.900 --> 00:19:10.600
in one go

323
00:19:12.100 --> 00:19:15.200
So depending on the library that you're using in the machine learning while they're

324
00:19:15.200 --> 00:19:18.100
 using you may have to create you may need to have three

325
00:19:18.100 --> 00:19:21.400
 divisions. So you will take your original data and divide

326
00:19:21.400 --> 00:19:21.900
 it to three.

327
00:19:22.700 --> 00:19:25.100
Training validation tests other times you can

328
00:19:25.100 --> 00:19:26.100
 just have trained and test.

329
00:19:27.300 --> 00:19:28.100
the purpose of validation

330
00:19:28.900 --> 00:19:31.400
is to see the check the metrics to

331
00:19:31.400 --> 00:19:33.400
 identify underfitting overfitting.

332
00:19:34.300 --> 00:19:37.100
We said that underfing underfitting is when the model has

333
00:19:37.100 --> 00:19:40.000
 not been able to calculate the

334
00:19:41.500 --> 00:19:44.300
Which properly and you can easily detect this because as

335
00:19:44.300 --> 00:19:45.300
 soon as you look at the metrics.

336
00:19:46.400 --> 00:19:49.500
Let's say we talked about MSC if the MSC

337
00:19:49.500 --> 00:19:52.000
 is large. It is diverging from

338
00:19:52.300 --> 00:19:55.600
 zero for the train that asset that's under 30. So we

339
00:19:55.600 --> 00:19:57.500
 don't go any further. We don't even proceed to test.

340
00:19:58.800 --> 00:19:59.500
So if that happens.

341
00:20:00.500 --> 00:20:00.800
then

342
00:20:03.600 --> 00:20:06.500
we'd have to adjust our data or just our

343
00:20:06.500 --> 00:20:07.200
 machine learning model.

344
00:20:08.200 --> 00:20:11.300
And that is if we can even do something

345
00:20:11.300 --> 00:20:14.000
 about it because sometimes the data is so sparse. So

346
00:20:15.900 --> 00:20:18.100
Unusable, there's not much you can do about

347
00:20:18.100 --> 00:20:18.300
 it.

348
00:20:18.800 --> 00:20:20.600
You know the same garbage and garbage out.

349
00:20:21.200 --> 00:20:22.700
So we need to make sure there's no garbage.

350
00:20:24.000 --> 00:20:24.200
but

351
00:20:29.600 --> 00:20:31.800
another purpose of validation is for the model to

352
00:20:32.800 --> 00:20:34.700
adjust the parameters after it has learned.

353
00:20:35.900 --> 00:20:38.300
So after it learns the parameters.

354
00:20:39.300 --> 00:20:42.600
Even if the metrics are good, let's say MSE is

355
00:20:42.600 --> 00:20:42.800
 good.

356
00:20:43.500 --> 00:20:44.600
We want it to be better still.

357
00:20:46.300 --> 00:20:49.400
So in this validation stage with the

358
00:20:49.400 --> 00:20:50.100
 validation data set.

359
00:20:51.300 --> 00:20:54.400
We can we look at the metrics and then if necessary we

360
00:20:54.400 --> 00:20:56.800
 up. We change the hyper parameters now do not.

361
00:21:00.900 --> 00:21:03.800
Conflate parameters in hyperparameters. Unfortunately, there's

362
00:21:03.800 --> 00:21:06.500
 one library at least that I S skater very

363
00:21:06.500 --> 00:21:07.100
 popular Library.

364
00:21:07.800 --> 00:21:10.800
They use these two words interchangeably or

365
00:21:10.800 --> 00:21:13.300
 at least when I look at the documentation that is the

366
00:21:13.300 --> 00:21:14.500
 case. That's a problem because

367
00:21:16.100 --> 00:21:19.300
hyper parameter parameters are different things very different

368
00:21:19.300 --> 00:21:22.200
 things. The parameters are the weights that the model must learn.

369
00:21:22.700 --> 00:21:24.000
the hyperparameters

370
00:21:24.800 --> 00:21:27.700
Are like the arguments of

371
00:21:27.700 --> 00:21:29.000
 the function?

372
00:21:30.200 --> 00:21:31.000
so we will have

373
00:21:32.200 --> 00:21:35.700
let's say a machine learning class like sequential and

374
00:21:35.700 --> 00:21:39.000
 the sequential class can take different arguments. We will

375
00:21:38.100 --> 00:21:39.600
 see this in a minute.

376
00:21:40.400 --> 00:21:43.100
You as the data scientist must choose the hyper parameters.

377
00:21:43.800 --> 00:21:46.300
They're effectively arguments of a function. So you must

378
00:21:46.300 --> 00:21:49.300
 change the architecture of the neural network.

379
00:21:49.300 --> 00:21:52.000
 If in the case of deep learning until you know, we

380
00:21:52.200 --> 00:21:55.200
 get a better combination. So as the machine learning if you're doing machine under

381
00:21:55.200 --> 00:21:55.900
 two things you need to fix.

382
00:21:56.900 --> 00:21:59.400
Or two things you need to take into account the

383
00:21:59.400 --> 00:22:00.600
 date the quality of the data.

384
00:22:01.500 --> 00:22:04.400
and the type of machine learning model you choose

385
00:22:04.400 --> 00:22:05.500
 you've chosen and the

386
00:22:07.300 --> 00:22:10.300
The configuration so actually that's a better

387
00:22:10.300 --> 00:22:11.900
 word for hyperparam is the configuration.

388
00:22:12.700 --> 00:22:15.100
hyperparameters equals configuration of the

389
00:22:15.100 --> 00:22:15.300
 model

390
00:22:17.900 --> 00:22:18.100
now

391
00:22:20.100 --> 00:22:21.300
In order for you to find out.

392
00:22:22.900 --> 00:22:23.800
if this model

393
00:22:26.300 --> 00:22:26.700
is

394
00:22:28.300 --> 00:22:31.600
Usable and can be put into production after the

395
00:22:31.600 --> 00:22:32.300
 best possible.

396
00:22:34.500 --> 00:22:37.000
configuration after the best possible data

397
00:22:39.600 --> 00:22:41.600
mudging that imagining is a nobody clean the data.

398
00:22:42.700 --> 00:22:45.400
You do feature engineering. So assuming you've done

399
00:22:45.400 --> 00:22:48.400
 you've you've picked the best possible model and you have so

400
00:22:48.400 --> 00:22:51.800
 you have reduced the best possible data if

401
00:22:51.800 --> 00:22:54.100
 this model is going to be useful or not, and that is used

402
00:22:54.100 --> 00:22:54.700
 to test data set.

403
00:22:55.900 --> 00:22:57.100
the test dataset

404
00:22:58.100 --> 00:23:01.500
After test essay, we'll check the metrics after the adjusted model after

405
00:23:01.500 --> 00:23:04.300
 the adjusted parameter after the model has learned the new parameters.

406
00:23:05.100 --> 00:23:08.500
So after the test data set your metrics are still poor then.

407
00:23:09.500 --> 00:23:12.300
The model is not the it's not the right option.

408
00:23:12.300 --> 00:23:14.100
 That is assuming your data is

409
00:23:14.700 --> 00:23:15.800
you know well

410
00:23:20.100 --> 00:23:23.000
You know, your data is in the best possible condition.

411
00:23:24.200 --> 00:23:27.000
So if that's the if that's the case and your model is still

412
00:23:27.500 --> 00:23:30.200
 pulled and you need to choose a different model. Either that or again you need

413
00:23:30.200 --> 00:23:33.200
 to check the hyper parameters. So if you find overfitting here.

414
00:23:34.500 --> 00:23:35.900
Then you must go back.

415
00:23:37.200 --> 00:23:38.000
to

416
00:23:40.100 --> 00:23:41.900
what comes before the training stage?

417
00:23:44.300 --> 00:23:44.600
Okay.

418
00:23:45.800 --> 00:23:47.900
So in our case, we just need training and test.

419
00:23:49.800 --> 00:23:52.100
The training dataset would allow them all

420
00:23:52.100 --> 00:23:55.200
 to learn the parameters and the test set I said we will see if we have

421
00:23:55.200 --> 00:23:56.900
 underfitting overfitting.

422
00:23:57.700 --> 00:23:59.200
Or if we are on the right track.

423
00:24:04.500 --> 00:24:04.700
Okay.

424
00:24:06.100 --> 00:24:09.900
So we have 50,000 images for training

425
00:24:09.900 --> 00:24:10.400
 10.

426
00:24:11.100 --> 00:24:12.500
images for test

427
00:24:17.200 --> 00:24:17.500
now let me

428
00:24:19.800 --> 00:24:22.200
show you some of the pictures. I mean, we just saw it in

429
00:24:22.200 --> 00:24:22.200
 the

430
00:24:24.600 --> 00:24:25.500
on the website, but

431
00:24:28.600 --> 00:24:30.000
we want to make it part of our notebook.

432
00:24:31.600 --> 00:24:35.100
So here let me add some sections to this notebook.

433
00:24:35.800 --> 00:24:36.200
this is

434
00:24:40.500 --> 00:24:41.100
import

435
00:24:42.800 --> 00:24:43.900
libraries

436
00:24:44.800 --> 00:24:45.500
and data

437
00:24:46.200 --> 00:24:47.500
Let's call this point one.

438
00:24:52.100 --> 00:24:53.000
and then this will be

439
00:24:55.200 --> 00:24:55.600
part 2

440
00:24:57.300 --> 00:24:57.800
review

441
00:25:00.400 --> 00:25:00.600
the data

442
00:25:04.900 --> 00:25:07.700
so we said that c410 has

443
00:25:07.700 --> 00:25:08.500
 10 classes.

444
00:25:10.800 --> 00:25:11.300
Sorry.

445
00:25:14.800 --> 00:25:16.900
And what we want to do is plot.

446
00:25:18.100 --> 00:25:19.000
a grid of

447
00:25:26.300 --> 00:25:27.400
a grid of 10 pictures

448
00:25:29.700 --> 00:25:32.800
and then when a loop over 25 samples

449
00:25:34.600 --> 00:25:35.900
And then Plateau so we will say.

450
00:25:37.400 --> 00:25:37.800
or

451
00:25:39.900 --> 00:25:41.300
I in range.

452
00:25:42.300 --> 00:25:44.900
The range function will create a sequence of numbers.

453
00:25:47.100 --> 00:25:49.600
So here we want from 0 to 25.

454
00:25:52.200 --> 00:25:54.700
And I will say PLT Dot subplots.

455
00:26:00.000 --> 00:26:00.200
and

456
00:26:01.700 --> 00:26:02.700
this is index.

457
00:26:07.100 --> 00:26:10.700
We want we don't we this is not a Cartesian or

458
00:26:10.700 --> 00:26:13.200
 any kind of coordinate system. So we're going to empty out

459
00:26:13.200 --> 00:26:13.400
 the

460
00:26:14.400 --> 00:26:16.900
like remove any labels from the plot

461
00:26:18.700 --> 00:26:20.300
So we'll pass your empty list.

462
00:26:21.400 --> 00:26:22.800
Save for the y axis.

463
00:26:27.700 --> 00:26:28.700
We don't want any grid.

464
00:26:31.200 --> 00:26:32.300
again, because this is not a

465
00:26:33.500 --> 00:26:34.200
coordinate system

466
00:26:37.200 --> 00:26:40.000
and then we want to impose the picture or superimpose the picture.

467
00:26:43.600 --> 00:26:44.500
Well from each class.

468
00:26:45.500 --> 00:26:46.700
So we have train.

469
00:26:47.800 --> 00:26:48.200
images

470
00:26:57.700 --> 00:27:00.100
and then we want to say yeah, I want to

471
00:27:00.100 --> 00:27:01.100
 put the

472
00:27:02.300 --> 00:27:05.500
class label of each picture and on the x-axis like stable.

473
00:27:12.300 --> 00:27:13.100
class names

474
00:27:16.800 --> 00:27:17.400
train

475
00:27:19.600 --> 00:27:20.600
labels

476
00:27:25.400 --> 00:27:27.100
So if I show you the train labels?

477
00:27:28.900 --> 00:27:29.500
up here

478
00:27:34.200 --> 00:27:36.600
It's going to be a list within a list.

479
00:27:39.500 --> 00:27:41.900
So if you want to preview a particular class.

480
00:27:47.300 --> 00:27:49.700
we will need to go inside the list first and then

481
00:27:51.900 --> 00:27:53.300
Get the scale of value.

482
00:27:54.500 --> 00:27:55.400
So that's what we have.

483
00:27:56.900 --> 00:27:57.900
to set the square brackets

484
00:28:00.200 --> 00:28:02.300
So what we once we run this code, this is what we should see.

485
00:28:05.900 --> 00:28:07.100
No, this is not what we should see.

486
00:28:07.800 --> 00:28:09.000
What did I leave out?

487
00:28:16.500 --> 00:28:19.400
I think for this third argument it

488
00:28:19.400 --> 00:28:19.600
 needs to be.

489
00:28:21.100 --> 00:28:21.900
My plus one.

490
00:28:24.300 --> 00:28:26.300
and

491
00:28:29.500 --> 00:28:31.800
it's a plot singular.

492
00:28:34.800 --> 00:28:36.200
and then I am

493
00:28:37.900 --> 00:28:38.600
I am sure.

494
00:28:45.100 --> 00:28:45.500
There we go.

495
00:28:46.800 --> 00:28:49.300
So again the picture we just saw but it's a good

496
00:28:49.300 --> 00:28:51.700
 idea to have them here and our notebook.

497
00:28:53.400 --> 00:28:53.600
Okay.

498
00:28:56.300 --> 00:28:56.700
next

499
00:28:58.500 --> 00:29:01.400
we want to create our neural network.

500
00:29:04.800 --> 00:29:06.100
So let me

501
00:29:09.200 --> 00:29:10.000
Write the code first.

502
00:29:11.200 --> 00:29:12.800
I will then take the slide to show you.

503
00:29:14.200 --> 00:29:17.700
the picture of the architecture and then

504
00:29:17.700 --> 00:29:18.500
 I'll show you the

505
00:29:20.900 --> 00:29:23.100
The Matrix operation we call

506
00:29:23.100 --> 00:29:23.800
 Carnival evolution

507
00:29:24.800 --> 00:29:26.400
So this is going to be called.

508
00:29:31.600 --> 00:29:32.300
building the

509
00:29:36.300 --> 00:29:37.500
neural network model

510
00:29:40.900 --> 00:29:43.400
so we will instantiate the sequential class like

511
00:29:43.400 --> 00:29:45.800
 we saw in the previous notebook.

512
00:29:49.800 --> 00:29:52.500
again, because we again because we are critic a

513
00:29:52.500 --> 00:29:52.700
 sequence of

514
00:29:53.400 --> 00:29:56.200
layers input layers and layers

515
00:29:56.200 --> 00:29:56.900
 output layer

516
00:29:59.200 --> 00:30:02.600
of course, we can stack onto the stock other types of layers, but we're

517
00:30:02.600 --> 00:30:03.100
 just going to have

518
00:30:04.200 --> 00:30:07.000
we will have two convolutional layers three convolution layers.

519
00:30:08.600 --> 00:30:10.100
two Max pooling layers

520
00:30:14.200 --> 00:30:15.200
One Flat layer

521
00:30:16.500 --> 00:30:17.000
and two

522
00:30:18.100 --> 00:30:19.000
dense layers

523
00:30:20.600 --> 00:30:22.000
What are these we'll see in a minute.

524
00:30:24.600 --> 00:30:25.100
So we have

525
00:30:31.200 --> 00:30:32.000
the input layer

526
00:30:35.500 --> 00:30:39.200
We have one con

527
00:30:38.200 --> 00:30:40.300
 2D layer.

528
00:30:43.700 --> 00:30:46.100
all about a Max pool layer

529
00:30:51.900 --> 00:30:53.400
And we will do this three times.

530
00:30:57.600 --> 00:30:58.400
flat layer

531
00:31:01.600 --> 00:31:02.900
and two dense layers

532
00:31:05.400 --> 00:31:06.300
This is the architecture.

533
00:31:10.500 --> 00:31:11.600
Let me show you a picture of it.

534
00:31:15.400 --> 00:31:18.300
Now, I don't think if I don't think the one I have here is the

535
00:31:18.300 --> 00:31:21.500
 same architecture, but it doesn't really matter if

536
00:31:21.500 --> 00:31:23.200
 you understand what these components are.

537
00:31:26.900 --> 00:31:28.400
and what they are used for that's

538
00:31:29.900 --> 00:31:30.800
that was suffice.

539
00:31:32.600 --> 00:31:33.500
Where is that picture?

540
00:31:36.900 --> 00:31:37.500
This is the one.

541
00:31:39.100 --> 00:31:41.600
So we are building something of this sort.

542
00:31:43.900 --> 00:31:46.000
This one has two card layers that one has three.

543
00:31:48.200 --> 00:31:50.600
And this one has two bags pull layers double so.

544
00:31:52.800 --> 00:31:55.000
Okay, that one also has okay. So actually it is

545
00:31:55.200 --> 00:31:55.400
 this one.

546
00:31:56.300 --> 00:31:59.400
It is this one. So this is the first convolution layer.

547
00:32:08.500 --> 00:32:11.500
Okay. So this one it just has one convolution layer less

548
00:32:11.500 --> 00:32:14.000
 and one density or less. Anyway, the point is this.

549
00:32:15.300 --> 00:32:18.000
we will use the convolutional layers which are just

550
00:32:19.300 --> 00:32:21.100
stack of matrices or tensors

551
00:32:21.800 --> 00:32:24.400
to represent this picture in all of its

552
00:32:24.400 --> 00:32:25.000
 three color channels.

553
00:32:28.500 --> 00:32:29.600
Then we're going to use a Max pool.

554
00:32:30.700 --> 00:32:30.900
to

555
00:32:32.500 --> 00:32:35.200
and something that is not visualized here something that is

556
00:32:35.200 --> 00:32:36.600
 not plotted here and not even there.

557
00:32:37.400 --> 00:32:38.600
Is the kernel?

558
00:32:40.100 --> 00:32:41.100
Let me double check that.

559
00:32:43.200 --> 00:32:44.600
Do we have a kernel in here?

560
00:32:47.700 --> 00:32:50.400
Yes, but it's not it's not it's not.

561
00:32:52.700 --> 00:32:55.500
It's part of the convolution here. So there's a there's a

562
00:32:55.500 --> 00:32:58.400
 matrix inside kind of 2D layer,

563
00:32:58.400 --> 00:33:01.800
 which is called the the filter. So it's not visualized.

564
00:33:01.800 --> 00:33:04.500
 You're although it should have been that would have been more clear, but it's

565
00:33:04.500 --> 00:33:07.600
 one Matrix convolved with another Matrix and

566
00:33:07.600 --> 00:33:09.900
 the result of that Matrix. Well then be

567
00:33:13.000 --> 00:33:13.600
pulled

568
00:33:15.500 --> 00:33:16.700
inside this other Matrix

569
00:33:18.500 --> 00:33:19.500
the idea here is to

570
00:33:25.400 --> 00:33:26.800
contain the important.

571
00:33:28.800 --> 00:33:30.500
activations from this Matrix

572
00:33:31.400 --> 00:33:31.500
so

573
00:33:32.500 --> 00:33:34.400
Let's keep this picture in mind. Let me take you to.

574
00:33:37.100 --> 00:33:39.600
Vs code to show you what a convolution is first.

575
00:33:42.300 --> 00:33:42.500
Okay.

576
00:33:43.400 --> 00:33:45.500
We're going to create a Newton markdown file.

577
00:33:46.700 --> 00:33:47.600
Let's call this.

578
00:33:48.600 --> 00:33:49.700
math tutorial

579
00:33:51.500 --> 00:33:52.300
70

580
00:33:58.900 --> 00:34:01.800
question does each layer in the first convolutionary

581
00:34:01.800 --> 00:34:02.700
 have its own kernel? Yes.

582
00:34:03.400 --> 00:34:06.500
All three will have will have

583
00:34:06.500 --> 00:34:07.000
 filters. Yes.

584
00:34:08.300 --> 00:34:11.400
Let me show you what they are very easy and simple concept

585
00:34:11.400 --> 00:34:11.800
 by the way.

586
00:34:12.600 --> 00:34:13.800
So I will call this.

587
00:34:19.900 --> 00:34:20.900
Let's call it neural networks.

588
00:34:27.500 --> 00:34:31.500
So we have first a convolutional layer.

589
00:34:36.900 --> 00:34:37.900
and we'll talk about

590
00:34:40.200 --> 00:34:40.700
filter

591
00:34:42.200 --> 00:34:42.900
and then we will talk about

592
00:34:44.100 --> 00:34:44.700
pooling

593
00:34:45.800 --> 00:34:48.200
of which there are two types. There's average pooling and

594
00:34:48.200 --> 00:34:49.000
 Max pooling.

595
00:34:52.400 --> 00:34:54.300
So suppose we have and here.

596
00:34:56.100 --> 00:34:59.300
I'm going to write some math from this

597
00:34:59.300 --> 00:34:59.700
 book.

598
00:35:00.300 --> 00:35:00.800
this by the way

599
00:35:02.200 --> 00:35:04.400
I know I promise to share the list of books.

600
00:35:05.600 --> 00:35:08.100
But let me just point this out now because I have it here.

601
00:35:09.600 --> 00:35:10.600
This is one of the best.

602
00:35:11.900 --> 00:35:14.800
Written books on machine learning and especially neural

603
00:35:14.800 --> 00:35:15.400
 network just this one.

604
00:35:17.900 --> 00:35:18.900
Muhammad Zaki

605
00:35:20.500 --> 00:35:21.800
data mining machine learning

606
00:35:22.800 --> 00:35:23.800
I mean this book is just

607
00:35:24.700 --> 00:35:25.700
Pleasant to read

608
00:35:27.300 --> 00:35:30.300
The book gradually built on.

609
00:35:31.100 --> 00:35:32.800
basic concepts and work suits real

610
00:35:35.200 --> 00:35:36.400
I highly recommend you get this book.

611
00:35:37.600 --> 00:35:40.700
Either when physical form or digital form, so let

612
00:35:40.700 --> 00:35:43.600
 me show you the center the way they use

613
00:35:43.600 --> 00:35:44.200
 the notation here.

614
00:35:45.100 --> 00:35:46.100
or convolution

615
00:35:46.800 --> 00:35:49.700
we'll begin with a one-dimensional convolution and then we can

616
00:35:49.700 --> 00:35:52.100
 extend that idea to a two-dimensional.

617
00:35:57.500 --> 00:35:58.100
Matrix

618
00:36:00.100 --> 00:36:04.200
So suppose

619
00:36:04.200 --> 00:36:04.800
 we have two vectors.

620
00:36:07.400 --> 00:36:10.100
I'm going to slightly adapt adapter writings here.

621
00:36:12.200 --> 00:36:15.100
Can you write the name of the book? Yes the name of the book by the

622
00:36:15.100 --> 00:36:16.900
 way, I have these references here, right? So

623
00:36:17.800 --> 00:36:19.700
I will add it here to number 10.

624
00:36:20.900 --> 00:36:23.100
This is Mohamed Zaki.

625
00:36:24.100 --> 00:36:25.700
Is the other more authors?

626
00:36:27.500 --> 00:36:27.700
Yes.

627
00:36:28.600 --> 00:36:30.400
and Mira

628
00:36:36.400 --> 00:36:37.400
data mining

629
00:36:39.600 --> 00:36:41.700
And the Machine and learning?

630
00:36:46.100 --> 00:36:47.000
So Blue Book, yeah.

631
00:36:49.400 --> 00:36:49.700
Okay.

632
00:36:52.300 --> 00:36:54.000
and this is from

633
00:36:58.200 --> 00:36:58.800
page

634
00:37:03.200 --> 00:37:04.300
694

635
00:37:06.500 --> 00:37:08.600
So suppose we have two vectors.

636
00:37:16.200 --> 00:37:19.400
Now a picture is a matrix, but let's begin with one dimensional first.

637
00:37:23.100 --> 00:37:23.700
with the

638
00:37:25.500 --> 00:37:28.100
components, you know x sub 1

639
00:37:28.100 --> 00:37:29.800
 x up to etc, etc.

640
00:37:41.400 --> 00:37:45.000
And we have a filter Matrix of

641
00:37:44.300 --> 00:37:47.000
 excuse me. We talked about the vectors. This is

642
00:37:47.300 --> 00:37:48.200
 one dimensional for now.

643
00:37:49.100 --> 00:37:50.300
so in one dimension

644
00:37:56.700 --> 00:37:57.000
on

645
00:37:58.200 --> 00:37:59.400
Lucian

646
00:38:11.900 --> 00:38:13.300
Now this book uses w.

647
00:38:14.400 --> 00:38:14.900
because a

648
00:38:16.700 --> 00:38:19.400
while we are convolving it with with a filter.

649
00:38:20.500 --> 00:38:23.700
Vector or a filter Matrix the components of

650
00:38:23.700 --> 00:38:26.700
 a filter Vector of filter Matrix are really weights. So it

651
00:38:26.700 --> 00:38:29.700
 makes sense. I will also use the same convention. We'll make

652
00:38:29.700 --> 00:38:30.000
 this w

653
00:38:32.400 --> 00:38:33.800
and it will be weights.

654
00:38:37.700 --> 00:38:40.100
Now what you need to know, is that the number of

655
00:38:40.100 --> 00:38:40.700
 components?

656
00:38:41.700 --> 00:38:43.800
or the dimension of the weight

657
00:38:45.400 --> 00:38:46.300
and features

658
00:38:47.400 --> 00:38:48.000
are not the same.

659
00:38:51.900 --> 00:38:54.000
And here's I'll write down

660
00:38:54.600 --> 00:38:57.100
 the mathematical notation, but then I'll show you pictures. It's very

661
00:38:57.100 --> 00:38:57.900
 simple concept.

662
00:38:58.600 --> 00:39:01.300
Now we denote a kind of evolution with an

663
00:39:01.300 --> 00:39:01.700
 asterisk.

664
00:39:07.700 --> 00:39:10.600
So we take our two vectors X and W, of course

665
00:39:10.600 --> 00:39:12.000
 one of them has to be transposed.

666
00:39:13.700 --> 00:39:15.200
So which one is transposed?

667
00:39:19.400 --> 00:39:20.800
Okay, we don't need to transpose it.

668
00:39:23.500 --> 00:39:24.200
But here's the idea.

669
00:39:35.800 --> 00:39:38.900
We will perform an element wise operation on

670
00:39:38.900 --> 00:39:41.200
 the components of both vectors. So we

671
00:39:41.200 --> 00:39:41.400
 have

672
00:39:55.100 --> 00:39:56.300
x sub k

673
00:40:13.300 --> 00:40:17.500
i

674
00:40:20.100 --> 00:40:22.200
And then I think this is ODOT.

675
00:40:23.900 --> 00:40:24.100
Yeah.

676
00:40:25.600 --> 00:40:25.800
and

677
00:40:32.900 --> 00:40:33.300
w

678
00:40:34.600 --> 00:40:37.200
so this dot inside the circle is the

679
00:40:37.200 --> 00:40:40.300
 element wise operation. What we are going to do is we will

680
00:40:40.300 --> 00:40:40.500
 take

681
00:40:41.300 --> 00:40:41.800
let's say

682
00:40:43.700 --> 00:40:46.500
now x sub K refers

683
00:40:46.500 --> 00:40:46.500
 to

684
00:40:54.300 --> 00:40:54.600
a

685
00:40:55.800 --> 00:40:57.300
section of the vector

686
00:40:58.100 --> 00:41:00.800
Let me show you let me show you let me show it to you here.

687
00:41:01.700 --> 00:41:03.500
I think I even have it in that slide.

688
00:41:04.900 --> 00:41:07.100
Do I have it in the slide? I think I do.

689
00:41:08.300 --> 00:41:11.500
If not,

690
00:41:11.500 --> 00:41:14.100
 I will draw draw. It's it's not that difficult to

691
00:41:14.100 --> 00:41:15.400
 explain.

692
00:41:18.000 --> 00:41:18.300
No.

693
00:41:19.900 --> 00:41:22.100
Let me show you let me show you the book. Let me

694
00:41:22.100 --> 00:41:25.100
 show you a picture of that book. Sorry, I should have downloaded this before. Let me

695
00:41:25.100 --> 00:41:25.600
 I'll do it quickly.

696
00:41:30.300 --> 00:41:31.100
exactly

697
00:41:34.200 --> 00:41:37.700
There we go. Page 694, right?

698
00:41:39.500 --> 00:41:40.500
694

699
00:41:42.500 --> 00:41:43.300
let me go to that page.

700
00:41:45.900 --> 00:41:47.300
6 9 4

701
00:41:51.100 --> 00:41:54.100
show you convolution now convolutions also applied to

702
00:41:54.100 --> 00:41:55.900
 functions, but we're not going to get it there right now.

703
00:42:03.800 --> 00:42:05.300
It's going to load any second now.

704
00:42:33.200 --> 00:42:33.800
Come on.

705
00:42:42.600 --> 00:42:45.200
It's big book. That's why it takes a while to download. Let me

706
00:42:45.200 --> 00:42:45.400
 try again.

707
00:42:48.200 --> 00:42:48.900
the work

708
00:43:03.100 --> 00:43:03.400
finally

709
00:43:22.500 --> 00:43:25.700
And it's okay for me to show you this picture page because the author

710
00:43:25.700 --> 00:43:28.600
 actually made the slides many parts

711
00:43:28.600 --> 00:43:31.500
 of this page available online for free.

712
00:43:32.100 --> 00:43:33.600
iOS, try to find

713
00:43:34.600 --> 00:43:38.000
The link I think if we Google Zaki you

714
00:43:37.400 --> 00:43:38.900
 the website will show up.

715
00:43:45.600 --> 00:43:48.100
So I look up the slides the slides are quite helpful.

716
00:43:49.300 --> 00:43:51.800
I mean the author did a tremendous job of

717
00:43:52.300 --> 00:43:55.100
explaining these Concepts pictorially. Yeah, so this

718
00:43:55.100 --> 00:43:55.900
 is the cover of the book.

719
00:43:58.300 --> 00:43:59.600
Now, let me jump to that section.

720
00:44:01.000 --> 00:44:01.100
so

721
00:44:03.700 --> 00:44:05.100
it's the numbers are not.

722
00:44:08.900 --> 00:44:09.300
Correct.

723
00:44:10.600 --> 00:44:13.700
So I need to scroll to six

724
00:44:13.700 --> 00:44:14.200
 nine four.

725
00:44:16.300 --> 00:44:19.300
There we go. So this is our Vector. Yes. This is what I

726
00:44:19.300 --> 00:44:20.100
 mean by sub.

727
00:44:21.900 --> 00:44:23.800
section of the vector

728
00:44:25.900 --> 00:44:28.600
so if your filter is one by

729
00:44:28.600 --> 00:44:29.200
 three vector

730
00:44:31.500 --> 00:44:32.500
what you are going to do?

731
00:44:33.500 --> 00:44:34.900
Is do an element wise.

732
00:44:36.700 --> 00:44:38.800
multiplication so one times one

733
00:44:39.400 --> 00:44:40.500
three times zero

734
00:44:41.100 --> 00:44:42.200
one times negative 2

735
00:44:43.600 --> 00:44:44.500
and then the sum of that.

736
00:44:45.600 --> 00:44:46.300
Same thing here.

737
00:44:47.200 --> 00:44:47.900
three times one

738
00:44:49.100 --> 00:44:52.100
two times two. So three times one is three times two is four.

739
00:44:52.100 --> 00:44:55.200
 Obviously the zero cancels this other one out so it gets

740
00:44:55.200 --> 00:44:55.400
 seven.

741
00:44:56.300 --> 00:44:59.800
Now if you notice here, there's a fourth

742
00:44:59.800 --> 00:44:59.800
 term.

743
00:45:01.100 --> 00:45:02.200
the term stride

744
00:45:03.500 --> 00:45:06.700
A stride is how many well strides you're taking?

745
00:45:09.200 --> 00:45:12.400
In the vector like how many strides if imagine

746
00:45:12.400 --> 00:45:13.300
 this is your vector?

747
00:45:14.800 --> 00:45:17.100
This your vector. How many strides are you going? Like how many?

748
00:45:20.200 --> 00:45:21.400
Components are you skipping?

749
00:45:22.200 --> 00:45:24.700
I mean, it's pretty clear in this picture here. The stride is one.

750
00:45:25.700 --> 00:45:28.900
So initially the window if the filter was multiplying

751
00:45:28.900 --> 00:45:31.600
 this first three components and

752
00:45:31.600 --> 00:45:33.100
 then we take a one strike down.

753
00:45:34.100 --> 00:45:36.000
And then we do an element wise operation.

754
00:45:36.700 --> 00:45:39.200
And then we continue this way until we've covered the entire.

755
00:45:40.100 --> 00:45:40.700
vector

756
00:45:44.200 --> 00:45:45.200
this is the product.

757
00:45:47.100 --> 00:45:49.900
Or the result of this kind of evolution operation.

758
00:45:51.100 --> 00:45:54.500
And this is what that notation is representing when

759
00:45:54.500 --> 00:45:57.600
 I say x for example, except One X up to x sub

760
00:45:57.600 --> 00:45:57.700
 3.

761
00:45:58.900 --> 00:45:59.100
Okay.

762
00:46:04.400 --> 00:46:07.800
So X of three is the number of components your multiplying

763
00:46:07.800 --> 00:46:10.300
 this corresponds the three the subscript

764
00:46:10.300 --> 00:46:13.600
 code response to the size of the filter here.

765
00:46:13.600 --> 00:46:14.400
 Don't know by w.

766
00:46:15.500 --> 00:46:19.000
so the first subsection the second subsection third subsection

767
00:46:18.700 --> 00:46:20.500
 and you are going to

768
00:46:22.400 --> 00:46:22.700
add

769
00:46:24.200 --> 00:46:27.300
The result of this element wise operation. That's what you're seeing

770
00:46:27.300 --> 00:46:28.100
 here. So this sum

771
00:46:28.800 --> 00:46:31.800
is that value this sum is that

772
00:46:31.800 --> 00:46:34.300
 value and so on and then you will sum

773
00:46:34.300 --> 00:46:35.800
 up all of these together.

774
00:46:36.900 --> 00:46:38.100
So you're going to add up?

775
00:46:39.700 --> 00:46:41.900
negative 1 7 5 4 negative 1

776
00:46:43.500 --> 00:46:46.300
and this will be put into another Matrix. So if I

777
00:46:46.300 --> 00:46:47.300
 can scroll down here.

778
00:47:01.300 --> 00:47:04.500
Let me jump to and show you the 2D version. So this is 2D

779
00:47:04.500 --> 00:47:04.900
 convolution.

780
00:47:06.100 --> 00:47:07.300
Right here.

781
00:47:09.600 --> 00:47:10.800
There we go. Same idea.

782
00:47:12.300 --> 00:47:14.300
This is applicable to what we are doing.

783
00:47:16.400 --> 00:47:16.500
Okay.

784
00:47:17.500 --> 00:47:17.800
again

785
00:47:18.600 --> 00:47:21.300
Even in this example we're going in strides of

786
00:47:21.300 --> 00:47:21.500
 one.

787
00:47:22.100 --> 00:47:25.100
So multiply element-wise right the order.

788
00:47:26.200 --> 00:47:28.400
Well and notice this is an identity Matrix.

789
00:47:29.200 --> 00:47:32.200
So which means the numbers on the

790
00:47:32.200 --> 00:47:35.000
 principal diagonal of this subset?

791
00:47:37.200 --> 00:47:40.300
Will be What Remain and they will be added together. So one times

792
00:47:40.300 --> 00:47:40.700
 one?

793
00:47:43.100 --> 00:47:46.400
two times zero is going to cancel out three times zero is going to cancel out

794
00:47:46.400 --> 00:47:48.400
 one times one add these together you get to

795
00:47:49.800 --> 00:47:51.500
Then we take one story to the right.

796
00:47:52.400 --> 00:47:55.400
So we are looking at the picture

797
00:47:55.400 --> 00:47:58.800
 so to speak by taking a strike you're scanning

798
00:47:58.800 --> 00:47:59.100
 the picture.

799
00:48:01.300 --> 00:48:04.200
And the numbers we the there was a

800
00:48:04.200 --> 00:48:06.400
 and the numbers you would pick in the weights depend.

801
00:48:07.100 --> 00:48:10.900
On how you want to look at the picture because for a

802
00:48:10.900 --> 00:48:12.500
 model to look at a picture.

803
00:48:13.700 --> 00:48:16.900
Or is to look at vertical lines

804
00:48:16.900 --> 00:48:20.100
 or horizontal lines or diagonal

805
00:48:19.100 --> 00:48:20.500
 lines.

806
00:48:21.200 --> 00:48:25.000
So if you look so that's why we have multiple filters because we

807
00:48:24.300 --> 00:48:27.700
 want to look at the picture from different. Let's say

808
00:48:27.700 --> 00:48:30.300
 angles and then add up everything. We see

809
00:48:30.300 --> 00:48:31.700
 everything the model sees.

810
00:48:32.300 --> 00:48:33.600
Same thing here two times one.

811
00:48:34.700 --> 00:48:37.100
That's two it's sorry two times one is

812
00:48:37.100 --> 00:48:39.700
 two four times one is well four.

813
00:48:40.700 --> 00:48:43.400
So four plus two is six there's zeros.

814
00:48:45.100 --> 00:48:47.500
Eliminate one. I think you get the idea, right?

815
00:48:49.200 --> 00:48:52.500
And of course we can then take this and do this for us to a tensor,

816
00:48:52.500 --> 00:48:53.700
 which is a stack of matrices.

817
00:48:57.400 --> 00:48:58.900
I think this is the picture for it.

818
00:49:02.300 --> 00:49:03.300
But I think you get the idea.

819
00:49:05.100 --> 00:49:05.400
Okay.

820
00:49:06.600 --> 00:49:09.400
And then we have Max pooling. So let me return the notes

821
00:49:09.400 --> 00:49:09.500
 Here.

822
00:49:11.500 --> 00:49:13.000
We will take this sum.

823
00:49:14.500 --> 00:49:15.800
of all of these so

824
00:49:19.600 --> 00:49:20.500
I will use.

825
00:49:27.200 --> 00:49:28.600
Which notation helps the best?

826
00:49:37.500 --> 00:49:38.500
Just going to put some here.

827
00:49:49.600 --> 00:49:49.900
Okay.

828
00:49:51.200 --> 00:49:52.500
That's all the kind of Illusion is.

829
00:49:56.900 --> 00:49:57.700
the filter

830
00:49:58.900 --> 00:50:00.400
Is that W vector?

831
00:50:02.800 --> 00:50:03.100
so

832
00:50:05.000 --> 00:50:05.300
where

833
00:50:09.800 --> 00:50:10.200
X

834
00:50:14.800 --> 00:50:15.700
Is the data?

835
00:50:18.100 --> 00:50:19.600
And the data can be anything pictures.

836
00:50:22.400 --> 00:50:23.100
sequence of

837
00:50:28.600 --> 00:50:29.200
words

838
00:50:35.800 --> 00:50:36.300
prices

839
00:50:38.500 --> 00:50:41.200
Like in the real estate example and W is the filter.

840
00:50:50.300 --> 00:50:51.200
Now what is a filter?

841
00:50:53.700 --> 00:50:56.600
Let me show you a picture because that's the best fastest way

842
00:50:56.600 --> 00:50:59.800
 to make sense of a filter. So I'm gonna go I we

843
00:50:59.800 --> 00:51:02.400
 think we saw this in perhaps in our

844
00:51:02.400 --> 00:51:02.600
 first session.

845
00:51:03.600 --> 00:51:05.900
I will look it up again. So I'm gonna type here.

846
00:51:13.400 --> 00:51:14.400
neural network

847
00:51:21.800 --> 00:51:23.200
filter image

848
00:51:37.100 --> 00:51:38.500
horizontal vertical

849
00:51:46.300 --> 00:51:49.500
yeah, this is it. By the way this example I

850
00:51:49.500 --> 00:51:51.900
 believe is from another very well written book.

851
00:51:54.500 --> 00:51:57.200
I know I keep saying this is what the other one is

852
00:51:57.200 --> 00:52:00.600
 the I'll show you in a second. But here you

853
00:52:00.600 --> 00:52:02.400
 can obviously see we have this number four. Yes.

854
00:52:03.900 --> 00:52:06.600
now in order for the model to perceive

855
00:52:08.500 --> 00:52:10.200
The number four it must be able to see.

856
00:52:13.400 --> 00:52:14.600
the vertical lines

857
00:52:16.800 --> 00:52:18.500
the horizontal lines and

858
00:52:20.100 --> 00:52:21.700
diagonal lines if any

859
00:52:22.700 --> 00:52:25.200
If you see here we have how many vertical lines

860
00:52:25.200 --> 00:52:26.300
 we have two vertical lines?

861
00:52:27.600 --> 00:52:28.900
this part of the number four

862
00:52:31.200 --> 00:52:33.000
and obviously this part of the number four.

863
00:52:33.800 --> 00:52:35.400
And then the one horizontal line.

864
00:52:37.100 --> 00:52:37.400
Is here?

865
00:52:39.100 --> 00:52:40.900
So we will have one filter.

866
00:52:42.600 --> 00:52:46.100
For the vertical lines that is how we will arrange now. They

867
00:52:45.100 --> 00:52:48.800
 don't have they haven't shown you the combination. Like

868
00:52:48.800 --> 00:52:51.300
 how what numbers would you put in the filter?

869
00:52:51.300 --> 00:52:52.000
 But

870
00:52:54.300 --> 00:52:55.400
I'll show it to you in a minute.

871
00:52:56.300 --> 00:52:59.000
Anyway, so this will be a matrix the filter Matrix.

872
00:53:00.300 --> 00:53:03.900
And when you convolve this Matrix

873
00:53:03.900 --> 00:53:06.500
 with the original Matrix, you can

874
00:53:06.500 --> 00:53:08.900
 see we'll get the we will get these signals.

875
00:53:10.200 --> 00:53:11.900
So you can see here. We have the number three.

876
00:53:13.600 --> 00:53:14.900
Three is a very strong signal.

877
00:53:15.600 --> 00:53:16.200
and two

878
00:53:18.200 --> 00:53:21.500
is a strong but not as strong. But anyway, we the

879
00:53:21.500 --> 00:53:24.300
 model has perceived is able

880
00:53:24.300 --> 00:53:26.200
 to see those two lines.

881
00:53:27.100 --> 00:53:30.400
So they this part corresponds to that

882
00:53:30.400 --> 00:53:33.600
 and by the way, why is this three? Well, because when

883
00:53:33.600 --> 00:53:36.500
 we took a stride here, we saw three when

884
00:53:36.500 --> 00:53:38.100
 you take a stride here.

885
00:53:40.500 --> 00:53:43.100
The signal weakens and when you come

886
00:53:43.100 --> 00:53:44.900
 down here the signal weakens even some more.

887
00:53:45.900 --> 00:53:47.700
Right because it's affected by these zeros.

888
00:53:49.500 --> 00:53:50.400
and then

889
00:53:51.300 --> 00:53:51.500
yeah.

890
00:53:52.500 --> 00:53:55.700
These are all three but because we have a completely

891
00:53:55.700 --> 00:53:56.300
 white pixels.

892
00:53:57.100 --> 00:53:58.400
all the way from top to bottom

893
00:53:59.500 --> 00:54:01.300
same thing here for the horizontal lines.

894
00:54:02.400 --> 00:54:05.500
There are there is not a horizontal line so to

895
00:54:05.500 --> 00:54:07.600
 speak because but there is some.

896
00:54:08.400 --> 00:54:11.300
Activity, but it's not strong enough to constitute a

897
00:54:11.300 --> 00:54:13.500
 lot which is why the signal is weak up here.

898
00:54:14.600 --> 00:54:17.100
Here, however, we have would you have a strong signal?

899
00:54:18.200 --> 00:54:21.100
But you have these twos because they're affected by

900
00:54:21.100 --> 00:54:21.700
 these zeros.

901
00:54:23.600 --> 00:54:26.200
And then we have no vertical lines. Excuse me. We

902
00:54:26.200 --> 00:54:30.200
 have no highs enter lines in this part of the Matrix which is why the

903
00:54:29.200 --> 00:54:31.700
 signal is completely weak.

904
00:54:32.900 --> 00:54:35.200
But if you try to visualize this if you were to

905
00:54:35.200 --> 00:54:36.700
 put these two matrices together.

906
00:54:37.500 --> 00:54:40.000
If you were to put these Matrix if I would like to take this three.

907
00:54:40.900 --> 00:54:41.800
And bring it up here.

908
00:54:43.200 --> 00:54:44.600
It would form the number four.

909
00:54:46.600 --> 00:54:49.000
And there's nothing across the diagonal. So this is weak altogether.

910
00:54:51.700 --> 00:54:52.700
That's the purpose of the filter.

911
00:54:53.800 --> 00:54:56.500
Now the numbers you would choose in the filter that

912
00:54:56.500 --> 00:54:56.900
 really depends.

913
00:55:02.400 --> 00:55:05.200
And I don't remember what numbers you have to put

914
00:55:05.200 --> 00:55:08.400
 like what weight you have to put specifically in the filter here. This is another good

915
00:55:08.400 --> 00:55:10.400
 good illustration.

916
00:55:12.300 --> 00:55:13.600
Let me make it higher resolution.

917
00:55:21.100 --> 00:55:24.700
This is a picture. Yeah, and you have different filters one for horizontal

918
00:55:24.700 --> 00:55:27.200
 line one for a vertical line one for this one for that

919
00:55:27.200 --> 00:55:30.100
 and you will convolve all these filters by

920
00:55:30.100 --> 00:55:30.900
 the original Matrix.

921
00:55:33.300 --> 00:55:33.700
Okay.

922
00:55:35.200 --> 00:55:38.600
Where was that web page? We looked at the other day. I think

923
00:55:38.600 --> 00:55:40.000
 he was on our first session. So

924
00:55:43.800 --> 00:55:44.600
all Network

925
00:55:53.700 --> 00:55:54.300
blog

926
00:56:23.700 --> 00:56:24.000
Yeah.

927
00:56:28.100 --> 00:56:29.800
I'm pretty sure we've seen this already.

928
00:56:37.500 --> 00:56:39.600
Colonel is also synonymous with filter.

929
00:56:40.900 --> 00:56:41.100
Okay.

930
00:56:42.200 --> 00:56:43.800
So for example if you put a 5.

931
00:56:44.500 --> 00:56:46.500
Sorry about that if you put a 5 in here.

932
00:56:47.100 --> 00:56:47.600
in the middle

933
00:56:49.500 --> 00:56:51.000
then and negative ones.

934
00:56:52.100 --> 00:56:54.700
In these places, then you're going to sharpen the image.

935
00:56:55.300 --> 00:56:56.600
so when you convolve

936
00:56:57.500 --> 00:56:59.600
this picture with that.

937
00:57:00.600 --> 00:57:01.300
Matrix

938
00:57:02.500 --> 00:57:06.100
the effect will be to sharpen the image and you can see we get

939
00:57:06.100 --> 00:57:10.100
 a clear outline of the person's face where the

940
00:57:09.100 --> 00:57:12.100
 eyes are where the lips are. So this is

941
00:57:12.100 --> 00:57:14.100
 going to be easier to classify than the picture on the left.

942
00:57:16.300 --> 00:57:16.500
Okay.

943
00:57:19.700 --> 00:57:22.400
I can look at up and show you what numbers are

944
00:57:22.400 --> 00:57:24.900
 arranged in the filters. So for emboss.

945
00:57:25.700 --> 00:57:27.600
You can see will be 2 1 0.

946
00:57:28.900 --> 00:57:31.100
You get the idea, right? That's the point.

947
00:57:32.700 --> 00:57:34.100
And then we have Max pooling.

948
00:57:38.700 --> 00:57:39.400
Matrix

949
00:57:41.500 --> 00:57:43.100
of weights to

950
00:57:44.600 --> 00:57:46.800
I'll put a quotation marks perceive.

951
00:57:52.500 --> 00:57:52.800
the

952
00:57:56.700 --> 00:57:58.500
what's the what's a good word to use here?

953
00:57:59.200 --> 00:58:00.100
to perceive the

954
00:58:02.100 --> 00:58:04.200
outlines for example of the

955
00:58:04.800 --> 00:58:05.300
picture

956
00:58:08.200 --> 00:58:10.200
vertical line vertical

957
00:58:11.400 --> 00:58:13.900
lights horizontal lines

958
00:58:19.400 --> 00:58:22.600
question when doing it convolution is the output image always

959
00:58:22.600 --> 00:58:23.800
 smaller than the input image.

960
00:58:27.400 --> 00:58:28.300
Well, yes.

961
00:58:29.200 --> 00:58:30.600
Yes, because you are.

962
00:58:35.100 --> 00:58:38.400
Well, I mean that's that's the that's

963
00:58:38.400 --> 00:58:41.400
 the effect of multiplying is a large

964
00:58:41.400 --> 00:58:44.100
 matrix by smaller Matrix. It will be smaller. Now what you can

965
00:58:44.100 --> 00:58:44.400
 do is

966
00:58:46.400 --> 00:58:49.000
Now there are different types of new architecture where you can

967
00:58:49.100 --> 00:58:49.900
 actually blow up the picture.

968
00:58:51.800 --> 00:58:52.000
Okay.

969
00:58:53.900 --> 00:58:56.600
But let me show you what pooling is pulling is.

970
00:59:01.200 --> 00:59:01.700
is very

971
00:59:04.200 --> 00:59:07.100
You in the case of Max pooling. Let me go that book here.

972
00:59:07.100 --> 00:59:08.000
 Where's that book?

973
00:59:08.600 --> 00:59:10.100
Pulling is when you take.

974
00:59:11.300 --> 00:59:13.500
Which pages I think it's page 700 so.

975
00:59:17.500 --> 00:59:18.600
Let me show you pulling.

976
00:59:36.900 --> 00:59:37.300
here

977
00:59:42.700 --> 00:59:45.300
Let me show you what Max cooling what pulling does

978
00:59:45.300 --> 00:59:48.100
 and then why would use pooling so here you can see when we have

979
00:59:48.100 --> 00:59:48.500
 this.

980
00:59:50.600 --> 00:59:53.400
If this is a picture the super pixel or the sub sample

981
00:59:53.400 --> 00:59:56.300
 if the whole Matrix the sample then a sub

982
00:59:56.300 --> 00:59:57.000
 sample is a section.

983
00:59:57.700 --> 01:00:01.200
You will take the strongest or the maximum

984
01:00:00.200 --> 01:00:04.200
 value in this in this particular section.

985
01:00:03.200 --> 01:00:05.000
 It's the number three.

986
01:00:09.300 --> 01:00:11.900
In this section, it's the number four.

987
01:00:12.800 --> 01:00:14.000
In this section is the number two.

988
01:00:14.800 --> 01:00:17.200
And here it's 4 that's what Max pooling does.

989
01:00:17.800 --> 01:00:19.600
Now Max pooling is done for two purposes.

990
01:00:31.600 --> 01:00:32.400
the pooling

991
01:00:37.800 --> 01:00:40.500
the pulling Matrix

992
01:00:41.800 --> 01:00:43.500
in order to make this application

993
01:00:44.800 --> 01:00:46.200
now Max pooling Matrix

994
01:00:48.100 --> 01:00:50.000
is used to achieve.

995
01:00:51.500 --> 01:00:52.000
following

996
01:00:54.200 --> 01:00:54.400
one

997
01:00:56.100 --> 01:00:56.600
reduce

998
01:00:57.800 --> 01:00:58.800
the computational

999
01:01:06.400 --> 01:01:07.700
load of computing

1000
01:01:12.200 --> 01:01:13.100
activations

1001
01:01:14.400 --> 01:01:19.500
You know like in the brain's neuron, right or the

1002
01:01:18.500 --> 01:01:21.600
 perceptor we talked about the signal the travels down

1003
01:01:21.600 --> 01:01:24.900
 the neuron we want to make it. Let's come or

1004
01:01:24.900 --> 01:01:27.400
 something because this picture is a 32 by 32

1005
01:01:27.400 --> 01:01:27.600
 pictures.

1006
01:01:29.700 --> 01:01:31.100
32.3 is a tiny picture.

1007
01:01:32.300 --> 01:01:33.800
When in reality?

1008
01:01:37.900 --> 01:01:41.100
The kinds of picture you would see on the internet are 300 by

1009
01:01:40.100 --> 01:01:43.200
 300 500 by 5. If

1010
01:01:43.200 --> 01:01:46.200
 you're using a DS if using dslrs or a mirrorless camera, like

1011
01:01:46.200 --> 01:01:47.000
 the one I have in here.

1012
01:01:48.400 --> 01:01:49.800
There will be Million by million.

1013
01:01:50.500 --> 01:01:52.000
Like 13 million by 30 million.

1014
01:01:52.900 --> 01:01:53.000
so

1015
01:01:54.400 --> 01:01:56.700
and imagine you want to do this in real time. It will be very

1016
01:01:57.700 --> 01:01:58.600
demanding

1017
01:01:59.700 --> 01:02:02.500
and that's just for one picture. Imagine. We have like a folder of

1018
01:02:02.500 --> 01:02:05.700
 pictures. So this Max pulley will really make it

1019
01:02:05.700 --> 01:02:06.200
 easier to

1020
01:02:08.300 --> 01:02:10.200
figure out what's in the what's the picture?

1021
01:02:11.700 --> 01:02:15.000
The second part of Max pooling is to handle.

1022
01:02:17.500 --> 01:02:19.300
Or not let them use another word.

1023
01:02:20.800 --> 01:02:24.100
Two it is called translational invariance.

1024
01:02:34.300 --> 01:02:35.900
The word I want to use is what?

1025
01:02:38.500 --> 01:02:38.700
to

1026
01:02:41.900 --> 01:02:42.300
become

1027
01:02:47.300 --> 01:02:50.400
translationally invariant

1028
01:02:51.100 --> 01:02:52.500
And what this is what me?

1029
01:02:53.600 --> 01:02:56.700
Oh, there's another slide start over here based on

1030
01:02:56.700 --> 01:02:58.100
 the Kernel side and the stride.

1031
01:02:58.400 --> 01:03:01.100
Yes, exactly. So the output will depend on the

1032
01:03:01.100 --> 01:03:01.800
 size of the kernel.

1033
01:03:03.100 --> 01:03:04.000
and the stride

1034
01:03:05.100 --> 01:03:08.300
smaller stars are better, but they are more time consuming.

1035
01:03:10.300 --> 01:03:13.100
Does a maximal identify which kind of volusional curl in

1036
01:03:13.100 --> 01:03:14.200
 the previously had the highest match?

1037
01:03:15.100 --> 01:03:18.500
That's Max pool identify which kind of evolutional.

1038
01:03:20.900 --> 01:03:21.900
Not the kernel.

1039
01:03:22.800 --> 01:03:25.500
The sub sample in The convolutional Matrix

1040
01:03:25.500 --> 01:03:27.100
 and if I bring it back to the book.

1041
01:03:28.200 --> 01:03:31.400
it is not the kernel from

1042
01:03:31.400 --> 01:03:33.300
 which the filter from which we're getting the

1043
01:03:34.300 --> 01:03:37.100
max value from the origin convolution

1044
01:03:40.500 --> 01:03:42.200
so for example if I bring you back this

1045
01:03:44.400 --> 01:03:44.600
here

1046
01:03:45.800 --> 01:03:49.000
Do you see this? Do you see this grid this red this

1047
01:03:48.400 --> 01:03:50.500
 three by three red grid

1048
01:03:52.100 --> 01:03:54.800
So in this picture or in this corner?

1049
01:03:56.400 --> 01:03:59.200
Let's say we what we actually want dark colors because we want to

1050
01:03:59.200 --> 01:04:03.700
 find out the outlines. So we want to discard the

1051
01:04:02.700 --> 01:04:05.400
 white background and focus

1052
01:04:05.400 --> 01:04:06.300
 only on the

1053
01:04:08.100 --> 01:04:12.700
outline the face. So here the strong signals will be the darker

1054
01:04:11.700 --> 01:04:12.900
 pixels.

1055
01:04:13.800 --> 01:04:16.100
So you can see here in this three by three.

1056
01:04:17.200 --> 01:04:20.200
The largest value is the one at

1057
01:04:20.200 --> 01:04:20.800
 the bottom right corner.

1058
01:04:22.700 --> 01:04:25.000
And then for example if I come here.

1059
01:04:28.700 --> 01:04:31.100
The strong mystical will be in the top left.

1060
01:04:31.800 --> 01:04:32.600
top lifter

1061
01:04:33.800 --> 01:04:34.400
corner

1062
01:04:38.200 --> 01:04:39.400
I hope that answers your question.

1063
01:04:44.300 --> 01:04:47.300
Again, the way you would arrange the numbers in the filter will depend

1064
01:04:47.300 --> 01:04:48.800
 on the color Channel.

1065
01:04:49.500 --> 01:04:52.100
And what you are trying to detect if I scroll down here?

1066
01:04:54.600 --> 01:04:57.400
Let me show you what what habits this picture

1067
01:04:57.400 --> 01:04:58.700
 when you apply different filters.

1068
01:05:00.300 --> 01:05:03.800
identity will obviously identity will give you

1069
01:05:03.800 --> 01:05:06.200
 the same image, but for example if I put in

1070
01:05:07.300 --> 01:05:08.100
blur

1071
01:05:10.500 --> 01:05:13.900
you can see that it didn't work identity.

1072
01:05:16.100 --> 01:05:18.900
It's very subtle. Let me reduce the

1073
01:05:23.400 --> 01:05:24.200
numbers here

1074
01:05:27.800 --> 01:05:28.700
Miss playing around.

1075
01:05:29.700 --> 01:05:30.400
Darkness

1076
01:05:34.700 --> 01:05:36.200
it's very celebrated. It's blurred.

1077
01:05:37.100 --> 01:05:40.900
So I mean the numbers you would put in this in this

1078
01:05:40.900 --> 01:05:43.300
 filter or kernel all depend on

1079
01:05:43.300 --> 01:05:43.800
 what you're trying to do.

1080
01:05:45.400 --> 01:05:47.600
I guess there was another link here which we can look up.

1081
01:05:50.100 --> 01:05:50.300
Great.

1082
01:05:56.900 --> 01:05:59.300
Okay. Well, let me come back here. Let me come back to the

1083
01:06:01.100 --> 01:06:04.700
This point here. What do you mean by translationally invariant?

1084
01:06:05.200 --> 01:06:08.400
But we already saw translation back in module 2 when

1085
01:06:08.400 --> 01:06:08.600
 we were

1086
01:06:09.600 --> 01:06:12.300
When we took that plane and

1087
01:06:12.300 --> 01:06:15.600
 we applied shearing to it, but there is this nice presentation from

1088
01:06:15.600 --> 01:06:16.200
 Harvard.

1089
01:06:17.600 --> 01:06:19.300
Which does a good job of explaining?

1090
01:06:21.200 --> 01:06:24.200
Or visualizing in variance. So let me

1091
01:06:24.200 --> 01:06:26.000
 skip to that section.

1092
01:06:37.900 --> 01:06:38.500
Where are you?

1093
01:06:52.200 --> 01:06:55.000
Yeah, so these are the different types of filters you can use.

1094
01:06:56.400 --> 01:06:59.900
Again, we will use the word filter and kernel interchangeably. This is the identity. You

1095
01:06:59.900 --> 01:07:00.700
 just put a 1 in here.

1096
01:07:01.400 --> 01:07:02.200
You get the same picture?

1097
01:07:03.500 --> 01:07:04.700
If you want add detection.

1098
01:07:07.100 --> 01:07:08.000
You can use these numbers.

1099
01:07:11.500 --> 01:07:11.700
Okay.

1100
01:07:13.500 --> 01:07:14.400
sharpen if you want to

1101
01:07:16.200 --> 01:07:17.600
a pre-process the data

1102
01:07:20.300 --> 01:07:22.300
Let me show you translation.

1103
01:07:36.800 --> 01:07:38.300
So is it not this one?

1104
01:07:49.900 --> 01:07:50.200
Okay.

1105
01:08:01.300 --> 01:08:03.900
It was a very nice slide here to explain translations.

1106
01:08:11.100 --> 01:08:12.500
I am pretty sure it was a

1107
01:08:15.900 --> 01:08:19.300
Basically, it's here. Let me show you Lydia translations.

1108
01:08:30.500 --> 01:08:31.800
Yeah, this is an example.

1109
01:08:32.700 --> 01:08:34.800
Simply when the picture is off center.

1110
01:08:36.200 --> 01:08:37.100
Here's another example.

1111
01:08:37.900 --> 01:08:39.700
We have different types of invariants, right?

1112
01:08:40.900 --> 01:08:43.600
Let's say in the c410 dataset.

1113
01:08:44.200 --> 01:08:48.300
The pictures are merely in the center, but they

1114
01:08:47.300 --> 01:08:50.300
 can be a little bit off-center. Maybe the picture is

1115
01:08:50.300 --> 01:08:52.700
 too big or something. Excuse me. The subject is too big.

1116
01:08:53.500 --> 01:08:56.200
Or the subject is too small or here if

1117
01:08:56.200 --> 01:08:59.400
 it's maybe rotated so here for example, the subject is

1118
01:08:59.400 --> 01:09:02.200
 in the center, but it's rotated. The max

1119
01:09:02.200 --> 01:09:07.000
 pooling is meant for this purpose. It's them it's to make the model resilient.

1120
01:09:08.700 --> 01:09:10.400
to translations

1121
01:09:11.900 --> 01:09:14.200
This is size and variance see exactly

1122
01:09:14.200 --> 01:09:18.200
 so we in some of the pictures and the c410 is

1123
01:09:17.200 --> 01:09:20.300
 at the subject takes up the entire almost the

1124
01:09:20.300 --> 01:09:22.400
 entirety of the picture in some cases. It's small.

1125
01:09:24.200 --> 01:09:27.400
Illumination, right? So it's the same object, but you can see because the light

1126
01:09:28.100 --> 01:09:31.400
Is being emitted from different angles it can

1127
01:09:31.400 --> 01:09:31.700
 really change.

1128
01:09:33.300 --> 01:09:35.000
the content of the picture

1129
01:09:36.300 --> 01:09:37.900
that's what Max putting is used for.

1130
01:09:45.700 --> 01:09:46.800
So let me return here.

1131
01:09:48.400 --> 01:09:50.500
To our notebook. Let me finish up the code.

1132
01:09:56.800 --> 01:09:59.100
And to save time I'm just going to copy paste.

1133
01:10:01.700 --> 01:10:02.500
aligned

1134
01:10:03.400 --> 01:10:04.100
so first we have

1135
01:10:05.700 --> 01:10:08.500
we're going to add a carnival kind of illusional 2D layer.

1136
01:10:09.300 --> 01:10:09.900
This will act.

1137
01:10:12.000 --> 01:10:12.200
this

1138
01:10:13.400 --> 01:10:15.500
stack that we adding this kind of 2D.

1139
01:10:20.300 --> 01:10:22.500
Let me put them on strap online. So we know what these arguments are.

1140
01:10:32.900 --> 01:10:34.100
So this is for the input layer.

1141
01:10:39.900 --> 01:10:42.700
Which corresponds to the this dimensions of

1142
01:10:42.700 --> 01:10:45.000
 the picture with height and color channels?

1143
01:10:45.700 --> 01:10:46.500
so input

1144
01:10:49.700 --> 01:10:50.400
of the model

1145
01:10:53.300 --> 01:10:55.200
we have with height and

1146
01:10:58.400 --> 01:10:59.800
number of color channels

1147
01:11:05.900 --> 01:11:08.300
This is the activation function and I guess

1148
01:11:08.300 --> 01:11:10.800
 we haven't talked about this. We will just have to do it in the next session.

1149
01:11:12.500 --> 01:11:15.600
Activation function and I will show you the tensorflow playground.

1150
01:11:16.900 --> 01:11:19.100
If I showed you pictureally you will get

1151
01:11:19.100 --> 01:11:19.600
 the point.

1152
01:11:21.700 --> 01:11:23.800
This is the size of the filter.

1153
01:11:26.800 --> 01:11:29.200
And this is this number of filters you have.

1154
01:11:32.600 --> 01:11:34.100
32 64

1155
01:11:35.700 --> 01:11:36.700
I'm graph filters.

1156
01:11:39.300 --> 01:11:41.400
So you can take any Carnival 2D layer.

1157
01:11:41.900 --> 01:11:44.300
And activate this argument input shape

1158
01:11:44.300 --> 01:11:47.100
 and this will in fact become the input layer and

1159
01:11:47.100 --> 01:11:48.600
 the first Carnival 2D layer.

1160
01:11:49.100 --> 01:11:50.800
Now we will use max pool Lee.

1161
01:11:53.800 --> 01:11:54.400
maxpool 2 dimensions

1162
01:12:00.300 --> 01:12:02.000
again, that's the size of the filter.

1163
01:12:03.100 --> 01:12:05.300
This is the size.

1164
01:12:07.300 --> 01:12:07.400
Excuse me.

1165
01:12:11.300 --> 01:12:12.200
This is the size of the

1166
01:12:15.400 --> 01:12:16.500
size of the max pulley

1167
01:12:22.100 --> 01:12:22.700
Matrix

1168
01:12:24.200 --> 01:12:27.800
Number of filters of the same number as kernels.

1169
01:12:27.800 --> 01:12:30.200
 No, we use filters and curled interchangeably.

1170
01:12:30.800 --> 01:12:33.400
So what you're asking here is now is the number of photos the

1171
01:12:33.400 --> 01:12:34.000
 same number of filters.

1172
01:12:34.900 --> 01:12:37.400
Filters and kernels we use interchangeably.

1173
01:12:38.700 --> 01:12:39.000
Okay.

1174
01:12:44.500 --> 01:12:47.100
And then we have another carnivore to kind of 2D layer.

1175
01:12:50.600 --> 01:12:52.000
So I'm going to copy paste.

1176
01:12:58.700 --> 01:12:59.700
Because what we want to do.

1177
01:13:20.900 --> 01:13:22.500
If I bring you back to this diagram.

1178
01:13:33.500 --> 01:13:34.100
We want to further.

1179
01:13:35.200 --> 01:13:36.300
convolve

1180
01:13:38.700 --> 01:13:39.000
the

1181
01:13:41.900 --> 01:13:43.100
max pool layer

1182
01:13:48.300 --> 01:13:48.700
with

1183
01:13:51.200 --> 01:13:53.000
the new representation of the picture

1184
01:13:55.800 --> 01:13:58.100
Let me see if I can show it to you here picture only.

1185
01:14:01.200 --> 01:14:02.200
convolution

1186
01:14:04.300 --> 01:14:04.800
to the

1187
01:14:07.200 --> 01:14:08.100
next

1188
01:14:51.200 --> 01:14:53.300
Let me see if I have it in the slides.

1189
01:15:16.300 --> 01:15:18.700
I mean basically it's this right. So if I bring you back

1190
01:15:19.900 --> 01:15:21.300
Let me try to explain to you this way.

1191
01:15:25.300 --> 01:15:26.100
imagine here

1192
01:15:28.800 --> 01:15:29.600
What was that?

1193
01:15:31.600 --> 01:15:32.400
the animation one

1194
01:15:42.400 --> 01:15:42.600
here

1195
01:15:44.600 --> 01:15:46.900
imagine what we do is we take our original picture.

1196
01:15:47.900 --> 01:15:49.000
and we use a

1197
01:15:55.100 --> 01:15:56.900
We convolved with the filter.

1198
01:15:58.300 --> 01:15:59.700
And then we get this outline image.

1199
01:16:00.500 --> 01:16:03.200
From this outline image we will get the maxport. We will

1200
01:16:03.200 --> 01:16:06.600
 get the Strong's activations, but we still want to further.

1201
01:16:10.800 --> 01:16:11.600
identify the important

1202
01:16:13.100 --> 01:16:14.200
patterns in this picture

1203
01:16:15.500 --> 01:16:15.600
so

1204
01:16:16.900 --> 01:16:20.100
This is not exactly the max pool layer. But

1205
01:16:19.100 --> 01:16:22.400
 imagine it is the max pool layer. What we

1206
01:16:22.400 --> 01:16:23.200
 want to do is take this.

1207
01:16:24.100 --> 01:16:25.600
And further decompose it.

1208
01:16:26.800 --> 01:16:28.200
Because you can see in this picture.

1209
01:16:30.200 --> 01:16:33.700
It is clear that it is ahead at least to us, but it

1210
01:16:33.700 --> 01:16:34.800
 can be clear or still.

1211
01:16:35.600 --> 01:16:36.500
So we can for example.

1212
01:16:37.900 --> 01:16:38.800
We have some.

1213
01:16:40.400 --> 01:16:43.200
Shade of green the forehead some Darkness on the

1214
01:16:43.200 --> 01:16:46.200
 left side of the face some brightness of the dark side of

1215
01:16:46.200 --> 01:16:50.100
 the face. So we want to cover this again Max pull

1216
01:16:49.100 --> 01:16:52.500
 it to further to further, you

1217
01:16:52.500 --> 01:16:55.800
 know, make it clear that this is a face and

1218
01:16:55.800 --> 01:16:57.200
 even remove the background.

1219
01:16:59.100 --> 01:17:00.100
That's the point here.

1220
01:17:04.600 --> 01:17:07.400
Now the correct combination of how many Carnival 2D

1221
01:17:07.400 --> 01:17:10.500
 layers you need how many Max pulley Max pool

1222
01:17:10.500 --> 01:17:13.000
 layer. You need really depends on

1223
01:17:14.700 --> 01:17:15.600
experimentation

1224
01:17:17.900 --> 01:17:20.300
you would try this configuration first.

1225
01:17:20.300 --> 01:17:22.400
 Look at the metrics. Is it good?

1226
01:17:23.200 --> 01:17:26.800
Perfect continue. Otherwise, you will go back and up change

1227
01:17:26.800 --> 01:17:28.400
 the hyper parameters. So these are all.

1228
01:17:29.200 --> 01:17:30.900
These are hyper parameters that we have here.

1229
01:17:31.500 --> 01:17:34.800
The number of filtered you choose is one hyper parameter. The size

1230
01:17:34.800 --> 01:17:37.200
 of the filter is another private parameter the size

1231
01:17:37.200 --> 01:17:40.300
 of the structure. The number of strides is not a hyper parameter. So there are

1232
01:17:40.300 --> 01:17:41.400
 some experimentation involved.

1233
01:17:42.400 --> 01:17:45.100
Okay. Anyway, let me go and copy this and finish this code because we

1234
01:17:45.100 --> 01:17:46.400
 won't have 12 minutes left.

1235
01:17:47.200 --> 01:17:50.200
So conf 2D we then use max

1236
01:17:50.200 --> 01:17:50.700
 pool again.

1237
01:17:58.500 --> 01:18:00.300
And then one more convolutional layer.

1238
01:18:09.400 --> 01:18:12.300
We don't need the max max pool here that we will flatten it.

1239
01:18:16.400 --> 01:18:18.200
actually, what flat does it from the slides and

1240
01:18:19.600 --> 01:18:19.700
in

1241
01:18:22.200 --> 01:18:22.900
from module 1

1242
01:18:26.900 --> 01:18:28.200
and then we have

1243
01:18:30.700 --> 01:18:31.400
softmax

1244
01:18:33.600 --> 01:18:35.600
I'm not sure we'll be able to talk about.

1245
01:18:38.200 --> 01:18:40.400
the the loss function which is

1246
01:18:42.200 --> 01:18:43.900
something called cross entropy

1247
01:18:46.400 --> 01:18:48.400
and for us to understand the soft Max.

1248
01:18:50.400 --> 01:18:52.100
activation function

1249
01:18:54.200 --> 01:18:56.900
we would need to talk cover some probability.

1250
01:18:57.600 --> 01:19:00.600
There's something called probability. There is something called the odds.

1251
01:19:02.300 --> 01:19:03.700
Which is the ratio of two probabilities?

1252
01:19:09.400 --> 01:19:12.300
So I guess we'll have to this either in the third session or

1253
01:19:12.300 --> 01:19:15.700
 I'm just gonna have to record an extra tutorial because for the activation

1254
01:19:15.700 --> 01:19:15.900
 function.

1255
01:19:16.700 --> 01:19:19.400
In particular softmax function and the

1256
01:19:19.400 --> 01:19:21.900
 loss function there were about to use me. We need to cover some.

1257
01:19:24.500 --> 01:19:25.300
probability Theory

1258
01:19:28.700 --> 01:19:29.900
missing a parentheses

1259
01:19:32.700 --> 01:19:34.400
The reason we have this flat layer.

1260
01:19:35.100 --> 01:19:38.400
Is to turn this Matrix into one vector

1261
01:19:38.400 --> 01:19:40.700
 where the vector will represent the distribution.

1262
01:19:42.500 --> 01:19:44.700
Remember, we said that a machine learning model?

1263
01:19:46.100 --> 01:19:49.200
Will we will not we did

1264
01:19:49.200 --> 01:19:52.200
 not say that I did not say that in this course I said in a

1265
01:19:52.200 --> 01:19:52.400
 separate.

1266
01:19:53.100 --> 01:19:53.600
tutorial

1267
01:19:54.500 --> 01:19:57.100
I put it in a total called

1268
01:19:57.100 --> 01:19:58.800
 envelopes, which I have to put on the main Channel.

1269
01:19:59.500 --> 01:19:59.700
but

1270
01:20:03.100 --> 01:20:06.400
whether it's sound bites whether it's pictures, whether

1271
01:20:06.400 --> 01:20:07.800
 it's characters, whether it's

1272
01:20:11.700 --> 01:20:12.500
clusters

1273
01:20:14.300 --> 01:20:15.300
no matter what the

1274
01:20:19.500 --> 01:20:22.400
Modality of the data if you remember we talked about the modality we

1275
01:20:22.400 --> 01:20:25.600
 said there are different ways to perceive data sound

1276
01:20:25.600 --> 01:20:25.900
 vision.

1277
01:20:27.300 --> 01:20:28.500
No matter what the modality of the data.

1278
01:20:29.400 --> 01:20:32.000
Ultimately, whatever the nature of

1279
01:20:32.100 --> 01:20:33.300
 the data is it will turn into a distribution.

1280
01:20:34.500 --> 01:20:35.500
distribution is this

1281
01:20:45.300 --> 01:20:48.200
if you watch the video from yesterday, you would know what a distribution

1282
01:20:48.200 --> 01:20:49.700
 let's say probability distribution.

1283
01:20:52.500 --> 01:20:54.700
Everything must ultimately turn into one of these.

1284
01:20:58.900 --> 01:21:00.200
and the shape of this

1285
01:21:01.300 --> 01:21:04.200
the shape of the distribute the word distribution really

1286
01:21:04.200 --> 01:21:05.100
 means shape of the data.

1287
01:21:05.700 --> 01:21:08.200
So the shape of the data will determine what?

1288
01:21:09.400 --> 01:21:12.200
This thing is so for example if the distribution is

1289
01:21:12.200 --> 01:21:13.100
 skewed, right?

1290
01:21:14.200 --> 01:21:17.700
It's skewed right when it when you have this downward this

1291
01:21:17.700 --> 01:21:20.400
 tail that goes all to the right. So for example, let's

1292
01:21:20.400 --> 01:21:22.500
 say if it's skewed right then it's a cat.

1293
01:21:23.300 --> 01:21:25.500
If it's centered, it's a car.

1294
01:21:26.700 --> 01:21:29.500
If it's bimodal, this is a bimodal distribution.

1295
01:21:35.100 --> 01:21:38.200
Like this. It's a truck.

1296
01:21:39.900 --> 01:21:42.600
So what the model really sees is this it

1297
01:21:42.600 --> 01:21:46.000
 cannot see colors it cannot see words. It

1298
01:21:45.400 --> 01:21:49.200
 cannot hear sounds what I can see is these distributions and

1299
01:21:51.100 --> 01:21:51.700
this is just

1300
01:21:57.200 --> 01:21:58.700
numbers that are plotted

1301
01:22:02.700 --> 01:22:06.300
I think we have to spend some time. I think we need this separatory

1302
01:22:05.300 --> 01:22:07.100
 talk about distributions.

1303
01:22:07.800 --> 01:22:10.400
But let me just show you one more thing just to get my point

1304
01:22:10.400 --> 01:22:12.400
 across with this flattened layer.

1305
01:22:13.400 --> 01:22:14.700
if I take us to our first

1306
01:22:17.200 --> 01:22:17.700
presentation

1307
01:22:38.500 --> 01:22:41.200
I think it was another presentation the ml

1308
01:22:41.200 --> 01:22:42.600
 papers. Let me pull that up.

1309
01:22:52.400 --> 01:22:53.200
This is the one.

1310
01:22:54.600 --> 01:22:56.900
So this episode one episode two is gonna start.

1311
01:22:57.900 --> 01:22:59.000
On the 28th, by the way.

1312
01:23:00.700 --> 01:23:03.300
So in this Workshop I talked about

1313
01:23:03.300 --> 01:23:03.500
 this.

1314
01:23:07.200 --> 01:23:08.000
So you have your image?

1315
01:23:08.900 --> 01:23:10.300
comes in three color channels

1316
01:23:12.100 --> 01:23:15.800
at the end of what we're gonna do is gonna flood it. This will become a distribution so

1317
01:23:15.800 --> 01:23:17.300
 you can see here in the right.

1318
01:23:18.300 --> 01:23:19.800
We can see the distribution of colors.

1319
01:23:25.300 --> 01:23:28.100
But this cat will have a distribution. Let me see if I

1320
01:23:28.100 --> 01:23:30.100
 can pull up another picture to explain what this is.

1321
01:23:30.900 --> 01:23:33.100
Because pictures, you know will make it it just make it

1322
01:23:33.100 --> 01:23:35.000
 make it easy a lot easier to explain an idea.

1323
01:23:35.600 --> 01:23:36.800
distribution

1324
01:23:37.700 --> 01:23:38.100
of

1325
01:23:40.100 --> 01:23:41.200
a picture

1326
01:24:06.800 --> 01:24:09.200
a histogram is analogous to that but not exactly.

1327
01:24:16.600 --> 01:24:18.400
I don't think I'm gonna have any luck pulling fighting.

1328
01:24:19.800 --> 01:24:20.500
a direct

1329
01:24:22.900 --> 01:24:24.300
picture to distribution example

1330
01:24:33.100 --> 01:24:35.200
Okay, let me try to explain another way frequency.

1331
01:24:37.500 --> 01:24:38.100
distribution

1332
01:24:39.200 --> 01:24:39.800
of

1333
01:24:41.700 --> 01:24:42.400
income

1334
01:24:46.400 --> 01:24:49.200
Yeah, a number of filters is the number of okay, you ask this

1335
01:24:49.200 --> 01:24:52.000
 question earlier? Yes, but one number of further is equal to number of

1336
01:24:52.000 --> 01:24:52.300
 kernels.

1337
01:25:00.400 --> 01:25:01.500
No not here.

1338
01:25:28.100 --> 01:25:30.200
Okay, I will try to illustrate it.

1339
01:25:34.900 --> 01:25:37.200
This way, let me come

1340
01:25:37.200 --> 01:25:37.500
 down here.

1341
01:25:40.100 --> 01:25:41.300
We could copy of this.

1342
01:25:48.600 --> 01:25:51.100
So you might be asking yourself. Why were you not

1343
01:25:51.100 --> 01:25:54.600
 better prepared, which is a good question. The problem is with the

1344
01:25:54.600 --> 01:25:55.000
 challenges.

1345
01:25:55.800 --> 01:25:58.300
Since we don't have any prerequisites this course.

1346
01:25:59.400 --> 01:26:02.300
We do making assumptions about what people know or don't

1347
01:26:02.300 --> 01:26:02.300
 know.

1348
01:26:03.800 --> 01:26:05.600
So sometimes you have to improvise.

1349
01:26:07.600 --> 01:26:09.200
But imagine we have something like this.

1350
01:26:11.600 --> 01:26:11.800
right

1351
01:26:14.600 --> 01:26:15.800
I'll make it very straightforward.

1352
01:26:21.600 --> 01:26:23.100
Let's say the x-axis.

1353
01:26:31.600 --> 01:26:32.400
is the

1354
01:26:41.600 --> 01:26:43.800
Once I'd be able to have multiple shapes.

1355
01:26:47.000 --> 01:26:47.400
mmm

1356
01:26:48.300 --> 01:26:51.200
Like I said, what something were buy model

1357
01:26:51.200 --> 01:26:53.500
 makes sense. Let me first draw the graph.

1358
01:26:54.300 --> 01:26:55.500
But I think of an example.

1359
01:26:59.400 --> 01:27:00.800
occur

1360
01:27:23.100 --> 01:27:25.100
yeah, let's say x is the

1361
01:27:26.900 --> 01:27:28.600
access corresponding to

1362
01:27:30.300 --> 01:27:33.300
the income of a person disposable income

1363
01:27:34.500 --> 01:27:37.600
of a person and the y-axis will correspond

1364
01:27:37.600 --> 01:27:37.700
 to

1365
01:27:39.900 --> 01:27:41.600
time spent at a mall

1366
01:27:44.200 --> 01:27:47.300
You know, I am in Dubai so we have plenty of malls.

1367
01:27:51.500 --> 01:27:54.100
So naturally these are the examples that pop into my head.

1368
01:27:55.300 --> 01:27:56.800
time spent at malls

1369
01:28:05.300 --> 01:28:06.700
or money spent at malls

1370
01:28:10.100 --> 01:28:11.600
and on the x-axis

1371
01:28:13.800 --> 01:28:14.700
we have

1372
01:28:22.400 --> 01:28:26.100
I said income right? I said disposable income.

1373
01:28:27.700 --> 01:28:30.100
Except for this example, it would not be

1374
01:28:30.100 --> 01:28:30.300
 the best.

1375
01:28:43.200 --> 01:28:46.700
What's another synonym for disposable

1376
01:28:46.700 --> 01:28:47.100
 income?

1377
01:28:50.700 --> 01:28:51.700
experiment money

1378
01:28:53.900 --> 01:28:54.600
disposable money

1379
01:28:56.300 --> 01:28:56.600
Okay.

1380
01:28:59.200 --> 01:29:01.400
But yeah, fine cash.

1381
01:29:04.800 --> 01:29:06.300
You know what now? Let me use a

1382
01:29:10.800 --> 01:29:13.100
it's my example. I'm struggle struggling to make it work.

1383
01:29:19.900 --> 01:29:20.400
each

1384
01:29:21.800 --> 01:29:24.400
Mad money let's let's say

1385
01:29:24.400 --> 01:29:25.400
 it's age, okay.

1386
01:29:26.600 --> 01:29:28.100
on the Lower Side, let's say we have

1387
01:29:28.800 --> 01:29:31.400
A teenagers like 15 and up. Here

1388
01:29:31.400 --> 01:29:31.600
 we have.

1389
01:29:32.400 --> 01:29:33.100
85

1390
01:29:34.700 --> 01:29:35.600
those the middle

1391
01:29:37.600 --> 01:29:39.100
by the way, this should have been a little bit more.

1392
01:29:40.900 --> 01:29:41.700
It should have been more.

1393
01:29:50.800 --> 01:29:50.900
You know.

1394
01:29:53.800 --> 01:29:55.200
Why you're at the middle?

1395
01:29:56.800 --> 01:29:57.500
like so

1396
01:30:06.300 --> 01:30:07.500
money spent at

1397
01:30:10.300 --> 01:30:13.500
Location let's say we want to know what kind of location this

1398
01:30:13.500 --> 01:30:13.600
 is.

1399
01:30:16.800 --> 01:30:19.100
Where those on the younger side of the age?

1400
01:30:21.100 --> 01:30:21.900
axis

1401
01:30:23.200 --> 01:30:25.200
And those the operating upper.

1402
01:30:26.900 --> 01:30:29.600
Higher end of the ajaxis both of

1403
01:30:29.600 --> 01:30:30.100
 them have a sharp.

1404
01:30:31.600 --> 01:30:34.600
kurtosis kurtosis means the pig at the

1405
01:30:34.600 --> 01:30:34.700
 top

1406
01:30:35.400 --> 01:30:38.600
So by looking at a distribution, like what kind of place do very young

1407
01:30:38.600 --> 01:30:42.400
 like teenagers and more senior

1408
01:30:42.400 --> 01:30:43.900
 people spend their money?

1409
01:30:46.100 --> 01:30:50.200
You would say well I would give the answer to shopping mall right teenagers have

1410
01:30:50.200 --> 01:30:51.000
 nothing better to do.

1411
01:30:52.300 --> 01:30:53.600
Then go to a shopping malls.

1412
01:30:55.200 --> 01:30:56.700
spending their parents money

1413
01:30:58.800 --> 01:31:00.200
Maybe some of you know what I'm talking about.

1414
01:31:01.200 --> 01:31:03.600
and seniors, well, you know if they want to hang out and

1415
01:31:05.600 --> 01:31:06.500
Relax, they might.

1416
01:31:07.500 --> 01:31:08.600
if they retire they make

1417
01:31:09.500 --> 01:31:12.300
go and spend money at the mall or you

1418
01:31:12.300 --> 01:31:13.200
 know, they're there.

1419
01:31:14.500 --> 01:31:16.300
They have savings or they've invested.

1420
01:31:17.200 --> 01:31:20.300
seniors have their houses paid for exactly, you know,

1421
01:31:20.300 --> 01:31:24.200
 let's say they bought house or they

1422
01:31:23.200 --> 01:31:27.600
 want a lottery or they make good Investments when

1423
01:31:26.600 --> 01:31:29.100
 they were younger and now they

1424
01:31:29.100 --> 01:31:32.300
 can afford to go to the mall and you know, enjoy themselves everybody else

1425
01:31:32.300 --> 01:31:32.600
 has

1426
01:31:34.100 --> 01:31:37.100
You know, they don't have the time to do that. They don't have the

1427
01:31:37.100 --> 01:31:39.900
 time. You don't have these luxury. Let's say this is Extreme example

1428
01:31:41.700 --> 01:31:44.100
Wow, what's another example we can

1429
01:31:44.100 --> 01:31:45.100
 do something like this?

1430
01:32:00.900 --> 01:32:02.100
What could this location be?

1431
01:32:09.100 --> 01:32:11.200
Almost no teen it very few teenagers.

1432
01:32:12.300 --> 01:32:13.600
very few senior people

1433
01:32:14.800 --> 01:32:17.800
but a lot more of people, you know, let's say they're twenties

1434
01:32:17.800 --> 01:32:18.400
 to fifties.

1435
01:32:19.800 --> 01:32:23.200
What do you think is kind and this is kind of skewed left. So older.

1436
01:32:23.700 --> 01:32:25.400
What possible place could this be?

1437
01:32:27.100 --> 01:32:30.900
It's a

1438
01:32:30.900 --> 01:32:31.900
 guess. It's not an actual place.

1439
01:32:35.700 --> 01:32:38.300
Good grocery store. Very good. Yeah grocery store,

1440
01:32:38.300 --> 01:32:38.500
 right?

1441
01:32:39.700 --> 01:32:42.700
I could be a couple or a

1442
01:32:42.700 --> 01:32:46.100
 single parent has to break groceries

1443
01:32:45.100 --> 01:32:48.200
 for the shop. So they would spend more time and money

1444
01:32:48.200 --> 01:32:48.400
 there.

1445
01:32:49.700 --> 01:32:50.600
That makes perfect sense.

1446
01:32:51.200 --> 01:32:52.600
This is precisely what I'm talking about.

1447
01:32:53.800 --> 01:32:56.500
Everything whether it's a picture or numerical data

1448
01:32:56.500 --> 01:32:59.100
 or a secular bytes will be turned to distribution. And that's what

1449
01:32:59.100 --> 01:32:59.800
 the model will see.

1450
01:33:00.300 --> 01:33:01.800
on the x-axis we will have

1451
01:33:02.700 --> 01:33:02.800
the

1452
01:33:05.100 --> 01:33:05.800
the features

1453
01:33:06.700 --> 01:33:07.800
the y-axis would be

1454
01:33:10.200 --> 01:33:12.400
it will be for example duration.

1455
01:33:13.300 --> 01:33:14.300
or some sort of

1456
01:33:15.900 --> 01:33:18.400
it will be a numeric value and the numeric value could

1457
01:33:18.400 --> 01:33:21.900
 either represent time spent on a place money spent

1458
01:33:21.900 --> 01:33:24.600
 at a place or it could be an ID corresponding

1459
01:33:24.600 --> 01:33:26.400
 to the class of that thing.

1460
01:33:28.100 --> 01:33:31.400
So the really the whole this whole point of me bringing you here

1461
01:33:31.400 --> 01:33:34.200
 and taking your time with their slides was to explain

1462
01:33:34.200 --> 01:33:35.100
 the purpose of having.

1463
01:33:36.400 --> 01:33:37.200
this

1464
01:33:38.600 --> 01:33:41.500
layer the flat layer we go from a matrix to Flat

1465
01:33:41.500 --> 01:33:44.300
 layer because everything was turned

1466
01:33:44.300 --> 01:33:44.900
 into distribution.

1467
01:33:46.200 --> 01:33:49.300
So all of these pictures that you see up here, they will all

1468
01:33:49.300 --> 01:33:51.500
 have their own distinct fear distributions.

1469
01:33:52.700 --> 01:33:53.200
And that's it.

1470
01:33:54.200 --> 01:33:55.500
This dense layer then.

1471
01:33:58.200 --> 01:34:00.100
This one down here in particular.

1472
01:34:01.100 --> 01:34:05.000
is to give us the 10 possible classes to which the particular

1473
01:34:04.300 --> 01:34:07.700
 picture belongs in order so

1474
01:34:07.700 --> 01:34:08.300
 we will have

1475
01:34:09.300 --> 01:34:12.300
A the top 10 classes. We don't have 10

1476
01:34:12.300 --> 01:34:15.500
 classes anyway, but it will give you the top 10 classes in order

1477
01:34:15.500 --> 01:34:16.200
 of higher probability.

1478
01:34:19.400 --> 01:34:20.000
And that's it.

1479
01:34:21.100 --> 01:34:24.300
Now the remaining parts of this notebook which you know, I know it's already five minutes

1480
01:34:24.300 --> 01:34:27.500
 past our schedule is really about

1481
01:34:27.500 --> 01:34:28.900
 an example picture and

1482
01:34:30.700 --> 01:34:30.900
the

1483
01:34:33.700 --> 01:34:34.800
the classification function

1484
01:34:35.700 --> 01:34:36.400
Which is called.

1485
01:34:37.100 --> 01:34:38.300
category

1486
01:34:39.400 --> 01:34:41.100
excuse me chemical cross-entry

1487
01:34:41.900 --> 01:34:44.400
So we'll just leave us leave this for later.

1488
01:34:44.400 --> 01:34:47.300
 And then just to make our last

1489
01:34:47.300 --> 01:34:50.300
 session more interesting. Maybe I will show you other types

1490
01:34:50.300 --> 01:34:53.200
 of I will definitely show you the tensorflow playground that is

1491
01:34:53.200 --> 01:34:55.400
 very important and it's actually quite fun.

1492
01:34:56.100 --> 01:34:56.400
and

1493
01:34:58.100 --> 01:35:01.300
maybe we can look at other more advanced examples of

1494
01:35:01.300 --> 01:35:03.200
 neural networks really if we understand.

1495
01:35:04.300 --> 01:35:05.900
If we understood these components.

1496
01:35:09.900 --> 01:35:12.000
You will be you'll be

1497
01:35:12.100 --> 01:35:15.400
 able to put you would be able to understand any other type of architecture in

1498
01:35:15.400 --> 01:35:18.200
 a research paper and implemented knowing what is

1499
01:35:18.200 --> 01:35:18.700
 actually happening.

1500
01:35:21.200 --> 01:35:22.800
Now there are other more advanced.

1501
01:35:24.100 --> 01:35:26.300
architectures like recurrent neural networks

1502
01:35:31.600 --> 01:35:34.400
And while neural networks do have

1503
01:35:34.400 --> 01:35:34.900
 vectors.

1504
01:35:38.300 --> 01:35:41.500
They're more elaborate than convolutional neural

1505
01:35:41.500 --> 01:35:41.600
 networks.

1506
01:35:42.700 --> 01:35:45.500
I guess you can just do separate we can

1507
01:35:45.500 --> 01:35:48.500
 have separate sessions outside of this this course.

1508
01:35:49.900 --> 01:35:50.100
Okay.

1509
01:35:51.700 --> 01:35:55.300
Now the less I'll give you an example of a book for I'll give

1510
01:35:55.300 --> 01:35:58.000
 you this. I will give you the completed notebook. I'll give you

1511
01:35:58.200 --> 01:35:59.700
 the RN and notebook.

1512
01:36:02.800 --> 01:36:05.600
But for RNs we would have to I we

1513
01:36:05.600 --> 01:36:08.200
 definitely have to cover in a separate separate session in

1514
01:36:08.200 --> 01:36:11.200
 a separate tutorial to ask what sort of updates does Google make

1515
01:36:11.200 --> 01:36:13.300
 the tensorflow that makes updates not backwards compatible.

1516
01:36:16.800 --> 01:36:19.400
I ran into an issue with Keras. I came

1517
01:36:19.400 --> 01:36:20.500
 across a nice notebook.

1518
01:36:22.600 --> 01:36:24.800
What they do is they deprecate.

1519
01:36:25.900 --> 01:36:29.100
certain objects or objects within

1520
01:36:28.100 --> 01:36:29.300
 the library

1521
01:36:30.400 --> 01:36:33.000
or they may go from python 2 to Python 3.

1522
01:36:36.400 --> 01:36:39.900
Or they deprecated just take out they just

1523
01:36:39.900 --> 01:36:40.400
 take out.

1524
01:36:42.300 --> 01:36:43.000
old methods

1525
01:36:43.800 --> 01:36:44.900
and replace it with nothing.

1526
01:36:46.200 --> 01:36:47.100
So, I mean it depends now.

1527
01:36:48.100 --> 01:36:51.200
I found out if you want to see all of the deprecated changes to

1528
01:36:51.200 --> 01:36:53.800
 go to Keras on GitHub. This is what I found out.

1529
01:36:59.800 --> 01:37:02.300
You know, which methods were?

1530
01:37:03.600 --> 01:37:06.000
Deprecated and by the way, we can always you can

1531
01:37:06.100 --> 01:37:09.200
 always downgrade. So if you find a notebook that is compatible with a specific version of

1532
01:37:09.200 --> 01:37:11.400
 cares. You can always down great and make it work.

1533
01:37:14.900 --> 01:37:15.700
Keras

1534
01:37:18.300 --> 01:37:20.200
GitHub deprecated changes

1535
01:37:30.200 --> 01:37:31.400
Here we go. This is the one.

1536
01:37:36.300 --> 01:37:37.700
I'll put the link here in the chat as well.

1537
01:37:40.500 --> 01:37:42.700
Again, keros is built on tensorflow, by the way.

1538
01:37:45.200 --> 01:37:48.100
So yeah, you can go through these releases and see

1539
01:37:48.100 --> 01:37:48.700
 what was removed.

1540
01:37:49.600 --> 01:37:52.300
Here, for example, they've added resnet.

1541
01:37:54.400 --> 01:37:57.300
Yeah, so right now I think the past you would

1542
01:37:57.300 --> 01:37:59.000
 have to download resnet 50.

1543
01:38:00.200 --> 01:38:03.500
This is a pre-trained model now. It's just part of the applications object.

1544
01:38:04.700 --> 01:38:06.500
This was when April of this year.

1545
01:38:08.100 --> 01:38:08.400
Yeah.

1546
01:38:10.700 --> 01:38:11.400
To check that out.

1547
01:38:12.100 --> 01:38:15.500
But you can always on call lab. It's pretty sure for to it's pretty

1548
01:38:15.500 --> 01:38:16.600
 straightforward to downgrade.

1549
01:38:18.400 --> 01:38:19.800
So if you found the nice example have a look at this.

1550
01:38:20.800 --> 01:38:21.100
and

1551
01:38:22.500 --> 01:38:23.400
there will be

1552
01:38:25.600 --> 01:38:26.400
that's all you do.

1553
01:38:27.300 --> 01:38:29.400
Okay everybody. Thank you very much for joining me today.

1554
01:38:30.200 --> 01:38:33.300
Okay more questions. Can you please show the preview data section

1555
01:38:33.300 --> 01:38:33.800
 of the notebook?

1556
01:38:36.300 --> 01:38:37.800
preview section of the notebook

1557
01:38:39.800 --> 01:38:40.300
Oh, yes.

1558
01:38:43.100 --> 01:38:46.400
And what you ask your follow-up question to ask what do you see as

1559
01:38:46.400 --> 01:38:47.600
 the future and attention flow?

1560
01:38:48.300 --> 01:38:51.600
Versus Supply tools and we'll tensorflow go

1561
01:38:51.600 --> 01:38:53.600
 that we have Angry all this is a very good question.

1562
01:38:54.700 --> 01:38:57.100
I'm going to guess because I really don't know the

1563
01:38:57.100 --> 01:38:57.100
 answer.

1564
01:39:01.300 --> 01:39:02.100
in Academia

1565
01:39:04.600 --> 01:39:07.000
pie torch is the dominant Library.

1566
01:39:11.200 --> 01:39:13.100
There's a third there's a third.

1567
01:39:14.300 --> 01:39:17.300
deep learning library developed by a university in Canada

1568
01:39:18.300 --> 01:39:19.500
But I don't remember remember the name.

1569
01:39:21.600 --> 01:39:24.600
But yeah, so my politically comes down to tensorflow and

1570
01:39:24.600 --> 01:39:25.100
 pytorch.

1571
01:39:26.400 --> 01:39:29.300
Ron says you can use tensorflow as a backend for pie torch. I

1572
01:39:29.300 --> 01:39:29.700
 believe well.

1573
01:39:31.400 --> 01:39:34.000
I mean you can use them in a change you believe I'm not

1574
01:39:34.100 --> 01:39:35.900
 sure why we do want to do something like that, but

1575
01:39:42.200 --> 01:39:45.200
You know, too I think you're right. It could it could go. I mean

1576
01:39:45.200 --> 01:39:48.300
 it Google has done this in the past. Google has like a

1577
01:39:48.300 --> 01:39:49.700
 graveyard of applications.

1578
01:39:50.300 --> 01:39:51.800
Google+ was one of them.

1579
01:39:53.500 --> 01:39:55.600
polymers another one

1580
01:39:56.200 --> 01:39:58.600
This isn't using software development.

1581
01:40:01.500 --> 01:40:04.400
Once this tensorflow has distributed processing caps.

1582
01:40:07.200 --> 01:40:09.700
Yeah, and what's interesting is if you use Google Cloud.

1583
01:40:11.400 --> 01:40:13.900
I think they support pytorch.

1584
01:40:14.300 --> 01:40:15.900
I don't remember seeing tensorflow.

1585
01:40:17.900 --> 01:40:18.200
in

1586
01:40:25.600 --> 01:40:26.900
I think it was complete engine.

1587
01:40:28.200 --> 01:40:31.700
Basically, you can really easily deploy a machine learning model to to

1588
01:40:31.700 --> 01:40:34.400
 Google Cloud.

1589
01:40:37.600 --> 01:40:40.300
But yeah, I mean and if machine learning is a

1590
01:40:40.300 --> 01:40:45.100
 very research oriented field and Pi torch is the predominant Library.

1591
01:40:46.500 --> 01:40:49.200
And it's not tied to some Corporation.

1592
01:40:50.300 --> 01:40:50.600
I think

1593
01:40:52.200 --> 01:40:55.300
it's likely that if I torch does

1594
01:40:55.300 --> 01:40:55.400
 it.

1595
01:40:56.200 --> 01:40:58.600
I think pytorch definitely has a larger community.

1596
01:41:00.300 --> 01:41:02.700
but if it doesn't Outlast tensorflow

1597
01:41:04.100 --> 01:41:06.900
I think you will continue to remain the most popular.

1598
01:41:07.800 --> 01:41:08.300
Library

1599
01:41:09.200 --> 01:41:11.100
there is now use tensorflow by the way is because

1600
01:41:11.900 --> 01:41:14.700
I learned tensorflow before I work with.

1601
01:41:16.400 --> 01:41:19.100
With pytorch and in for pytorch, you

1602
01:41:19.100 --> 01:41:23.100
 have such a large community. We have all kinds of machine neural

1603
01:41:22.100 --> 01:41:23.700
 network implementations.

1604
01:41:24.400 --> 01:41:26.800
so I can't forecast the future, but my guess is

1605
01:41:27.700 --> 01:41:29.300
python should continue to be

1606
01:41:30.200 --> 01:41:30.900
more popular

1607
01:41:32.200 --> 01:41:34.100
so it might be a better investment for you to

1608
01:41:35.900 --> 01:41:38.400
like make yourself every family with pie torch.

1609
01:41:39.200 --> 01:41:41.500
I think what a question is, probably Torch versus keros.

1610
01:41:43.100 --> 01:41:44.600
Karas is a very

1611
01:41:45.600 --> 01:41:48.300
it's more Elementary implementations for new Networks.

1612
01:41:49.600 --> 01:41:51.400
So I don't think it's even a competition.

1613
01:41:52.800 --> 01:41:54.200
If you want to build serious.

1614
01:41:55.100 --> 01:41:58.400
neural network that users convolution recurs and

1615
01:41:58.400 --> 01:41:59.300
 other types of architectures

1616
01:42:01.100 --> 01:42:04.100
Like the one you would say I find in a research paper. You're gonna go

1617
01:42:04.100 --> 01:42:07.500
 with pytosh. If you're gonna build a very simple like a

1618
01:42:07.500 --> 01:42:10.300
 toyish model Keras is fine,

1619
01:42:10.300 --> 01:42:13.500
 like in this example, we're using carrots because it helps us get to the point like understand

1620
01:42:13.500 --> 01:42:14.400
 the fundamentals.

1621
01:42:15.400 --> 01:42:18.900
But if you're doing if you're gonna do any production, I would say pie

1622
01:42:18.900 --> 01:42:21.500
 torch because you're more likely to find people who know more pytorch.

1623
01:42:22.300 --> 01:42:25.600
You're more more electrified people who know pytorch then

1624
01:42:25.600 --> 01:42:26.300
 tensorflow.

1625
01:42:28.500 --> 01:42:31.300
Up. That's what I that's my

1626
01:42:31.300 --> 01:42:31.800
 answer to you.

1627
01:42:34.600 --> 01:42:35.300
another question

1628
01:42:36.200 --> 01:42:37.100
any other comments?

1629
01:42:38.100 --> 01:42:40.700
How about suggestions for the future? So

1630
01:42:44.300 --> 01:42:46.600
I'm in the process by the way of onboarding.

1631
01:42:48.300 --> 01:42:50.000
one or two

1632
01:42:51.300 --> 01:42:52.500
lectures and physics

1633
01:42:54.300 --> 01:42:57.200
I really want us to have physics courses here at Big number as

1634
01:42:57.200 --> 01:42:57.300
 well.

1635
01:42:58.100 --> 01:43:00.900
So if you know if you have a if you have some sort of Interest.

1636
01:43:01.800 --> 01:43:05.000
Like there's actually two there's quantitative Finance

1637
01:43:04.300 --> 01:43:07.200
 or economics to statistics for

1638
01:43:07.200 --> 01:43:09.400
 finance statistics for economics or Finance.

1639
01:43:10.300 --> 01:43:13.600
Mathematical physics. So by the way, a lot of the mathematics and

1640
01:43:13.600 --> 01:43:13.900
 engineering

1641
01:43:15.900 --> 01:43:18.100
comes from physics and it's not easy

1642
01:43:18.100 --> 01:43:21.200
 to learn these mathematical Concepts outside of the domain of physics.

1643
01:43:21.600 --> 01:43:24.400
So we're trying to have a mathematical Physics course. Do you

1644
01:43:24.400 --> 01:43:26.100
 need any Python tutorial tutors?

1645
01:43:26.800 --> 01:43:29.000
That will be also nice. Yes, if you think by the

1646
01:43:29.100 --> 01:43:32.400
 way if you want to have if you have if there's a topic about what you want to be a speaker.

1647
01:43:33.200 --> 01:43:35.300
If you want to give a talk, that's very much. Welcome.

1648
01:43:36.300 --> 01:43:39.200
If you want to tutor, that's also welcome. It can

1649
01:43:39.200 --> 01:43:42.400
 come up with something but even ideas for courses ideas for

1650
01:43:43.300 --> 01:43:45.000
open workshops. I welcome those.

1651
01:43:47.100 --> 01:43:51.000
But again, if you think about something outside of these, you know

1652
01:43:51.300 --> 01:43:54.400
 live sessions, I strongly recommend you post them post immune the

1653
01:43:54.400 --> 01:43:56.000
 channel and I will get back to you.

1654
01:43:58.100 --> 01:44:01.500
Okay everybody. So we have one more session. I'll try to make this other

1655
01:44:01.500 --> 01:44:03.700
 session as more as organized as possible.

1656
01:44:04.400 --> 01:44:07.100
But even after that session is over, I'm going to keep on giving you.

1657
01:44:07.900 --> 01:44:10.400
More material I think you should have received

1658
01:44:10.400 --> 01:44:13.100
 an email from Ferry. If you haven't she's gonna keep

1659
01:44:13.100 --> 01:44:16.200
 sending out emails that this coach is gonna keep getting

1660
01:44:16.200 --> 01:44:18.000
 updates even after the course is over.

1661
01:44:20.700 --> 01:44:23.700
Oh, that's great a great answer. Let's

1662
01:44:23.700 --> 01:44:26.500
 be in touch. But anyway, even after this

1663
01:44:26.500 --> 01:44:29.500
 course over I'm Gonna Keep On adding tutorials more notebooks. So

1664
01:44:31.400 --> 01:44:34.000
You know you can you should you should have access to those.

1665
01:44:35.100 --> 01:44:38.500
Okay everyone until then enjoy your enjoy

1666
01:44:38.500 --> 01:44:40.700
 your day and I'll see you very soon.

1667
01:44:41.900 --> 01:44:43.000
For now. Take care. Bye.
