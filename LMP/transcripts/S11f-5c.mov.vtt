WEBVTT - This file was automatically generated by VIMEO

0
00:00:02.300 --> 00:00:05.300
Let me show you what Max pulling what pulling does and then why

1
00:00:05.300 --> 00:00:07.700
 you would use pooling. So here you can see when we have this.

2
00:00:10.200 --> 00:00:13.500
If this is a picture the super pixel or the sub sample if the

3
00:00:13.500 --> 00:00:16.300
 whole Matrix the sample then a sub sample is a section.

4
00:00:17.200 --> 00:00:20.500
You will take the strongest or the maximum

5
00:00:20.500 --> 00:00:23.900
 value in this in this particular section. It's

6
00:00:23.900 --> 00:00:26.400
 the number three in this section. It's

7
00:00:26.400 --> 00:00:26.800
 the number four.

8
00:00:27.700 --> 00:00:29.000
In this section is the number two.

9
00:00:29.800 --> 00:00:32.200
And here it's 4 that's what Max pooling does.

10
00:00:32.800 --> 00:00:34.700
Now Max pooling is done for two purposes.

11
00:00:35.500 --> 00:00:36.900
the max pooling Matrix

12
00:00:38.800 --> 00:00:40.800
is used to achieve.

13
00:00:42.200 --> 00:00:43.400
following one

14
00:00:45.000 --> 00:00:45.500
reduce

15
00:00:46.600 --> 00:00:49.200
the computational load of

16
00:00:49.200 --> 00:00:49.800
 computing

17
00:00:51.100 --> 00:00:52.000
activations

18
00:00:53.400 --> 00:00:57.900
You know like in the brain's neuron, right? Yeah, or

19
00:00:56.900 --> 00:00:59.400
 the perceptor we talked about the signal

20
00:00:59.400 --> 00:01:03.700
 the travels down the neuron we want to make it less come

21
00:01:02.700 --> 00:01:05.300
 or something because this picture is a

22
00:01:05.300 --> 00:01:06.500
 32 by 32 pictures.

23
00:01:08.600 --> 00:01:10.100
32.3 is a tiny picture.

24
00:01:11.200 --> 00:01:12.700
When in reality?

25
00:01:16.800 --> 00:01:19.900
The kinds of picture you would see on the internet are 300 by

26
00:01:19.900 --> 00:01:22.400
 300 500 by 5. If you're

27
00:01:22.400 --> 00:01:25.100
 using a DS if using a dslrs or a mirrorless camera like

28
00:01:25.100 --> 00:01:25.900
 they want to have in here.

29
00:01:27.300 --> 00:01:28.600
It will be Million by million.

30
00:01:29.400 --> 00:01:30.800
Like 13 million by 30 million.

31
00:01:31.800 --> 00:01:31.900
so

32
00:01:33.300 --> 00:01:35.600
and imagine you want to do this in real time. It will be very

33
00:01:36.600 --> 00:01:37.500
demanding

34
00:01:38.600 --> 00:01:41.400
and that's just for one picture. Imagine. We have like a folder of

35
00:01:41.400 --> 00:01:44.600
 pictures. So this Max pooling will really make it

36
00:01:44.600 --> 00:01:45.100
 easier to

37
00:01:47.100 --> 00:01:49.200
figure out what's in the what's the picture?

38
00:01:50.700 --> 00:01:54.200
The second part of Max pooling is to handle.

39
00:01:56.500 --> 00:01:58.100
Or not let them use another word.

40
00:01:59.700 --> 00:02:03.000
To it is called translational invariants.

41
00:02:04.100 --> 00:02:05.600
The word I want to use is what?

42
00:02:08.300 --> 00:02:08.500
to

43
00:02:11.600 --> 00:02:12.100
become

44
00:02:13.600 --> 00:02:16.700
translationally invariant

45
00:02:17.500 --> 00:02:19.200
what this is what me, I'll

46
00:02:19.900 --> 00:02:23.000
there's another slide slide over here based on

47
00:02:23.600 --> 00:02:26.300
 the Kernel size and the stride. Yes, exactly. So the

48
00:02:26.300 --> 00:02:28.200
 output will depend on the size of the kernel.

49
00:02:29.400 --> 00:02:30.400
and destroyed

50
00:02:31.400 --> 00:02:34.600
small stories are better, but they are more time consuming.

51
00:02:36.600 --> 00:02:39.400
Does a maximal identify which kind of illusional curl

52
00:02:39.400 --> 00:02:40.600
 in the previously had the highest match?

53
00:02:41.500 --> 00:02:44.100
Does Max pool identify which kind of

54
00:02:44.100 --> 00:02:44.900
 illusional?

55
00:02:47.200 --> 00:02:48.200
Not the kernel.

56
00:02:49.100 --> 00:02:52.200
The sub-sample in The convolutional Matrix and if

57
00:02:52.200 --> 00:02:53.400
 I bring it back to the book.

58
00:02:54.600 --> 00:02:57.800
it is not the kernel from

59
00:02:57.800 --> 00:02:59.600
 which the filter from which we're getting the

60
00:03:00.700 --> 00:03:03.500
max value from the origin convolution

61
00:03:06.800 --> 00:03:08.600
so for example if I bring you back this

62
00:03:10.700 --> 00:03:11.000
here

63
00:03:12.100 --> 00:03:15.800
Do you see this? Do you see this grid this red this three

64
00:03:15.800 --> 00:03:16.900
 by three red grid

65
00:03:18.300 --> 00:03:21.100
So in this picture or in this corner?

66
00:03:22.800 --> 00:03:25.000
Let's say we what we actually want dark colors because

67
00:03:25.200 --> 00:03:30.000
 we want to find out the outlines. So we want to discard the

68
00:03:29.300 --> 00:03:32.200
 white background and focus only on

69
00:03:32.200 --> 00:03:32.600
 the

70
00:03:34.500 --> 00:03:39.000
outline the face. So here the strong signals will be the docker

71
00:03:37.000 --> 00:03:39.300
 pixels.

72
00:03:40.100 --> 00:03:42.500
So you can see here in this three by three.

73
00:03:43.400 --> 00:03:46.400
The largest value is the one

74
00:03:46.400 --> 00:03:47.200
 at the bottom right corner.

75
00:03:49.800 --> 00:03:51.300
And then for example if I come here.

76
00:03:55.100 --> 00:03:57.500
The strongest signal will be in the top left.

77
00:03:58.100 --> 00:03:58.700
top left

78
00:04:00.200 --> 00:04:00.500
corner

79
00:04:04.500 --> 00:04:05.700
I hope that answers your question.

80
00:04:10.700 --> 00:04:13.400
Again, the way you would arrange the numbers in the filter will

81
00:04:13.400 --> 00:04:15.100
 depend on the color Channel.

82
00:04:15.900 --> 00:04:18.100
And what you are trying to detect if I scroll

83
00:04:18.100 --> 00:04:18.400
 down here?

84
00:04:20.900 --> 00:04:23.600
Let me show you what what habits this

85
00:04:23.600 --> 00:04:25.000
 picture when you apply different filters.

86
00:04:26.700 --> 00:04:30.100
identity will obviously identity will give you

87
00:04:30.100 --> 00:04:32.500
 the same image, but for example if I put in

88
00:04:33.700 --> 00:04:34.400
blur

89
00:04:36.900 --> 00:04:39.100
you can see that it did

90
00:04:39.100 --> 00:04:40.200
 it work identity.

91
00:04:42.400 --> 00:04:45.200
It's very subtle. Let me reduce the

92
00:04:49.800 --> 00:04:50.500
numbers here

93
00:04:54.200 --> 00:04:55.200
Miss playing around.

94
00:04:55.900 --> 00:04:56.700
Darkness

95
00:05:01.200 --> 00:05:02.500
It's very solid but it is blurred.

96
00:05:03.400 --> 00:05:07.000
So, I mean the numbers would put in this in

97
00:05:06.300 --> 00:05:09.400
 this filter or kernel all depend

98
00:05:09.400 --> 00:05:10.100
 on what you're trying to do.

99
00:05:11.800 --> 00:05:13.800
I guess there was another link here which we can look up.

100
00:05:16.400 --> 00:05:16.700
Great.

101
00:05:23.600 --> 00:05:25.600
Okay. Well, let me come back here. Let me come back to the

102
00:05:27.500 --> 00:05:31.000
this point here. What do they mean by translationally invariant?

103
00:05:31.600 --> 00:05:34.400
But we already saw translation back in module 2

104
00:05:34.400 --> 00:05:34.800
 when we were

105
00:05:36.400 --> 00:05:39.700
When we took that plane and we applied shearing

106
00:05:39.700 --> 00:05:42.600
 to it, but there is this nice presentation from Harvard.

107
00:05:44.400 --> 00:05:45.600
Which does a good job of explaining?

108
00:05:47.600 --> 00:05:50.200
Or visualizing invariance. So

109
00:05:50.200 --> 00:05:52.300
 let me skip to that section.

110
00:05:55.300 --> 00:05:57.800
Yeah, so these are the different types of filters you can use.

111
00:05:59.100 --> 00:06:02.800
Again, we will use the word filter and kernel interchangeably. This is the identity. You

112
00:06:02.800 --> 00:06:03.700
 just put a one in here.

113
00:06:04.400 --> 00:06:05.300
You get the same picture?

114
00:06:06.600 --> 00:06:07.800
If you want add detection.

115
00:06:10.200 --> 00:06:11.100
You can use these numbers.

116
00:06:14.600 --> 00:06:14.800
Okay.

117
00:06:16.600 --> 00:06:17.400
sharpen if you want to

118
00:06:19.200 --> 00:06:20.600
pre-process the data

119
00:06:23.300 --> 00:06:25.300
Let me show you translation.

120
00:06:26.200 --> 00:06:26.600
This is an example.

121
00:06:27.500 --> 00:06:29.600
Simply one of the picture is off center.

122
00:06:31.100 --> 00:06:31.900
Here's another example.

123
00:06:32.700 --> 00:06:34.400
We have different types of invariants, right?

124
00:06:35.700 --> 00:06:38.300
Let's say in the c410 data

125
00:06:38.300 --> 00:06:38.500
 set.

126
00:06:39.400 --> 00:06:42.800
The pictures are merely in the center, but they

127
00:06:42.800 --> 00:06:45.500
 can be a little bit off center. Maybe the pictures too

128
00:06:45.500 --> 00:06:47.600
 big or something. Excuse me. The subject is too big.

129
00:06:48.300 --> 00:06:51.200
Or the subject is too small or here if it

130
00:06:51.200 --> 00:06:54.300
 may be rotated so here for example, the subject is

131
00:06:54.300 --> 00:06:57.300
 in the center, but it's rotated. The max pooling

132
00:06:57.300 --> 00:07:01.900
 is meant for this purpose. It's them it's to make the model resilient.

133
00:07:03.500 --> 00:07:05.100
to translations

134
00:07:06.700 --> 00:07:09.400
This is size and variance see exactly so

135
00:07:09.400 --> 00:07:12.900
 in some of the pictures and the c410 is

136
00:07:12.900 --> 00:07:15.300
 that the subject takes up the entire almost the inside

137
00:07:15.300 --> 00:07:17.200
 of the picture in some cases. It's small.

138
00:07:19.800 --> 00:07:22.300
Illumination, right? So it's the same object, but you can see because the light

139
00:07:23.200 --> 00:07:26.300
Is being emitted from different angles it can really

140
00:07:26.300 --> 00:07:26.600
 change.

141
00:07:28.900 --> 00:07:29.900
the content of the picture

142
00:07:31.100 --> 00:07:32.600
that's what Max is pulling is used for.
