WEBVTT - This file was automatically generated by VIMEO

0
00:00:00.700 --> 00:00:03.600
Now let me quickly show you the Matrix representation of

1
00:00:03.600 --> 00:00:06.300
 the same. These cells are in

2
00:00:06.300 --> 00:00:09.500
 Black because they stand for their weight. Excuse

3
00:00:09.500 --> 00:00:10.100
 me the bias.

4
00:00:11.300 --> 00:00:13.400
so the threshold for the activation function

5
00:00:14.300 --> 00:00:16.900
of course the order of

6
00:00:18.200 --> 00:00:20.800
Matrix multiplication is not computed commutative.

7
00:00:21.600 --> 00:00:24.300
So the number of rows must

8
00:00:24.300 --> 00:00:27.400
 match the number of columns in the excuse me. The number of columns must

9
00:00:27.400 --> 00:00:28.300
 match the number of rows.

10
00:00:29.800 --> 00:00:32.100
for the vector or Matrix on the

11
00:00:32.100 --> 00:00:33.600
 right, so we multiply this and we will get

12
00:00:34.700 --> 00:00:35.600
a new vector

13
00:00:36.300 --> 00:00:39.200
And what is this Vector? What are the components of the vector? Well, is

14
00:00:39.200 --> 00:00:40.100
 this product? It's the sum.

15
00:00:40.600 --> 00:00:43.400
It's the weight more. It's the random

16
00:00:43.400 --> 00:00:44.900
 weight multiplied by the bias.

17
00:00:46.100 --> 00:00:49.300
It's the input first input multiplied by

18
00:00:49.300 --> 00:00:52.400
 its weight the second to put multiply its weight and we do this for all

19
00:00:52.400 --> 00:00:53.300
 three perceptron so really

20
00:00:54.400 --> 00:00:57.200
And that's this what it is. So if we would if

21
00:00:57.200 --> 00:00:58.700
 we would take the sum of these products.

22
00:01:00.200 --> 00:01:02.700
this would be the components of the

23
00:01:04.200 --> 00:01:05.000
hidden layer

24
00:01:06.100 --> 00:01:06.700
and then what we do?

25
00:01:08.100 --> 00:01:09.600
Is we pass this vector?

26
00:01:10.600 --> 00:01:13.400
And I'm using Z here because that's the convention for

27
00:01:13.400 --> 00:01:15.500
 Activation to this activation function.

28
00:01:18.200 --> 00:01:21.600
And what the activation function will do is it will go through these components

29
00:01:21.600 --> 00:01:23.100
 check the signal.

30
00:01:23.900 --> 00:01:26.100
This one is negative 4 so it will be brought down to

31
00:01:26.100 --> 00:01:29.700
 zero and then what we're going to do is we're going to again append device

32
00:01:29.700 --> 00:01:32.300
 term the bias numerical value.

33
00:01:33.400 --> 00:01:34.400
added to the

34
00:01:35.200 --> 00:01:38.300
to the vector this activation Factor will then be passed on

35
00:01:38.300 --> 00:01:39.400
 to the

36
00:01:40.700 --> 00:01:41.800
the upper layer

37
00:01:42.200 --> 00:01:42.800
if you notice

38
00:01:43.700 --> 00:01:45.500
this Vector corresponds to

39
00:01:46.500 --> 00:01:46.800
this

40
00:01:47.700 --> 00:01:50.400
so 32. This is

41
00:01:50.400 --> 00:01:52.700
 one that this whole part is the one vector.

42
00:01:53.900 --> 00:01:55.000
We have three components.

43
00:01:56.200 --> 00:01:59.800
And these three components form the vector and this Vector will be passed to

44
00:01:59.800 --> 00:02:01.800
 the activation function of the last perceptron.

45
00:02:02.300 --> 00:02:03.200
And that's what we have here.

46
00:02:03.900 --> 00:02:04.500
So we do this.

47
00:02:06.300 --> 00:02:06.900
dot product

48
00:02:07.700 --> 00:02:09.400
and then we will have a single component.

49
00:02:10.600 --> 00:02:12.800
Once again, we'll output this to the activation function.

50
00:02:14.600 --> 00:02:17.500
the return value of this actually the evaluated value

51
00:02:17.500 --> 00:02:18.700
 of this activation function is

52
00:02:19.500 --> 00:02:20.000
zero

53
00:02:23.700 --> 00:02:26.100
So imagine we're trying to do we would try to

54
00:02:26.100 --> 00:02:28.700
 do binary classification. Is this a property or not?

55
00:02:29.300 --> 00:02:32.100
So let's say because the property was too small.

56
00:02:33.400 --> 00:02:36.200
The signal was too weak. And so we classify it

57
00:02:36.200 --> 00:02:36.900
 as a non-property.

58
00:02:39.100 --> 00:02:42.500
And this is true if you want to for example classify something as fraud or

59
00:02:42.500 --> 00:02:44.300
 not fraud spam or not spam.

60
00:02:45.700 --> 00:02:46.600
And that's really the idea.
