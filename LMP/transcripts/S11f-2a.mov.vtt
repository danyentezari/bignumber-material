WEBVTT - This file was automatically generated by VIMEO

0
00:00:01.400 --> 00:00:03.000
The first we will go ahead and import.

1
00:00:06.100 --> 00:00:07.300
our libraries

2
00:00:11.900 --> 00:00:13.900
we have tensorflow.

3
00:00:20.400 --> 00:00:20.800
we have

4
00:00:21.800 --> 00:00:24.100
Keras so tensorflow

5
00:00:31.300 --> 00:00:34.400
actually want to say from tension flow. We want to import the following

6
00:00:34.400 --> 00:00:34.800
 items.

7
00:00:36.700 --> 00:00:37.500
the data sets

8
00:00:40.500 --> 00:00:41.300
the layers

9
00:00:42.500 --> 00:00:43.200
and the models

10
00:00:46.700 --> 00:00:46.900
and

11
00:00:47.900 --> 00:00:50.400
You want to visualize our metrics? So we will import and

12
00:00:50.400 --> 00:00:52.400
 visualize the data set.

13
00:00:53.500 --> 00:00:56.500
Some of the data some of the pictures this data

14
00:00:56.500 --> 00:00:57.900
 citizens is a set of pictures.

15
00:00:58.900 --> 00:00:59.500
Matt

16
00:01:00.400 --> 00:01:02.700
plot lip dot Pi plot

17
00:01:05.300 --> 00:01:06.100
as PLT

18
00:01:14.200 --> 00:01:16.400
Now for those of you this session, we're able to see that video.

19
00:01:17.400 --> 00:01:18.300
That I referenced.

20
00:01:20.300 --> 00:01:20.700
or

21
00:01:23.600 --> 00:01:25.300
Adam the Adam algorithm

22
00:01:27.200 --> 00:01:28.000
Okay, great.

23
00:01:31.100 --> 00:01:31.600
so

24
00:01:33.100 --> 00:01:36.700
the next thing we want to do is import our data set.

25
00:01:39.500 --> 00:01:39.700
so

26
00:01:41.400 --> 00:01:42.600
from the data sets object

27
00:01:43.500 --> 00:01:44.600
I will use the method.

28
00:01:46.700 --> 00:01:49.100
load data, so C4 10

29
00:01:50.600 --> 00:01:53.300
C410 dot load data, let

30
00:01:53.300 --> 00:01:55.600
 me show you what C4 tenants so database of pictures.

31
00:01:56.600 --> 00:01:59.100
Small pictures and they are all

32
00:01:59.100 --> 00:02:00.800
 uniform in size.

33
00:02:02.100 --> 00:02:04.000
Now this method will return.

34
00:02:09.200 --> 00:02:12.600
training images testing images accompanied by

35
00:02:12.600 --> 00:02:13.200
 their labels

36
00:02:15.200 --> 00:02:18.800
If these are terms with which you are not familiar, I will explain

37
00:02:18.800 --> 00:02:19.700
 them to you in a moment.

38
00:02:20.400 --> 00:02:20.800
So we have

39
00:02:24.800 --> 00:02:25.700
a train images

40
00:02:30.200 --> 00:02:31.200
and the train labels

41
00:02:38.800 --> 00:02:39.600
test images

42
00:02:47.200 --> 00:02:48.000
test labels

43
00:02:50.300 --> 00:02:53.600
Well this downloads. Let me show you the C4 database. This

44
00:02:53.600 --> 00:02:53.900
 is it.

45
00:03:02.800 --> 00:03:03.400
Here we go.

46
00:03:09.700 --> 00:03:12.200
It is a data set that contains 60,000 pictures.

47
00:03:13.200 --> 00:03:15.100
That are only 32 by 32.

48
00:03:16.100 --> 00:03:16.700
all color

49
00:03:18.100 --> 00:03:21.200
and all of these 60,000 pictures fought into

50
00:03:21.200 --> 00:03:22.100
 one of ten classes.

51
00:03:23.200 --> 00:03:24.900
Here are focuses.

52
00:03:29.500 --> 00:03:31.300
the fundamentals of neural networks, so

53
00:03:32.600 --> 00:03:34.000
Once we covered this.

54
00:03:35.500 --> 00:03:36.600
Example and we understand.

55
00:03:37.800 --> 00:03:38.700
what the

56
00:03:40.100 --> 00:03:40.700
why we

57
00:03:43.800 --> 00:03:46.500
Have this particular architecture our new

58
00:03:46.500 --> 00:03:49.600
 electron people will then be able to well build upon what

59
00:03:49.600 --> 00:03:49.800
 we know?

60
00:03:51.200 --> 00:03:54.400
And then we can work with other pre-trade models

61
00:03:54.400 --> 00:03:57.100
 or even come up with our own models so

62
00:03:57.100 --> 00:03:58.300
 we can go to research papers.

63
00:03:59.700 --> 00:04:02.100
and they will make reference to different types

64
00:04:02.100 --> 00:04:02.300
 of

65
00:04:03.500 --> 00:04:06.200
neural network layers, but once we

66
00:04:06.200 --> 00:04:08.700
 have a foundational understanding we can

67
00:04:09.500 --> 00:04:12.200
create our own architecture and make sense

68
00:04:12.200 --> 00:04:12.200
 of

69
00:04:13.600 --> 00:04:14.100
those research papers

70
00:04:15.400 --> 00:04:18.400
So the pictures are these are some of the pictures they're very

71
00:04:18.400 --> 00:04:19.900
 small 32 by 32.

72
00:04:22.800 --> 00:04:25.200
Okay. Well, we're gonna train a model

73
00:04:25.200 --> 00:04:29.300
 that is that will be able to classify pictures like

74
00:04:29.300 --> 00:04:30.700
 so like the ones you're seeing here.

75
00:04:31.400 --> 00:04:34.400
And they all have certain characteristics. So for example the subject.

76
00:04:35.700 --> 00:04:38.800
Of the picture is in the center of the picture like

77
00:04:38.800 --> 00:04:40.300
 this car this bird.

78
00:04:41.200 --> 00:04:41.900
this bird

79
00:04:43.400 --> 00:04:43.700
this

80
00:04:46.500 --> 00:04:47.300
these deers

81
00:04:48.400 --> 00:04:49.000
moose

82
00:04:52.100 --> 00:04:53.700
You don't have any of these into Pie by the way.

83
00:04:55.000 --> 00:04:55.200
so

84
00:04:57.200 --> 00:04:57.900
my Elks, there we go.

85
00:04:59.100 --> 00:05:02.500
What do we call the class of such creatures deers whose elk?

86
00:05:03.200 --> 00:05:06.000
I think most are quite large right there. I think that the largest

87
00:05:06.000 --> 00:05:06.300
 of

88
00:05:07.800 --> 00:05:08.400
their type

89
00:05:12.200 --> 00:05:12.300
but yeah.

90
00:05:14.500 --> 00:05:16.200
all of these big

91
00:05:17.900 --> 00:05:20.600
pictures have the object running the

92
00:05:20.600 --> 00:05:20.600
 center.

93
00:05:21.800 --> 00:05:24.600
So the more all of that we are going to build or

94
00:05:24.600 --> 00:05:29.200
 train can only accurately classify

95
00:05:28.200 --> 00:05:30.900
 pictures of this nature.

96
00:05:31.700 --> 00:05:32.000
Square

97
00:05:33.300 --> 00:05:34.000
in size

98
00:05:35.600 --> 00:05:38.600
and the subject is clearly right in the center. And of

99
00:05:38.600 --> 00:05:41.100
 course it belongs to one of these same classes. So if you go if

100
00:05:41.100 --> 00:05:41.900
 you want to predict, let's say

101
00:05:42.600 --> 00:05:42.900
a

102
00:05:46.600 --> 00:05:47.100
I don't know.

103
00:05:49.600 --> 00:05:52.600
A basketball or a

104
00:05:52.600 --> 00:05:52.600
 person?

105
00:05:53.900 --> 00:05:54.900
It will not be able to do so.

106
00:05:57.300 --> 00:06:00.100
or what I will do well when we see it's not going to be able to do so

107
00:06:00.100 --> 00:06:00.500
 it's going to

108
00:06:02.200 --> 00:06:04.300
Put them into the class that is closest.

109
00:06:08.600 --> 00:06:10.500
Or the class that is most probable.

110
00:06:11.700 --> 00:06:14.100
which will be incorrect anyway, but again, this is

111
00:06:14.100 --> 00:06:15.400
 the point here is not to create a

112
00:06:16.200 --> 00:06:19.200
Production level machine learning model, but just to

113
00:06:19.200 --> 00:06:21.300
 understand the fundamentals here, okay.

114
00:06:22.500 --> 00:06:25.000
But return here now that the data set has been

115
00:06:25.000 --> 00:06:25.200
 downloaded.

116
00:06:26.800 --> 00:06:29.000
Let me it's right now in the

117
00:06:29.500 --> 00:06:32.000
 environment. So I don't think it will appear here in the files and folders.

118
00:06:32.800 --> 00:06:35.700
So it's actually they are downloaded into the memory the

119
00:06:35.700 --> 00:06:37.600
 temporary storage of the computer.

120
00:06:38.600 --> 00:06:40.700
the instance on Google Cloud

121
00:06:42.800 --> 00:06:45.400
so if I were to type in LS by the

122
00:06:45.400 --> 00:06:46.100
 way in call app

123
00:06:46.900 --> 00:06:47.500
you are able to.

124
00:06:49.600 --> 00:06:52.600
Work with two programming languages and of course markdown markdown,

125
00:06:52.600 --> 00:06:55.300
 we don't call a program with language if you want to work

126
00:06:55.300 --> 00:06:57.700
 with the batch script you put you put in a percent.

127
00:07:00.700 --> 00:07:03.600
And this exclamation mark tells collab that

128
00:07:03.600 --> 00:07:06.300
 what follows after the exclamation mark will

129
00:07:06.300 --> 00:07:06.900
 be bastard.

130
00:07:07.400 --> 00:07:08.400
So we can use the LS.

131
00:07:09.200 --> 00:07:10.300
Command to list.

132
00:07:11.300 --> 00:07:13.900
The contents of what we have just downloaded.

133
00:07:16.900 --> 00:07:19.200
Or actually the contents of this folder.

134
00:07:20.800 --> 00:07:21.200
Okay.

135
00:07:22.300 --> 00:07:24.200
What we want needed in this example, though.

136
00:07:25.800 --> 00:07:27.000
Let's carry on.

137
00:07:29.100 --> 00:07:29.900
then we have

138
00:07:37.400 --> 00:07:39.700
the images in the form of a tensor

139
00:07:41.700 --> 00:07:44.200
so if you remember by the way you tensorflow is

140
00:07:46.200 --> 00:07:48.200
built on top of numpy

141
00:07:49.700 --> 00:07:49.800
so

142
00:07:51.500 --> 00:07:54.200
data will be for will be stored in the form of a numpy.

143
00:07:55.500 --> 00:07:59.200
Object and if you remember we said that a numpy object as

144
00:07:58.200 --> 00:08:01.600
 three attributes

145
00:08:01.600 --> 00:08:02.000
 and the data.

146
00:08:03.600 --> 00:08:05.400
So one of those attributes is shape.

147
00:08:06.800 --> 00:08:09.100
And hereby shaping me this shape of the tensor.

148
00:08:10.200 --> 00:08:10.300
so

149
00:08:11.700 --> 00:08:12.800
I want you to imagine.

150
00:08:13.900 --> 00:08:16.500
A tensor to be a collection of matrices. Let

151
00:08:16.500 --> 00:08:17.300
 me show you a picture here.

152
00:08:22.800 --> 00:08:24.800
There's a glory that I have created.

153
00:08:25.700 --> 00:08:26.000
in

154
00:08:27.500 --> 00:08:28.400
a Word document

155
00:08:29.900 --> 00:08:31.400
which I will share with you as well.

156
00:08:33.200 --> 00:08:35.700
Let me just because I have the picture in there. Oh Siri.
