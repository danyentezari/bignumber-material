WEBVTT - This file was automatically generated by VIMEO

0
00:00:00.700 --> 00:00:03.400
This is an example. So this is applications both

1
00:00:03.400 --> 00:00:03.800
 in.

2
00:00:05.100 --> 00:00:06.300
linear programming

3
00:00:08.900 --> 00:00:11.700
And by extension, it has applications

4
00:00:11.700 --> 00:00:14.900
 and economics in finance and

5
00:00:14.900 --> 00:00:16.900
 transportation or Logistics.

6
00:00:18.600 --> 00:00:21.200
And so look at what we've done here again, we've we're using

7
00:00:21.200 --> 00:00:24.100
 row operations. So we for example

8
00:00:24.100 --> 00:00:27.600
 add one equation to the other equation or

9
00:00:27.600 --> 00:00:30.400
 we multiply one equation to another equation or a

10
00:00:30.400 --> 00:00:33.200
 multiply one equation with some number and then

11
00:00:33.200 --> 00:00:35.100
 add it to another equation.

12
00:00:36.400 --> 00:00:38.900
If you do this by hand, it is very cumbersome.

13
00:00:40.300 --> 00:00:43.300
Okay, the linear example, I still linear program

14
00:00:43.300 --> 00:00:46.200
 example actually was very trivial it was we only had two because here

15
00:00:46.200 --> 00:00:49.100
 we have three and even in this case you have to do a lot

16
00:00:49.100 --> 00:00:52.500
 of addition subtraction multiplication to eventually find the

17
00:00:52.500 --> 00:00:55.700
 route. So here are the roots X is equal to 2 Y is equal to negative one is equal

18
00:00:55.700 --> 00:00:58.100
 to 3 and it's called the reduced row Echelon form because

19
00:00:58.100 --> 00:00:58.500
 look here.

20
00:00:59.700 --> 00:01:02.500
what happens is that in order to know that

21
00:01:02.500 --> 00:01:06.500
 you've actually found the solution or

22
00:01:05.500 --> 00:01:08.400
 the roots for all three equations or the

23
00:01:08.400 --> 00:01:11.500
 roots for all of these variables is you get this form you

24
00:01:11.500 --> 00:01:14.500
 get this diagonal form you can you

25
00:01:14.500 --> 00:01:17.800
 see how we have why excuse me one across the principle diagonal

26
00:01:18.900 --> 00:01:21.300
When your Matrix looks like this, let me

27
00:01:21.300 --> 00:01:21.800
 zoom in.

28
00:01:22.500 --> 00:01:26.700
When your Matrix looks like this or you have one in

29
00:01:26.700 --> 00:01:29.200
 the first row and zero zero then one in the second row

30
00:01:29.200 --> 00:01:29.600
 in the middle.

31
00:01:30.300 --> 00:01:33.200
Hey this diagonal basically, once your Matrix looks like that

32
00:01:33.200 --> 00:01:36.200
 you can then substitute the values back into your equation.

33
00:01:36.200 --> 00:01:39.400
 So for example X Phase 1 to become

34
00:01:39.400 --> 00:01:40.300
 zero three becomes zero.

35
00:01:41.300 --> 00:01:44.500
And now it becomes two. This is how you would what I

36
00:01:44.500 --> 00:01:45.700
 found the roots of your

37
00:01:48.500 --> 00:01:51.700
A roots of these of all three equations. And again

38
00:01:51.700 --> 00:01:54.400
 I said, this is important. Why because let's say

39
00:01:54.400 --> 00:01:55.500
 you have multiple models.

40
00:01:56.300 --> 00:01:58.100
again Financial modeling, for example

41
00:01:58.900 --> 00:02:02.700
If we said that a model is supposed to be representation not

42
00:02:01.700 --> 00:02:05.300
 necessarily technical precise representation,

43
00:02:04.300 --> 00:02:07.300
 but representation on the

44
00:02:07.300 --> 00:02:07.500
 less.

45
00:02:08.200 --> 00:02:11.200
So models which come the form of equations most of

46
00:02:11.200 --> 00:02:14.600
 the time if you were to find the roots of those

47
00:02:14.600 --> 00:02:17.200
 equations, then you would have understood why this

48
00:02:17.200 --> 00:02:18.600
 model behaves a certain way.

49
00:02:19.800 --> 00:02:20.000
Okay.

50
00:02:22.400 --> 00:02:25.800
The the the model the equation for force

51
00:02:25.800 --> 00:02:28.700
 is one example Force equals mass times acceleration, okay.

52
00:02:29.700 --> 00:02:32.100
So if you're able to find the roots, then you can get to

53
00:02:32.100 --> 00:02:35.600
 the essence of the model and then you can use that to for

54
00:02:35.600 --> 00:02:37.800
 regression and machine learning.

55
00:02:38.800 --> 00:02:40.800
okay, so in the real world you actually have

56
00:02:41.800 --> 00:02:44.600
you have to handle multiple models at

57
00:02:44.600 --> 00:02:44.800
 the same time.

58
00:02:45.600 --> 00:02:49.200
And linear algebra gives us techniques for that. Now I

59
00:02:48.200 --> 00:02:51.200
 said earlier that this is very cumbersome to

60
00:02:51.200 --> 00:02:54.100
 do like you have to do a lot of manual arithmetic which brings us to

61
00:02:54.100 --> 00:02:54.900
 python.

62
00:02:56.600 --> 00:02:58.900
with python we can't solve systems of

63
00:02:59.600 --> 00:03:00.800
linear equations like this

64
00:03:02.200 --> 00:03:03.400
almost instantaneously

65
00:03:04.100 --> 00:03:07.000
so we don't have to do this by hand, but we still want to

66
00:03:07.200 --> 00:03:08.300
 have the capability to do it.

67
00:03:08.800 --> 00:03:11.200
So what we will do is we can we can do

68
00:03:11.200 --> 00:03:12.800
 linear programming.

69
00:03:14.300 --> 00:03:14.600
in

70
00:03:17.400 --> 00:03:18.200
you know a large.

71
00:03:19.600 --> 00:03:21.900
sets of equations on large sets of constraints

72
00:03:23.300 --> 00:03:24.600
with a library like numpy.

73
00:03:26.400 --> 00:03:29.200
Okay. Anyway, this was supposed to give you a glimpse into.

74
00:03:30.100 --> 00:03:30.800
the first part of

75
00:03:32.400 --> 00:03:35.700
The first let's say have of linear

76
00:03:35.700 --> 00:03:36.900
 algebra, which I said.

77
00:03:37.600 --> 00:03:38.900
is systems of linear equations
