WEBVTT - This file was automatically generated by VIMEO

0
00:00:01.200 --> 00:00:02.400
And then we train the model.

1
00:00:11.100 --> 00:00:11.400
Empire

2
00:00:17.600 --> 00:00:20.300
and then we

3
00:00:20.300 --> 00:00:22.100
 go model dot train.

4
00:00:25.200 --> 00:00:27.000
So this is going to learn from the first.

5
00:00:28.100 --> 00:00:28.800
safety

6
00:00:29.300 --> 00:00:30.000
thousand images

7
00:00:32.100 --> 00:00:33.100
but then to evaluate

8
00:00:34.200 --> 00:00:37.200
this model to see if it's overfitting or not. We'll use the

9
00:00:37.200 --> 00:00:40.400
 test data set if we look at the metric after training.

10
00:00:45.200 --> 00:00:48.200
And if it's a very high score, it's very unlikely to

11
00:00:48.200 --> 00:00:49.700
 be 100% But if it's very high.

12
00:00:50.400 --> 00:00:53.200
It could be overfitting. Well, the only way

13
00:00:53.200 --> 00:00:56.300
 for us to know if it is overfitting is to get to the test data set.

14
00:00:58.300 --> 00:01:01.300
But if it's poor even from the start even from

15
00:01:01.300 --> 00:01:04.100
 the 20% then that's on their fitting so we don't

16
00:01:04.100 --> 00:01:07.400
 even need to proceed to the test test it is

17
00:01:07.400 --> 00:01:07.400
 that

18
00:01:10.700 --> 00:01:13.100
So yes, if it's perfect 100% something might be.

19
00:01:14.300 --> 00:01:18.000
Something might be off because it's very unlikely

20
00:01:17.200 --> 00:01:19.700
 for you to get a hundred percent accuracy.

21
00:01:22.500 --> 00:01:26.200
Okay, then what am I looking for? Yes training images.

22
00:01:27.600 --> 00:01:30.600
the train labels which here correspond to the class of the

23
00:01:32.600 --> 00:01:32.900
picture

24
00:01:38.400 --> 00:01:38.900
and which

25
00:01:41.300 --> 00:01:44.300
Data set. We're going to use for validating.

26
00:01:45.700 --> 00:01:46.300
validation

27
00:01:48.900 --> 00:01:51.300
So for validation, we're going to use the test data

28
00:01:51.300 --> 00:01:51.500
 set.

29
00:01:52.500 --> 00:01:53.900
So I'm going to go test images.

30
00:01:55.800 --> 00:01:57.000
to pull test images

31
00:02:00.100 --> 00:02:00.400
test

32
00:02:03.200 --> 00:02:04.300
that would be yes.

33
00:02:07.100 --> 00:02:07.900
I'm gonna run this.

34
00:02:15.900 --> 00:02:18.500
And it's losses dot losses.

35
00:02:23.900 --> 00:02:26.700
And then the other mistake is the epochs number

36
00:02:26.700 --> 00:02:27.600
 of epochs.

37
00:02:29.200 --> 00:02:30.200
a box

38
00:02:31.100 --> 00:02:34.200
epox refers to the number of times you're going to feed this data through

39
00:02:34.200 --> 00:02:34.600
 the network.

40
00:02:36.800 --> 00:02:39.200
For larger models you want

41
00:02:39.200 --> 00:02:42.600
 to be careful with this? Because if you set a high number of epochs while

42
00:02:42.600 --> 00:02:45.500
 that may lead to higher accuracy, it can

43
00:02:45.500 --> 00:02:47.000
 take a long time for it to

44
00:02:48.700 --> 00:02:49.300
terminate

45
00:02:50.100 --> 00:02:51.900
so that that particular cell terminate.

46
00:02:53.500 --> 00:02:56.300
so that is why sometimes may want to upgrade your

47
00:02:58.500 --> 00:03:01.300
environment in colab you can you have

48
00:03:01.300 --> 00:03:02.000
 three tiers.

49
00:03:04.700 --> 00:03:07.600
You keep that in mind and this should be validation data.

50
00:03:08.300 --> 00:03:09.000
one more time

51
00:03:12.500 --> 00:03:15.300
Hopefully this won't take more than a few minutes, but I'll just proceed with

52
00:03:15.300 --> 00:03:17.000
 the other lines of code.
